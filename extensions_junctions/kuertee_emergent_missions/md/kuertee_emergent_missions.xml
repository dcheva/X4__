<?xml version="1.0" encoding="utf-8"?>
<mdscript name="kuertee_emergent_missions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="ModFeatures" namespace="this" version="2">
			<!--
				Notes:
				1. signal_cue_instantly ModFeatures_Init at the mod's ModInstallComplete cue (at new game) Init cue (at every game load).
				2. search and destroy mission targets: global.$Bounties.$pilots
				3. active search and destroy missions: global.$Missions_Hunts.$missions_active
			-->
			<conditions>
				<check_any>
					<event_cue_signalled />
					<event_cue_signalled cue="md.Setup.GameStart" />
					<event_game_loaded />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="'event.name: ' + event.name" />
				<set_value name="global.$kEM_ModFeatures" exact="this" />
			</actions>
			<patch sinceversion="2">
				<debug_text text="'patch sinceversion 2, state: ' + this.state" />
				<set_value name="global.$kEM_ModFeatures" exact="this" />
			</patch>
			<cues>
				<cue name="ModFeatures_Init">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_ui_triggered screen="'OptionsMenu'" control="'menu_close'" />
						</check_any>
					</conditions>
					<actions>
						<set_value name="kEMissions.$IsSWIExists" exact="@ware.tie_fighter != null and (not UserSettings.$isUseFullMod)" />
						<debug_text text="'event.name: ' + event.name + 'kEMissions.$IsSWIExists: ' + kEMissions.$IsSWIExists" />
						<signal_cue_instantly cue="md.kuertee_emergent_missions_requirements_by_faction.Requirements_Init" />
						<run_actions ref="Requirements_GetForFaction">
							<param name="Faction" value="faction.player" />
						</run_actions>
						<do_if value="not kEMissions.$IsSWIExists">
							<!--
								8888b.  888888 888888    db    88   88 88     888888
								 8I  Yb 88__   88__     dPYb   88   88 88       88
								 8I  dY 88""   88""    dP__Yb  Y8   8P 88  .o   88
								8888Y"  888888 88     dP""""Yb `YbodP' 88ood8   88
							 -->
							<set_value name="ModFeatures.$factions_noBountyMissions" exact="[]" />
						</do_if>
						<do_elseif value="kEMissions.$IsSWIExists">
							<!--
								.dP"Y8 Yb        dP 88
								`Ybo."  Yb  db  dP  88
								o.`Y8b   YbdPYbdP   88
								8bodP'    YP  YP    88
							 -->
							<set_value name="ModFeatures.$factions_noBountyMissions" exact="[faction.indibhg, faction.sith, faction.xenon, faction.khaak, faction.huttpirates, faction.mandoraiders, faction.valarian, faction.blacksun, faction.hapes]" />
						</do_elseif>
						<reset_cue cue="this" />
					</actions>
				</cue>
			</cues>
		</cue>
		<cue name="OnLuaLoaderReady">
			<conditions>
				<check_any>
					<event_cue_signalled />
					<event_ui_triggered screen="'Lua_Loader'" control="'Ready'" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="'event.name: ' + event.name" />
				<raise_lua_event name="'Lua_Loader.Load'" param="'extensions.kuertee_ui_extensions.ui.kuertee_menu_map'"/>
				<do_if value="@ware.tie_fighter != null">
					<raise_lua_event name="'Lua_Loader.Load'" param="'extensions.StarWarsMod_M1.ui.kuertee_emergent_missions'" />
				</do_if>
				<do_else>
					<raise_lua_event name="'Lua_Loader.Load'" param="'extensions.kuertee_emergent_missions.ui.kuertee_emergent_missions'" />
				</do_else>
			</actions>
		</cue>
		<cue name="OnLuaLoaderReadyCompleted">
			<conditions>
				<event_cue_completed cue="OnLuaLoaderReady" />
			</conditions>
			<actions>
				<reset_cue cue="OnLuaLoaderReady" />
				<reset_cue cue="this" />
			</actions>
		</cue>
		<cue name="ResetAll" namespace="this">
			<conditions>
				<check_any>
					<event_cue_signalled />
					<check_all>
						<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
						<check_value value="event.param3.$text == 'reset emissions'" />
					</check_all>
				</check_any>
			</conditions>
			<actions>
				<debug_text text="@event.param3" />
				<debug_text text="'reset_cue ' + kEMissions" />
				<reset_cue cue="UserSettings" />
				<reset_cue cue="kEMissions" />
			</actions>
			<cues>
				<cue name="ResetAll2">
					<actions>
						<signal_cue cue="UserSettings" />
						<debug_text text="'signal_cue ' + kEMissions" />
						<signal_cue cue="kEMissions" />
						<raise_lua_event name="'Chat_Window_API.Print'" param="'ResetAll ' + kEMissions + ' done.'" />
						<reset_cue cue="parent" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
			</cues>
		</cue>
		<cue name="UserSettings" version="7">
			<conditions>
				<check_any>
					<event_cue_signalled />
					<event_cue_signalled cue="md.Setup.GameStart" />
					<event_game_loaded />
				</check_any>
			</conditions>
			<actions>
				<set_value name="UserSettings.$debugChance" exact="100" comment="will be set to 0 at OnModInstallComplete" />
				<set_value name="UserSettings.$debugChance_factionAI" exact="0" />
				<set_value name="UserSettings.$debugChance_missionMayday" exact="0" />
				<set_value name="UserSettings.$debugChance_missionEscort" exact="0" />
				<set_value name="UserSettings.$debugChance_missionRaid" exact="0" />
				<set_value name="UserSettings.$debugChance_missionHunt" exact="0" />
				<set_value name="UserSettings.$debugChance_enemyTargets" exact="0" />
				<set_value name="UserSettings.$debugChance_bounties" exact="0" />
				<!-- user settings -->
				<set_value name="UserSettings.$req_none" exact="12" />
				<set_value name="UserSettings.$req_rel_neutral" exact="13" />
				<set_value name="UserSettings.$req_rel_friend" exact="14" />
				<set_value name="UserSettings.$req_rel_warSubscription" exact="15" />
				<set_value name="UserSettings.$req_repu_defender" exact="17" />
				<set_value name="UserSettings.$req_repu_defenderOrMercenary" exact="18" />
				<set_value name="UserSettings.$req_repu_defenderOrVigilante" exact="19" />
				<set_value name="UserSettings.$req_repu_defenderOrMercenaryOrVigilante" exact="20" />
				<!-- <set_value name="Requirements.$mission_escort_req_relLevel" exact="$req_rel_friend" />
				<set_value name="Requirements.$mission_escort_req_repuLevel" exact="$req_none" />
				<set_value name="Requirements.$mission_patrol_req_relLevel" exact="$req_rel_friend" />
				<set_value name="Requirements.$mission_patrol_req_repuLevel" exact="$req_repu_defenderOrVigilante" />
				<set_value name="Requirements.$mission_raid_req_relLevel" exact="$req_rel_warSubscription" />
				<set_value name="Requirements.$mission_raid_req_repuLevel" exact="$req_repu_defender" />
				<set_value name="Requirements.$mission_defendPirate_req_relLevel" exact="$req_rel_neutral" />
				<set_value name="Requirements.$mission_defendPirate_req_repuLevel" exact="$req_repu_defenderOrMercenaryOrVigilante" /> -->
				<set_value name="UserSettings.$rewardMult" exact="50.0" />
				<set_value name="UserSettings.$gateDistance_missionOffers" exact="3" />
				<set_value name="UserSettings.$missionHandlerNPC_alwaysSpawnAtStation" exact="false" />
				<set_value name="UserSettings.$isUseFullMod" exact="false" />
			</actions>
			<patch sinceversion="2">
				<debug_text text="'patch sinceversion 2, state: ' + this.state" />
				<set_value name="UserSettings.$missionHandlerNPC_alwaysSpawnAtStation" exact="false" />
			</patch>
			<patch sinceversion="3">
				<debug_text text="'patch sinceversion 3, state: ' + this.state" />
				<set_value name="UserSettings.$debugChance_bounties" exact="0" />
			</patch>
			<patch sinceversion="4">
				<debug_text text="'patch sinceversion 4, state: ' + this.state" />
				<set_value name="UserSettings.$debugChance_missionMayday" exact="0" />
				<set_value name="UserSettings.$debugChance_missionEscort" exact="0" />
				<set_value name="UserSettings.$debugChance_missionRaid" exact="0" />
				<set_value name="UserSettings.$debugChance_missionHunt" exact="0" />
			</patch>
			<patch sinceversion="5">
				<debug_text text="'patch sinceversion 5, state: ' + this.state" />
				<set_value name="UserSettings.$rewardMult" exact="UserSettings.$rewardMult * 100" />
			</patch>
			<patch sinceversion="6">
				<debug_text text="'patch sinceversion 6, state: ' + this.state" />
				<set_value name="UserSettings.$isUseFullMod" exact="false" />
			</patch>
			<patch sinceversion="7">
				<debug_text text="'patch sinceversion 7, state: ' + this.state" />
				<remove_value name="$isDoDebug1" />
				<remove_value name="$isDoDebug2" />
			</patch>
		</cue>
		<cue name="kEMissions" namespace="this" version="5">
			<conditions>
				<check_any>
					<event_cue_signalled />
					<event_cue_signalled cue="md.Setup.GameStart" />
					<event_game_loaded />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="'event.name: ' + event.name" />
				<!-- constants -->
				<set_value name="kEMissions.$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
				<set_value name="kEMissions.$attentionInZoneAndNearer" exact="[attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
				<set_value name="kEMissions.$attentionVisibleAndNearer" exact="[attention.visible, attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
				<set_value name="kEMissions.$attentionAdjacentZoneAndNearer" exact="[attention.adjacentzone, attention.visible, attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
				<!-- sector classifications -->
				<set_value name="kEMissions.$sector_home" exact="111" />
				<set_value name="kEMissions.$sector_territory" exact="112" />
				<set_value name="kEMissions.$sector_frontier" exact="113" />
				<set_value name="kEMissions.$sector_foreignHome" exact="114" />
				<set_value name="kEMissions.$sector_foreignTerritory" exact="115" />
				<set_value name="kEMissions.$sector_enemyHome" exact="116" />
				<set_value name="kEMissions.$sector_enemyTerritory" exact="117" />
				<set_value name="kEMissions.$sector_free" exact="118" />
				<set_value name="kEMissions.$sectorDifficultyByClassification" exact="table[
					{kEMissions.$sector_home}            = 1,
					{kEMissions.$sector_territory}       = 1,
					{kEMissions.$sector_foreignHome}     = 1,
					{kEMissions.$sector_foreignTerritory}= 1,
					{kEMissions.$sector_frontier}        = 1.5,
					{kEMissions.$sector_free}            = 1.5,
					{kEMissions.$sector_enemyTerritory}  = 2,
					{kEMissions.$sector_enemyHome}       = 2
				]" />
				<!-- difficulty values -->
				<set_value name="kEMissions.$difficultyValues" exact="table[
					{level.veryeasy} = 0,
					{level.easy}     = 1,
					{level.medium}   = 2,
					{level.hard}     = 3,
					{level.veryhard} = 4
				]" />
				<set_value name="kEMissions.$missionNPCByShip" exact="table[]" />
				<set_value name="kEMissions.$missionType_mayday" exact="101" />
				<set_value name="kEMissions.$missionType_escort" exact="102" />
				<set_value name="kEMissions.$missionType_patrol" exact="103" />
				<set_value name="kEMissions.$missionType_raid" exact="104" />
				<set_value name="kEMissions.$missionType_defendPirate" exact="105" />
				<set_value name="kEMissions.$missionType_hunt" exact="106" />
			</actions>
			<patch sinceversion="2">
				<debug_text text="'patch sinceversion 2, state: ' + this.state" />
				<set_value name="kEMissions.$attentionAdjacentZoneAndNearer" exact="[attention.adjacentzone, attention.visible, attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
			</patch>
			<patch sinceversion="3">
				<debug_text text="'patch sinceversion 3, state: ' + this.state" />
				<set_value name="$removes" exact="[]" />
				<do_for_each name="$ship" in="kEMissions.$missionNPCByShip.keys.list">
					<set_value name="$actor" exact="kEMissions.$missionNPCByShip.{$ship}" />
					<set_value name="$dbId" exact="'' + $actor" />
					<debug_text text="'pre: ' + $ship + ' (' + @$ship.knownname + ', ' + @$ship.idcode + '): ' + $actor + ' (dbId: ' + $dbId + ' knownname: ' + @$actor.knownname + ', exists: ' + @$actor.exists + ', room: ' + @$actor.room + ', class: ' + @$actor.class + ', realclass: ' + @$actor.realclass + ', macro: ' + @$actor.macro + ')'" />
					<do_if value="$dbId == '0x0'">
						<append_to_list name="$removes" exact="$ship" />
					</do_if>
				</do_for_each>
				<do_for_each name="$ship" in="$removes">
					<remove_value name="kEMissions.$missionNPCByShip.{$ship}" />
				</do_for_each>
				<do_for_each name="$ship" in="kEMissions.$missionNPCByShip.keys.list">
					<set_value name="$actor" exact="kEMissions.$missionNPCByShip.{$ship}" />
					<set_value name="$dbId" exact="'' + $actor" />
					<debug_text text="'post: ' + $ship + ' (' + @$ship.knownname + ', ' + @$ship.idcode + '): ' + $actor + ' (dbId: ' + $dbId + ' knownname: ' + @$actor.knownname + ', exists: ' + @$actor.exists + ', room: ' + @$actor.room + ', class: ' + @$actor.class + ', realclass: ' + @$actor.realclass + ', macro: ' + @$actor.macro + ')'" />
				</do_for_each>
			</patch>
			<patch sinceversion="5">
				<debug_text text="'patch sinceversion 5, state: ' + this.state" />
				<set_value name="kEMissions.$missionType_hunt" exact="106" />
			</patch>
			<cues>
				<cue name="Init">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
					</conditions>
					<actions>
						<debug_text text="'event.name: ' + event.name + ', UserSettings.$debugChance: ' + UserSettings.$debugChance" />
						<get_factions_by_tag result="$validFactions" tag="tag.economic"/>
						<get_factions_by_tag result="$validFactions2" tag="tag.plunder"/>
						<do_all counter="$i" exact="$validFactions2.count">
							<do_if value="not $validFactions.indexof.{$validFactions2.{$i}}">
								<append_to_list name="$validFactions" exact="$validFactions2.{$i}" />
							</do_if>
						</do_all>
						<remove_value name="$validFactions2" />
						<debug_text text="'$validFactions: ' + $validFactions" chance="UserSettings.$debugChance" />
						<signal_cue_instantly cue="ModFeatures_Init" />
						<!-- <reset_cue cue="this" /> -->
					</actions>
					<cues>
						<cue name="Init2" checktime="player.age + 3s">
							<actions>
								<do_if value="UserSettings.$debugChance_missionRaid_patch?">
									<set_value name="UserSettings.$debugChance_missionRaid" exact="UserSettings.$debugChance_missionRaid_patch" />
									<remove_value name="UserSettings.$debugChance_missionRaid_patch" />
								</do_if>
								<reset_cue cue="parent" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="OnOptionsMenuClose" namespace="this">
					<conditions>
						<event_ui_triggered screen="'OptionsMenu'" control="'menu_close'" />
					</conditions>
					<actions>
						<reset_cue cue="this" />
					</actions>
				</cue>
				<cue name="OnModInstall">
					<actions>
						<debug_text text="'UserSettings.$debugChance: ' + UserSettings.$debugChance" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
				<cue name="Requirements" namespace="this">
					<actions>
						<!-- will be populated by Requirements_GetForFaction -->
					</actions>
				</cue>
 				<library name="Requirements_GetForFaction" purpose="run_actions">
					<params>
						<param name="Faction" />
					</params>
					<actions>
						<set_value name="$RequirementsByFaction" exact="md.kuertee_emergent_missions_requirements_by_faction.Requirements.$ByFaction" />
						<do_if value="UserSettings.$isUseFullMod">
							<set_value name="$Faction" exact="faction.player" />
							<set_value name="Requirements.$mission_escort_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_escort_req_relLevel" />
							<set_value name="Requirements.$mission_escort_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_escort_req_repuLevel" />
							<set_value name="Requirements.$mission_patrol_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_patrol_req_relLevel" />
							<set_value name="Requirements.$mission_patrol_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_patrol_req_repuLevel" />
							<set_value name="Requirements.$mission_raid_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_raid_req_relLevel" />
							<set_value name="Requirements.$mission_raid_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_raid_req_repuLevel" />
							<set_value name="Requirements.$mission_defendPirate_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_defendPirate_req_relLevel" />
							<set_value name="Requirements.$mission_defendPirate_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_defendPirate_req_repuLevel" />
						</do_if>
						<do_else>
							<debug_text text="'$Faction: ' + $Faction" chance="UserSettings.$debugChance" />
							<do_if value="not @$RequirementsByFaction.{$Faction}">
								<set_value name="$Faction" exact="faction.player" />
							</do_if>
							<debug_text text="'$Faction: ' + $Faction" chance="UserSettings.$debugChance" />
							<do_if value="@$RequirementsByFaction.{$Faction}.$isDisabled">
								<set_value name="Requirements.$mission_escort_req_relLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_escort_req_repuLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_patrol_req_relLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_patrol_req_repuLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_raid_req_relLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_raid_req_repuLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_defendPirate_req_relLevel" exact="UserSettings.$req_none" />
								<set_value name="Requirements.$mission_defendPirate_req_repuLevel" exact="UserSettings.$req_none" />
							</do_if>
							<do_else>
								<set_value name="Requirements.$mission_escort_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_escort_req_relLevel" />
								<set_value name="Requirements.$mission_escort_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_escort_req_repuLevel" />
								<set_value name="Requirements.$mission_patrol_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_patrol_req_relLevel" />
								<set_value name="Requirements.$mission_patrol_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_patrol_req_repuLevel" />
								<set_value name="Requirements.$mission_raid_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_raid_req_relLevel" />
								<set_value name="Requirements.$mission_raid_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_raid_req_repuLevel" />
								<set_value name="Requirements.$mission_defendPirate_req_relLevel" exact="$RequirementsByFaction.{$Faction}.$mission_defendPirate_req_relLevel" />
								<set_value name="Requirements.$mission_defendPirate_req_repuLevel" exact="$RequirementsByFaction.{$Faction}.$mission_defendPirate_req_repuLevel" />
							</do_else>
						</do_else>
					</actions>
 				</library>
				<!--
					                                          ,,
					                                        `7MM
					                                          MM
					`7MMpMMMb.pMMMb.   ,6"Yb.`7M'   `MF' ,M""bMM   ,6"Yb.`7M'   `MF'
					  MM    MM    MM  8)   MM  VA   ,V ,AP    MM  8)   MM  VA   ,V
					  MM    MM    MM   ,pm9MM   VA ,V  8MI    MM   ,pm9MM   VA ,V
					  MM    MM    MM  8M   MM    VVV   `Mb    MM  8M   MM    VVV
					.JMML  JMML  JMML.`Moo9^Yo.  ,V     `Wbmd"MML.`Moo9^Yo.  ,V
					                            ,V                          ,V
					                         OOb"                        OOb"
				 -->
				<cue name="Missions_Maydays" namespace="this" version="2">
					<actions>
						<set_value name="$shipsByAcceptedMission" exact="table[]" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<set_value name="$shipsByAcceptedMission" exact="table[]" />
					</patch>
					<cues>
						<cue name="Missions_Maydays_CreateOffer" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$ship" exact="event.param.$ship" />
								<run_actions ref="Mission_Maydays_IsOkToCreateOffer" result="$isOkToCreateOffer">
									<param name="Ship" value="$ship" />
								</run_actions>
								<do_if value="$isOkToCreateOffer">
									<signal_cue_instantly cue="Mission_Mayday" param="table[$ship = $ship]" />
								</do_if>
								<do_if value="not @$ship.pilot.$kEMissions_mission">
									<!-- <set_value name="$ship.pilot.$kEMissions_mission_isSet" exact="false" /> -->
									<remove_value name="$ship.pilot.$kEMissions_mission_isSet" />
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<library name="Mission_Maydays_IsOkToCreateOffer" purpose="run_actions">
							<params>
								<param name="Ship" />
							</params>
							<actions>
								<set_value name="$isOk" exact="false" />
								<do_if value="
									(not $Ship.isplayerowned) and
									(not @$Ship.pilot.$kEMissions_mission)
								">
									<set_value name="$isOk" exact="true" />
								</do_if>
								<debug_text text="'$isOk: ' + $isOk + ' $Ship: ' + $Ship + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ')'" chance="UserSettings.$debugChance_missionMayday" />
								<debug_text text="'$Ship.isplayerowned: ' + $Ship.isplayerowned + '$Ship.pilot.$kEMissions_mission: ' + @$Ship.pilot.$kEMissions_mission" chance="UserSettings.$debugChance_missionMayday" />
								<return value="$isOk" />
							</actions>
						</library>
						<cue name="Missions_Maydays_MapMenu_AcceptedMissions" namespace="this">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'MapMenu'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name + ' event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance" />
								<do_if value="event.param2 != 'menu_close'">
									<set_value name="$aiDefendersByAcceptedMission" exact="table[]" />
									<do_if value="Missions_Maydays.$shipsByAcceptedMission.keys.count">
										<do_for_each name="$Cue_Mission" in="Missions_Maydays.$shipsByAcceptedMission.keys.list">
											<set_value name="$aiDefendersByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ships_aiDefenders" />
										</do_for_each>
									</do_if>
									<set_value name="player.entity.$ui_kuertee_em_maydays" exact="table[
										$shipsByAcceptedMission = Missions_Maydays.$shipsByAcceptedMission,
										$aiDefendersByAcceptedMission = $aiDefendersByAcceptedMission
									]" />
									<debug_text text="player.entity.$ui_kuertee_em_maydays" chance="UserSettings.$debugChance" />
								</do_if>
								<do_else>
									<raise_lua_event name="'kEM_clear_ui_data'" />
									<remove_value name="player.entity.$ui_kuertee_em_maydays" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="Mission_Mayday" namespace="this" instantiate="true" version="5">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$Cue_Mission" exact="this" />
								<set_value name="$Ship" exact="event.param.$ship" />
								<set_value name="$MissionId" exact="$Ship" />
								<create_group groupname="$GroupOfOne_Ship" />
								<add_to_group groupname="$GroupOfOne_Ship" object="$Ship" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + $Ship" chance="UserSettings.$debugChance_missionMayday" />
								<set_value name="$target" exact="@event.param.$target" />
								<set_value name="$Ship.pilot.$kEMissions_mission" exact="namespace" />
								<set_value name="$Ship.pilot.$kEMissions_mission_isSet" exact="true" />
								<set_value name="$Faction" exact="$Ship.owner" />
								<set_value name="$OpposingFaction" exact="faction.criminal" /><!-- will be replaced with appropriate faction -->
								<set_value name="$RewardCr" exact="0Cr" /><!-- will be replaced with the correct reward -->
								<set_value name="$Difficulty" exact="level.medium" />
								<create_group groupname="$EnemyTargets" />
								<set_value name="$EnemyFactions" exact="[]" />
								<do_if value="$target">
									<add_to_group groupname="$EnemyTargets" object="$target" />
									<append_to_list name="$EnemyFactions" exact="$target.owner" />
								</do_if>
								<run_actions ref="GetName" result="$name_ship"><param name="Component" value="$Ship" /></run_actions>
								<set_value name="$mission_name" exact="{11513, 201}.[$Ship.knownname]" />
								<!-- <t id="229">Mayday! Mayday!</t> -->
								<set_value name="$mission_name_short" exact="{11513, 229}" />
								<set_value name="$mission_description" exact="{11513, 202}.[$name_ship]" />
								<!-- <t id="211">We will assign targets to you when your targeting computer is free. Engagements against factions that are outside the scope of our mission will be ignored.</t>
								<t id="212">To complete the mission, ensure that %s(ship) docks, exits the sector, or detects no enemies within radar range.</t>
								<t id="221">You will be rewarded for %s(ship) surviving the attack, adjusted by their enemy numbers, and for enemies that your ships engage.</t>
								<t id="222">Failure conditions are: %1(ship) is left with no escort for more than 5min; or %1(ship) is detroyed.</t> -->
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 211}" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 212}.[$name_ship]" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 221}.[$name_ship]" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 222}.[$name_ship]" />
								<create_offer cue="namespace"
									type="missiontype.escort"
									actor="$Ship.pilot"
									name="$mission_name"
									description="$mission_description"
									faction="$Faction"
									difficulty="$Difficulty"
									distance="0"
								>
									<briefing>
										<objective step="1" action="objective.defend" object="$Ship" />
									</briefing>
								</create_offer>
								<set_value name="$time_updateSpamStopper" exact="0" />
								<set_value name="$time_missionStart" exact="0" />
								<set_value name="$time_missionTotal" exact="0" />
								<set_value name="$time_awayTotal" exact="0" />
								<set_value name="$isOkToAssignTargets" exact="true" />
								<set_value name="$isEnemyTargetGivenToPlayer" exact="false" />
								<set_value name="$attacker_largest" exact="null" />
								<set_value name="$attacker_largestClass" exact="null" />
								<set_value name="$reward_forKills" exact="0" />
								<create_group groupname="$Ships_aiDefenders" />
								<create_group groupname="$GrouOfOne_aiDefendersTarget" />
								<set_value name="$kEMissionType" exact="kEMissions.$missionType_mayday" />
								<do_if value="@md.kuertee_professions.kProfs.exists">
									<!-- start: rap requirements for mission: emulate generic missions data -->
									<set_value name="$Client" exact="$Ship.aipilot" />
									<set_value name="$Faction" exact="$Faction" />
									<set_value name="$TextTable" exact="table[$missionname = $mission_name_short]" />
									<!-- <set_value name="$RewardCr" exact="0Cr" /> --><!-- will be replaced with the correct reward -->
									<!-- <set_value name="$Faction" exact="$Ship.owner" /> -->
									<!-- <set_value name="$OpposingFaction" exact="null" /> -->
									<set_value name="$enemyFactions" exact="[]" />
									<!-- end: rap requirements for mission: emulate generic missions data -->
								</do_if>
								<set_value name="$isEscortNearby" exact="false" />
							</actions>
							<patch sinceversion="3">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 3, state: ' + this.state" />
								<set_value name="$time_updateSpamStopper" exact="$time_missionLastUpdated" />
							</patch>
							<patch sinceversion="4">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 4, state: ' + this.state" />
								<do_if value="$Cue_Mission.hasmission">
									<set_value name="Missions_Maydays.$shipsByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ship" />
								</do_if>
							</patch>
							<patch sinceversion="5">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 5, state: ' + this.state" />
								<set_value name="$Cue_Mission.$MissionId" exact="$Cue_Mission.$Ship" />
							</patch>
							<cues>
								<cue name="Mission_Mayday_CleanUp">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<do_if value="namespace.hasguidance and UserSettings.$debugChance_missionMayday">
											<debug_text text="$Cue_Mission.$MissionId + ' namespace.hasmission: ' + @namespace.hasmission" />
											<debug_text text="$Cue_Mission.$MissionId + ' namespace.hasmissionoffer: ' + @namespace.hasmissionoffer" />
										</do_if>
										<signal_objects object="player.galaxy" param="'kEMission_complete'" param2="$Cue_Mission" />
										<do_if value="@$Ship.pilot.exists">
											<remove_value name="$Ship.pilot.$kEMissions_mission" />
											<remove_value name="$Ship.pilot.$kEMissions_mission_isSet" />
										</do_if>
										<remove_value name="Missions_Maydays.$shipsByAcceptedMission.{$Cue_Mission}" />
										<remove_offer cue="namespace" />
										<remove_mission cue="namespace" />
										<run_actions ref="DamageCalculator_CleanData">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<clear_group group="$EnemyTargets" />
										<cancel_cue cue="namespace" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_Accept">
									<conditions>
										<!-- event_offer_accepted doesn't work -->
										<!-- <event_offer_accepted cue="namespace" /> -->
										<!-- but menu_map.lua and menu_missionbriefing.lua sends the signal "accept" to the actor -->
										<event_object_signalled object="$Ship.pilot" param="'accept'" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' create_mission'" chance="UserSettings.$debugChance_missionMayday" />
										<create_mission cue="namespace"
											type="missiontype.escort"
											actor="$Ship.pilot"
											name="$mission_name"
											description="$mission_description"
											faction="$Faction"
											difficulty="$Difficulty"
											distance="0"
										>
											<briefing>
												<objective step="1" action="objective.defend" object="$Ship" />
											</briefing>
											<objective step="1" action="objective.defend" object="$Ship" />
										</create_mission>
										<set_value name="stat.missions_accepted" operation="add" />
										<do_if value="UserSettings.$debugChance_missionMayday">
											<set_object_min_hull object="$Ship" exact="1" />
										</do_if>
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionRML" param="table[
												$cue = $Cue_Mission,
												$action = md.kuertee_professions.kProfs.$activity_rescue
											]" />
										</do_if>
										<set_value name="Missions_Maydays.$shipsByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ship" />
										<set_value name="$time_missionStart" exact="player.age" />
										<signal_cue cue="Mission_Mayday_IsPlayerOwnedNearby" />
										<remove_offer cue="namespace" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_Complete">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$missionLogLines" exact="[]" />
										<!-- reward for safe escape of ship -->
										<run_actions ref="GetRewardForLevel" result="$reward_forSafeEscape">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Faction" value="$Cue_Mission.$Faction" />
											<param name="Difficulty" value="level.medium" />
											<param name="Level" value="1" />
										</run_actions>
										<!-- adj based on ship's size over all enemy sizes -->
										<set_value name="$size_ship" exact="$Ship.size" />
										<set_value name="$size_enemyTotal" exact="0" />
										<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$DamageAndKillsList">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<!-- <do_for_each name="$key" in="$DamageAndKillsList.keys.list">
											<set_value name="$enemyData" exact="$DamageAndKillsList.{$key}" /> -->
										<do_for_each name="$enemyData" in="$DamageAndKillsList">
											<set_value name="$size_enemyTotal" operation="add" exact="$enemyData.$size" />
										</do_for_each>
										<do_if value="UserSettings.$debugChance_missionMayday">
											<debug_text text="$Cue_Mission.$MissionId + ' ' + $Ship.knownname + ' (' + $Ship.idcode + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $size_ship: ' + $size_ship" />
											<debug_text text="$Cue_Mission.$MissionId + ' $size_enemyTotal: ' + $size_enemyTotal" />
											<debug_text text="$Cue_Mission.$MissionId + ' $reward_forSafeEscape (pre size-adj): ' + $reward_forSafeEscape" />
										</do_if>
										<set_value name="$reward_forSafeEscape" exact="(($reward_forSafeEscape)f * $size_enemyTotal / $size_ship * ((UserSettings.$rewardMult / 100f))f)ct" />
										<debug_text text="$Cue_Mission.$MissionId + ' $reward_forSafeEscape (post size-adj): ' + $reward_forSafeEscape" chance="UserSettings.$debugChance_missionMayday" />
										<!-- <append_to_list name="$missionLogLines" exact="{11513, 241}.[$name_ship]" /> -->
										<!-- <append_to_list name="$missionLogLines" exact="$mission_name" /> -->
										<!-- reward for kills -->
										<run_actions ref="Reward_CalculateForKills" result="$rewardData">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="DamageAndKillsList" value="$DamageAndKillsList" />
										</run_actions>
										<do_if value="kEMissions.$difficultyValues.{$rewardData.$difficulty_max} gt kEMissions.$difficultyValues.{$Difficulty}">
											<set_value name="$Difficulty" exact="$rewardData.$difficulty_max" />
										</do_if>
										<set_value name="$reward_forKills" exact="(($rewardData.$reward)f * ((UserSettings.$rewardMult / 100f))f)ct" />
										<do_if value="($reward_forKills)f">
											<set_value name="$RewardCr" exact="(($reward_forSafeEscape)f + ($reward_forKills)f)ct" />
											<!-- <t id="496">Total reward: %s.</t> -->
											<!-- <t id="497">Escort reward: %s.</t> -->
											<!-- <t id="498">Engagement reward: %s.</t> -->
											<append_to_list name="$missionLogLines" exact="{11513, 497}.[((($reward_forSafeEscape)f)ct).formatted.{'%.s %Cr'}]" />
											<append_to_list name="$missionLogLines" exact="$rewardData.$description_damageAndKillsByClass" />
											<append_to_list name="$missionLogLines" exact="{11513, 498}.[((($reward_forKills)f)ct).formatted.{'%.s %Cr'}]" />
											<append_to_list name="$missionLogLines" exact="{11513, 496}.[$RewardCr.formatted.{'%.s %Cr'}]" />
											<run_actions ref="Mission_Complete">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
											<run_actions ref="Comm_ThankYou">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
											<run_actions ref="WriteToLogBook">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="Lines" value="$missionLogLines" />
											</run_actions>
											<!-- add faction relation -->
											<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Notoriety" param="[$Cue_Mission, $Difficulty, 1, $Faction]" />
											<set_value name="$RewardNotoriety" exact="$Reward_Notoriety__Result" />
											<add_faction_relation faction="faction.player" otherfaction="$Faction" value="$RewardNotoriety" reason="relationchangereason.missioncompleted" />
											<set_value name="stat.missions_completed" operation="add" />
											<signal_cue cue="Mission_Mayday_CleanUp" />
										</do_if>
										<do_else>
											<signal_cue cue="Mission_Mayday_Fail" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_Fail">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$missionLogLines" exact="[]" />
										<!-- <append_to_list name="$missionLogLines" exact="$mission_name" /> -->
										<!-- <t id="271">%s(ship) was destroyed.</t>
										<t id="272">%s(ship) had no escort for more than 5min.</t> -->
										<!-- <t id="441">No assigned enemies were engaged.</t> -->
										<do_if value="not @$Ship.isoperational">
											<append_to_list name="$missionLogLines" exact="{11513, 271}.[$name_ship]" />
										</do_if>
										<do_elseif value="$time_awayTotal ge 5min">
											<append_to_list name="$missionLogLines" exact="{11513, 272}.[$name_ship]" />
										</do_elseif>
										<do_elseif value="not $reward_forKills">
											<append_to_list name="$missionLogLines" exact="{11513, 441}" />
										</do_elseif>
										<run_actions ref="WriteToLogBook">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Lines" value="$missionLogLines" />
										</run_actions>
										<run_actions ref="Mission_Fail">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<signal_cue cue="Mission_Mayday_CleanUp" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_End">
									<conditions>
										<check_any>
											<event_cue_signalled />
	 										<event_mission_aborted cue="namespace" />
											<!-- <event_object_changed_sector object="$Ship" /> -->
											<!-- <event_object_docked object="$Ship" /> -->
											<event_object_changed_sector group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_docked group="$Cue_Mission.$GroupOfOne_Ship" />
											<!-- <event_object_changed_sector object="player.entity" /> -->
	 									</check_any>
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance_missionMayday" />
										<do_if value="namespace.hasmission">
											<debug_text text="$Cue_Mission.$MissionId + ' $Ship.isoperational: ' + $Ship.isoperational + ' $time_awayTotal: ' + $time_awayTotal + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionMayday" />
											<do_if value="$Ship.isoperational and $time_awayTotal lt 5min">
												<signal_cue cue="Mission_Mayday_Complete" />
											</do_if>
											<do_else>
												<signal_cue cue="Mission_Mayday_Fail" />
											</do_else>
										</do_if>
										<do_else>
											<signal_cue cue="Mission_Mayday_CleanUp" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_Expire" checktime="player.age + 5min">
									<actions>
										<do_if value="not namespace.hasmission">
											<debug_text text="'time: ' + this.time" chance="UserSettings.$debugChance_missionMayday" />
											<signal_cue cue="Mission_Mayday_End" />
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_ShipDestroy">
									<conditions>
										<!-- <event_object_destroyed object="$Ship" /> -->
										<event_object_destroyed group="$Cue_Mission.$GroupOfOne_Ship" />
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance_missionMayday" />
										<signal_cue cue="Mission_Mayday_End" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_Greeting" ref="Comm_Greeting">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_Mayday_DamageReport" ref="Comm_DamageReport">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_Mayday_EnemyFound" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$enemyTarget" exact="event.param.$enemyTarget" />
										<do_if value="$OpposingFaction == faction.criminal">
											<set_value name="$OpposingFaction" exact="$enemyTarget.owner" />
										</do_if>
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<do_if value="namespace.hasmission">
												<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionTargets" param="table[
													$missionLib = $kProfs_missionLib,
													$target = $enemyTarget
												]" />
											</do_if>
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_NoEnemiesNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_NoEnemiesFound">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance_missionMayday" />
										<signal_cue cue="Mission_Mayday_End" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_PlayerKill">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_NewEnemyFaction">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$newEnemyFaction" exact="event.param.$faction" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_EnemyTargets" ref="EnemyTargets">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Cue_EnemyFound" value="Mission_Mayday_EnemyFound" />
									<param name="Cue_NoEnemiesNearby" value="Mission_Mayday_NoEnemiesNearby" />
									<param name="Cue_NoEnemiesFound" value="Mission_Mayday_NoEnemiesFound" />
									<param name="Cue_PlayerKill" value="Mission_Mayday_PlayerKill" />
									<param name="Cue_NewEnemyFaction" value="Mission_Mayday_NewEnemyFaction" />
									<param name="EnemyTargets" value="$EnemyTargets" />
									<param name="IsAllowStationTargets" value="false" />
									<param name="IsLimitEnemiesToAttackerFactions" value="true" />
									<param name="IsFindEnemiesOutOfRadarRange" value="false" />
								</cue>
								<cue name="Mission_Mayday_PlayerAway">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if namespace.hasguidance then UserSettings.$debugChance_missionMayday" />
										<set_value name="$isEscortNearby" exact="false" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_PlayerNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if namespace.hasguidance then UserSettings.$debugChance_missionMayday" />
										<set_value name="$isEscortNearby" exact="true" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Mayday_IsPlayerOwnedNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<cues>
										<cue name="Mission_Mayday_IsPlayerOwnedNearby_Interval" ref="IsPlayerOwnedNearby">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Cue_AwayTooLong" value="Mission_Mayday_End" />
											<param name="Cue_ExitEscort" value="Mission_Mayday_PlayerAway" />
											<param name="Cue_EnterEscort" value="Mission_Mayday_PlayerNearby" />
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Mayday_BriefingCutscene" ref="BriefingCutscene">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_Mayday_Init_RunOnce">
									<actions>
										<!-- <signal_cue cue="Mission_Mayday_IsPlayerOwnedNearby" /> -->
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<!--
					
					
					                                                         ,d
					                                                         88
					 ,adPPYba, ,adPPYba,  ,adPPYba,  ,adPPYba,  8b,dPPYba, MM88MMM
					a8P_____88 I8[    "" a8"     "" a8"     "8a 88P'   "Y8   88
					8PP"""""""  `"Y8ba,  8b         8b       d8 88           88
					"8b,   ,aa aa    ]8I "8a,   ,aa "8a,   ,a8" 88           88,
					 `"Ybbd8"' `"YbbdP"'  `"Ybbd8"'  `"YbbdP"'  88           "Y888
					
					
				 -->
				<cue name="Missions_Escorts" namespace="this" version="2">
					<actions>
						<set_value name="$shipsByAcceptedMission" exact="table[]" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<set_value name="$shipsByAcceptedMission" exact="table[]" />
					</patch>
					<cues>
						<cue name="Missions_Escorts_CreateOffer" namespace="this" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_object_signalled object="player.galaxy" param="'kEMissions_create_escort_offer'" />
								</check_any>
							</conditions>
							<!-- <delay min="0.1s" max="1s" /> -->
							<actions>
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$ship" exact="event.param.$ship" />
									<set_value name="$tradeOffer" exact="event.param.$tradeOffer" />
								</do_if>
								<do_elseif value="event.name == 'event_object_signalled'">
									<set_value name="$ship" exact="event.param2.$ship" />
									<set_value name="$tradeOffer" exact="event.param2.$tradeOffer" />
								</do_elseif>
								<!-- <do_if value="UserSettings.$debugChance_missionEscort">
									<debug_text text="$Cue_Mission.$MissionId + ' $ship: ' + $ship + ' (' + @$ship.knownname + ', ' + @$Faction + ', ' + @$ship.toplevelcommander.knownname + ')'" />
									<debug_text text="$Cue_Mission.$MissionId + ' $tradeOffer.buyer: ' + $tradeOffer.buyer + ' (' + @$tradeOffer.buyer.knownname + ', ' + @$tradeOffer.buyer.owner + ')'" />
									<debug_text text="$Cue_Mission.$MissionId + ' $tradeOffer.seller: ' + $tradeOffer.seller + ' (' + @$tradeOffer.seller.knownname + ', ' + @$tradeOffer.seller.owner + ')'" />
									<debug_text text="$Cue_Mission.$MissionId + ' $tradeOffer.owner: ' + $tradeOffer.owner + ' (' + @$tradeOffer.owner.knownname + ', ' + @$tradeOffer.owner.owner + ')'" />
									<debug_text text="$Cue_Mission.$MissionId + ' $tradeOffer.ware: ' + $tradeOffer.ware" />
								</do_if> -->
								<run_actions ref="Mission_Escorts_IsOkToCreateOffer" result="$isOkToCreateOffer">
									<param name="Ship" value="$ship" />
									<param name="TradeOffer" value="$tradeOffer" />
								</run_actions>
								<do_if value="$isOkToCreateOffer">
									<signal_cue_instantly cue="Mission_Escort" param="table[$ship = $ship, $tradeOffer = $tradeOffer]" />
								</do_if>
								<do_if value="not @$ship.pilot.$kEMissions_mission">
									<!-- <set_value name="$ship.pilot.$kEMissions_mission_isSet" exact="false" /> -->
									<remove_value name="$ship.pilot.$kEMissions_mission_isSet" />
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<library name="Mission_Escorts_IsOkToCreateOffer" purpose="run_actions">
							<params>
								<param name="Ship" />
								<param name="TradeOffer" />
							</params>
							<actions>
								<run_actions ref="Requirements_GetForFaction">
									<param name="Faction" value="$Ship.trueowner" />
								</run_actions>
								<set_value name="$isOk" exact="false" />
								<do_if value="
									(not $Ship.hasrelation.enemy.{faction.player}) and
									(not @$Ship.pilot.$kEMissions_mission) and
									(
										(@$TradeOffer.buyer and $TradeOffer.buyer.sector != $Ship.sector) or
										(@$TradeOffer.seller and $TradeOffer.seller.sector != $Ship.sector)
									)
								">
									<set_value name="$isOk_reqRel" exact="
										Requirements.$mission_escort_req_relLevel == UserSettings.$req_none
										or
										(
											Requirements.$mission_escort_req_relLevel == UserSettings.$req_rel_neutral and
											$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.neutral.min
										) or
										(
											Requirements.$mission_escort_req_relLevel == UserSettings.$req_rel_friend and
											$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
										) or
										Requirements.$mission_escort_req_relLevel == UserSettings.$req_rel_warSubscription
									" />
									<do_if value="md.kuertee_professions.kProfs.exists">
										<run_actions ref="md.kuertee_professions.GetReputationWithFaction" result="$reputation">
											<param name="Faction" value="$Ship.owner" />
										</run_actions>
										<set_value name="$isOk_reqRepu" exact="
											Requirements.$mission_escort_req_repuLevel == UserSettings.$req_none
											or
											(
												Requirements.$mission_escort_req_repuLevel == UserSettings.$req_repu_defender and
												$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender
											) or
											(
												Requirements.$mission_escort_req_repuLevel == UserSettings.$req_repu_defenderOrMercenary and
												(
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary
												)
											) or
											(
												Requirements.$mission_escort_req_repuLevel == UserSettings.$req_repu_defenderOrVigilante and
												(
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
												)
											) or
											(
												Requirements.$mission_escort_req_repuLevel == UserSettings.$req_repu_defenderOrMercenaryOrVigilante and
												(
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary or
													$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
												)
											)
										" />
									</do_if>
									<do_else>
										<set_value name="$isOk_reqRepu" exact="true" />
									</do_else>
									<set_value name="$isOk" exact="$isOk_reqRel and $isOk_reqRepu" />
								</do_if>
								<return value="$isOk" />
							</actions>
						</library>
						<cue name="Missions_Escorts_MapMenu_AcceptedMissions" namespace="this">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'MapMenu'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name + ' event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance" />
								<do_if value="event.param2 != 'menu_close'">
									<set_value name="$aiDefendersByAcceptedMission" exact="table[]" />
									<do_if value="Missions_Escorts.$shipsByAcceptedMission.keys.count">
										<do_for_each name="$Cue_Mission" in="Missions_Escorts.$shipsByAcceptedMission.keys.list">
											<set_value name="$aiDefendersByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ships_aiDefenders" />
										</do_for_each>
									</do_if>
									<set_value name="player.entity.$ui_kuertee_em_escorts" exact="table[
										$shipsByAcceptedMission = Missions_Escorts.$shipsByAcceptedMission,
										$aiDefendersByAcceptedMission = $aiDefendersByAcceptedMission
									]" />
									<debug_text text="player.entity.$ui_kuertee_em_escorts" chance="UserSettings.$debugChance" />
								</do_if>
								<do_else>
									<raise_lua_event name="'kEM_clear_ui_data'" />
									<remove_value name="player.entity.$ui_kuertee_em_escorts" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="Mission_Escort" namespace="this" instantiate="true" version="5">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$Cue_Mission" exact="this" />
								<set_value name="$Ship" exact="event.param.$ship" />
								<set_value name="$MissionId" exact="$Ship" />
								<create_group groupname="$GroupOfOne_Ship" />
								<add_to_group groupname="$GroupOfOne_Ship" object="$Ship" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + $Ship" chance="UserSettings.$debugChance_missionEscort" />
								<!-- start: escort-specific -->
								<set_value name="$TradeOffer" exact="event.param.$tradeOffer" />
								<!-- end: escort-specific -->
								<set_value name="$Ship.pilot.$kEMissions_mission" exact="namespace" />
								<set_value name="$Ship.pilot.$kEMissions_mission_isSet" exact="true" />
								<set_value name="$Faction" exact="$Ship.owner" />
								<set_value name="$OpposingFaction" exact="faction.criminal" /><!-- will be replaced with appropriate faction -->
								<set_value name="$RewardCr" exact="0Cr" /><!-- will be replaced with the correct reward -->
								<set_value name="$Difficulty" exact="level.easy" />
								<create_group groupname="$EnemyTargets" />
								<set_value name="$EnemyFactions" exact="[]" />
								<run_actions ref="GetName" result="$name_ship"><param name="Component" value="$Ship" /></run_actions>
								<set_value name="$mission_name" exact="{11513, 301}.[$Ship.knownname]" />
								<!-- <t id="328">Escort miner</t>
								<t id="329">Escort trader</t> -->
								<do_if value="$Ship.primarypurpose == purpose.mine">
									<set_value name="$mission_name_short" exact="{11513, 328}" />
								</do_if>
								<do_else>
									<set_value name="$mission_name_short" exact="{11513, 329}" />
								</do_else>
								<set_value name="$mission_description" exact="{11513, 302}.[$name_ship]" />
								<!-- <t id="311">We will assign targets to you when your targeting computer is free. Engagements against factions that are outside the scope of our mission will be ignored.</t>
								<t id="312">To complete the mission, ensure that %s(ship) completes all their trade orders. New trade orders that they receive during the mission will extend the mission duration.</t>
								<t id="313">The mission will end early when %s(ship) is left with no escort for more than 5min.</t>
								<t id="321">You will be rewarded for each trade they complete, adjusted by the sectors they traversed, the amount of time that your ships were in escort \(while within 100km\), and for enemies that your ships engage.</t>
								<t id="322">Failure condition is: when %s(ship) fail to complete any trade.</t> -->
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 311}" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 312}.[$name_ship]" />
								<set_value name="$mission_description" exact="$mission_description + ' ' + {11513, 313}.[$name_ship]" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 321}.[$name_ship]" />
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 322}.[$name_ship]" />
								<run_actions ref="Mission_EscortGetTradeDescription" result="$tradeDescription">
									<param name="Ship" value="$Ship" />
									<param name="TradeOffer" value="$TradeOffer" />
									<param name="IsProgress" value="false" />
								</run_actions>
								<do_if value="$tradeDescription">
									<set_value name="$mission_description" exact="$mission_description + '\n\n' + $tradeDescription" />
								</do_if>
								<!-- <set_value name="$travelMaxSpeed_kms" exact="($Cue_Mission.$Ship.travel.maxspeed / 1000 * 100)i / 100" /> -->
								<set_value name="$travelMaxSpeed_kms" exact="($Cue_Mission.$Ship.travel.maxspeed * 100)i / 100" />
								<!-- <t id="391">\(Note that %s(ship) can travel up to %s(speed)km/s.\)</t> -->
								<set_value name="$mission_description" exact="$mission_description + '\n\n' + {11513, 391}.[$name_ship, $travelMaxSpeed_kms]" />
								<create_offer cue="namespace"
									type="missiontype.escort"
									actor="$Ship.pilot"
									name="$mission_name"
									description="$mission_description"
									faction="$Faction"
									difficulty="$Difficulty"
									distance="0"
								>
									<briefing>
										<objective step="1" action="objective.escort" object="$Ship" />
									</briefing>
								</create_offer>
								<set_value name="$time_updateSpamStopper" exact="0" />
								<set_value name="$time_missionStart" exact="0" />
								<set_value name="$time_missionTotal" exact="0" />
								<set_value name="$time_awayTotal" exact="0" />
								<set_value name="$isOkToAssignTargets" exact="true" />
								<set_value name="$isEnemyTargetGivenToPlayer" exact="false" />
								<set_value name="$attacker_largest" exact="null" />
								<set_value name="$attacker_largestClass" exact="null" />
								<set_value name="$reward_forKills" exact="0" />
								<create_group groupname="$Ships_aiDefenders" />
								<create_group groupname="$GrouOfOne_aiDefendersTarget" />
								<set_value name="$kEMissionType" exact="kEMissions.$missionType_escort" />
								<do_if value="@md.kuertee_professions.kProfs.exists">
									<!-- start: rap requirements for mission: emulate generic missions data -->
									<set_value name="$Client" exact="$Ship.aipilot" />
									<set_value name="$Faction" exact="$Faction" />
									<set_value name="$TextTable" exact="table[$missionname = $mission_name_short]" />
									<!-- <set_value name="$RewardCr" exact="0Cr" /> --><!-- will be replaced with the correct reward -->
									<!-- <set_value name="$Faction" exact="$Ship.owner" /> -->
									<!-- <set_value name="$OpposingFaction" exact="null" /> -->
									<set_value name="$enemyFactions" exact="[]" />
									<!-- end: rap requirements for mission: emulate generic missions data -->
								</do_if>
								<!-- escort-specific -->
								<set_value name="$isEscortNearby" exact="false" />
								<set_value name="$isEscortNearby_setPreviously" exact="false" />
								<create_position name="$Pos_origin" space="$Ship.sector" object="$Ship" />
								<set_value name="$tradeOrders" exact="[]" />
								<set_value name="$count_tradeOrders" exact="0" />
								<set_value name="$count_tradesCompleted" exact="0" />
								<create_group groupname="$stations_max" />
								<create_group groupname="$stations_traded" />
								<create_group groupname="$objectiveTargets" />
								<add_to_group groupname="$objectiveTargets" object="$Ship" />
								<set_value name="$count_gatesUsed" exact="0" />
								<run_actions ref="GetSectorClass" result="$sectorClassData">
									<param name="Sector" value="@$Ship.sector" />
									<param name="Faction" value="$Faction" />
								</run_actions>
								<set_value name="$count_sectorsTraversedBySectorClass" exact="kEMissions.$sectorDifficultyByClassification.{$sectorClassData.$class}" />
							</actions>
							<patch sinceversion="3">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 3, state: ' + this.state" />
								<set_value name="$time_updateSpamStopper" exact="$time_missionLastUpdated" />
							</patch>
							<patch sinceversion="4">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 4, state: ' + this.state" />
								<do_if value="$Cue_Mission.hasmission">
									<set_value name="Missions_Escorts.$shipsByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ship" />
								</do_if>
							</patch>
							<patch sinceversion="5">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 5, state: ' + this.state" />
								<set_value name="$Cue_Mission.$MissionId" exact="$Cue_Mission.$Ship" />
							</patch>
							<cues>
								<cue name="Mission_Escort_CleanUp">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<do_if value="UserSettings.$debugChance_missionEscort">
											<debug_text text="$Cue_Mission.$MissionId + ' namespace.hasmission: ' + @namespace.hasmission + ' namespace.hasmissionoffer: ' + @namespace.hasmissionoffer" />
										</do_if>
										<signal_objects object="player.galaxy" param="'kEMission_complete'" param2="$Cue_Mission" />
										<do_if value="@$Ship.pilot.isoperational">
											<remove_value name="$Ship.pilot.$kEMissions_mission" />
											<remove_value name="$Ship.pilot.$kEMissions_mission_isSet" />
										</do_if>
										<remove_value name="Missions_Escorts.$shipsByAcceptedMission.{$Cue_Mission}" />
										<remove_offer cue="namespace" />
										<remove_mission cue="namespace" />
										<run_actions ref="DamageCalculator_CleanData">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<clear_group group="$EnemyTargets" />
										<cancel_cue cue="namespace" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_Accept">
									<conditions>
										<!-- event_offer_accepted doesn't work -->
										<!-- <event_offer_accepted cue="namespace" /> -->
										<!-- but menu_map.lua and menu_missionbriefing.lua sends the signal "accept" to the actor -->
										<event_object_signalled object="$Ship.pilot" param="'accept'" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' create_mission'" chance="UserSettings.$debugChance_missionEscort" />
										<create_mission cue="namespace"
											type="missiontype.escort"
											actor="$Ship.pilot"
											name="$mission_name"
											description="$mission_description"
											faction="$Faction"
											difficulty="$Difficulty"
											distance="0"
										>
											<briefing>
												<objective step="1" action="objective.escort" object="$Ship" />
											</briefing>
										</create_mission>
										<set_value name="stat.missions_accepted" operation="add" />
										<run_actions ref="Mission_Escort_UpdateTradeOrdersList">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<run_actions ref="Mission_Escort_UpdateProgress" result="$tradeOrder_active">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<signal_cue cue="Mission_Escort_IsPlayerOwnedNearby" />
										<set_value name="$time_missionStart" exact="player.age" />
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionRML" param="table[
												$cue = $Cue_Mission,
												$action = md.kuertee_professions.kProfs.$activity_escort
											]" />
										</do_if>
										<set_value name="Missions_Escorts.$shipsByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ship" />
										<remove_offer cue="namespace" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_Complete">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$missionLogLines" exact="[]" />
										<do_if value="UserSettings.$debugChance_missionEscort">
											<debug_text text="$Cue_Mission.$MissionId + ' $stations_traded.count: ' + $stations_traded.count" />
											<debug_text text="$Cue_Mission.$MissionId + ' $stations_max.count: ' + $stations_max.count" />
											<debug_text text="$Cue_Mission.$MissionId + ' $count_gatesUsed: ' + $count_gatesUsed" />
											<debug_text text="$Cue_Mission.$MissionId + ' $count_sectorsTraversedBySectorClass: ' + $count_sectorsTraversedBySectorClass" />
										</do_if>
										<!-- reward for each completed trade -->
										<run_actions ref="GetRewardForLevel" result="$reward_forCompletedTrades">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Faction" value="$Cue_Mission.$Faction" />
											<param name="Difficulty" value="level.easy" />
											<param name="Level" value="$stations_traded.count" />
										</run_actions>
										<set_value name="$reward_forCompletedTrades" exact="(($reward_forCompletedTrades)f * $count_sectorsTraversedBySectorClass)ct" />
										<!-- adjust for time away -->
										<do_if value="$time_awayTotal">
											<set_value name="$reward_forCompletedTrades" exact="(($reward_forCompletedTrades)f * $time_inEscort_percFraction * ((UserSettings.$rewardMult / 100f))f)ct" />
										</do_if>
										<!-- add log line -->
										<!-- <t id="341">%1(mission name): trades completed: %2(number), sectors traversed: %3(number), time in escort: %4 / %5 \(%6%%(time in escort in perc)\).</t> -->
										<!-- <debug_text text="'$time_inEscort 1: ' + ($time_inEscort / 60.0)" />
										<debug_text text="'$time_inEscort 2: ' + (($time_inEscort / 60.0) * 100)" />
										<debug_text text="'$time_inEscort 3: ' + (($time_inEscort / 60.0) * 100)i" />
										<debug_text text="'$time_inEscort 4: ' + ((($time_inEscort / 60.0) * 100)i / 100)" />
										<debug_text text="'$time_missionTotal 1: ' + ($time_missionTotal / 60.0)" />
										<debug_text text="'$time_missionTotal 2: ' + (($time_missionTotal / 60.0) * 100)" />
										<debug_text text="'$time_missionTotal 3: ' + (($time_missionTotal / 60.0) * 100)i" />
										<debug_text text="'$time_missionTotal 4: ' + ((($time_missionTotal / 60.0) * 100)i / 100)" /> -->
										<set_value name="$time_inEscort_min" exact="((($time_inEscort / 60.0) * 100)i / 100) + ' ' + {1001, 103}" comment="103 = minutes" />
										<set_value name="$time_missionTotal_min" exact="((($time_missionTotal / 60.0) * 100)i / 100) + ' ' + {1001, 103}" comment="103 = minutes" />
										<set_value name="$time_inEscort_percentage" exact="(($time_inEscort_percFraction * 100) * 100)i / 100" />
										<append_to_list name="$missionLogLines" exact="{11513, 341}.[$mission_name, $stations_traded.count, $count_gatesUsed + 1, $time_inEscort_min, $time_missionTotal_min, $time_inEscort_percentage]" />
										<!-- reward for kills -->
										<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$DamageAndKillsList">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<run_actions ref="Reward_CalculateForKills" result="$rewardData">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="DamageAndKillsList" value="$DamageAndKillsList" />
										</run_actions>
										<do_if value="kEMissions.$difficultyValues.{$rewardData.$difficulty_max} gt kEMissions.$difficultyValues.{$Difficulty}">
											<set_value name="$Difficulty" exact="$rewardData.$difficulty_max" />
										</do_if>
										<set_value name="$reward_forKills" exact="(($rewardData.$reward)f * ((UserSettings.$rewardMult / 100f))f)ct" />
										<set_value name="$RewardCr" exact="(($reward_forCompletedTrades)f + ($reward_forKills)f)ct" />
										<do_if value="kEMissions.$IsSWIExists">
											<set_value name="$RewardCr" exact="(($reward_forCompletedTrades)f + ($reward_forKills)f) * 0.5ct" />
										</do_if>
										<!-- <t id="496">Total reward: %s.</t>
										<t id="497">Escort reward: %s.</t>
										<t id="498">Engagement reward: %s.</t> -->
										<do_if value="($reward_forCompletedTrades)f">
											<append_to_list name="$missionLogLines" exact="{11513, 497}.[((($reward_forCompletedTrades)f)ct).formatted.{'%.s %Cr'}]" />
										</do_if>
										<do_if value="($reward_forKills)f">
											<append_to_list name="$missionLogLines" exact="$MissionRewardData.$description_damageAndKillsByClass" />
											<append_to_list name="$missionLogLines" exact="{11513, 498}.[((($reward_forKills)f)ct).formatted.{'%.s %Cr'}]" />
										</do_if>
										<do_if value="($reward_forCompletedTrades)f and ($reward_forKills)f">
											<append_to_list name="$missionLogLines" exact="{11513, 496}.[$RewardCr.formatted.{'%.s %Cr'}]" />
										</do_if>
										<run_actions ref="Mission_Complete">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<do_if value="$Ship.isoperational">
											<run_actions ref="Comm_ThankYou">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
										</do_if>
										<run_actions ref="WriteToLogBook">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Lines" value="$missionLogLines" />
										</run_actions>
										<!-- add faction relation -->
										<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Notoriety" param="[$Cue_Mission, $Difficulty, 1, $Faction]" />
										<set_value name="$RewardNotoriety" exact="$Reward_Notoriety__Result" />
										<add_faction_relation faction="faction.player" otherfaction="$Faction" value="$RewardNotoriety" reason="relationchangereason.missioncompleted" />
										<set_value name="stat.missions_completed" operation="add" />
										<signal_cue cue="Mission_Escort_CleanUp" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_Fail">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$missionLogLines" exact="[]" />
										<!-- <append_to_list name="$missionLogLines" exact="$mission_name" /> -->
										<!-- <t id="271">%s(ship) was destroyed.</t> -->
										<!-- <t id="371">%s(ship) completed no trades.</t> -->
										<do_if value="not @$Ship.isoperational">
											<append_to_list name="$missionLogLines" exact="{11513, 271}.[$name_ship]" />
										</do_if>
										<do_elseif value="not $count_tradesCompleted">
											<append_to_list name="$missionLogLines" exact="{11513, 371}.[$name_ship]" />
										</do_elseif>
										<run_actions ref="WriteToLogBook">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Lines" value="$missionLogLines" />
										</run_actions>
										<run_actions ref="Mission_Fail">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<signal_cue cue="Mission_Escort_CleanUp" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_End">
									<conditions>
										<check_any>
											<event_cue_signalled />
	 										<event_mission_aborted cue="namespace" />
	 									</check_any>
									</conditions>
									<actions>
										<do_if value="namespace.hasmission">
											<debug_text text="$Cue_Mission.$MissionId + ' $count_tradesCompleted: ' + $count_tradesCompleted + ' $Ship.isoperational:' + $Ship.isoperational" chance="UserSettings.$debugChance_missionEscort" />
											<set_value name="$time_missionTotal" exact="player.age - $time_missionStart" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_missionTotal: ' + $time_missionTotal + ' $time_awayTotal: ' + $time_awayTotal" chance="UserSettings.$debugChance_missionEscort" />
											<set_value name="$time_inEscort" exact="[0, $time_missionTotal - $time_awayTotal].max" />
											<set_value name="$time_inEscort_percFraction" exact="$time_inEscort / $time_missionTotal" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort: ' + $time_inEscort + ' $time_inEscort_percFraction: ' + $time_inEscort_percFraction" chance="UserSettings.$debugChance_missionEscort" />
											<do_if value="UserSettings.$debugChance_missionEscort">
												<debug_text text="$Cue_Mission.$MissionId + ' $time_missionTotal: ' + $time_missionTotal" />
												<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort: ' + $time_inEscort" />
												<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal: ' + $time_awayTotal" />
												<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort_percFraction: ' + $time_inEscort_percFraction" />
											</do_if>
											<do_if value="$count_tradesCompleted and $Ship.isoperational and $time_inEscort gt 1min">
												<signal_cue cue="Mission_Escort_Complete" />
											</do_if>
											<do_else>
												<signal_cue cue="Mission_Escort_Fail" />
											</do_else>
										</do_if>
										<do_else>
											<signal_cue cue="Mission_Escort_CleanUp" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_Expire">
									<cues>
										<cue name="Mission_Escort_Expire_Interval" instantiate="true" checktime="player.age + 5s" checkinterval="5s">
											<actions>
												<debug_text text="''" chance="@md.$kuertee_interval" />
												<do_if value="namespace.hasmission">
													<!-- mission already accepted, cannot expire -->
													<cancel_cue cue="parent" />
												</do_if>
												<do_elseif value="@$Ship.sector">
													<create_position name="$Pos_current" space="$Ship.sector" object="$Ship" />
													<set_value name="$distance" exact="$Pos_current.distanceto.{$Pos_origin}" />
													<do_if value="$distance gt 40km">
														<!-- ship is away, remove mission -->
														<signal_cue cue="Mission_Escort_End" />
														<cancel_cue cue="parent" />
													</do_if>
												</do_elseif>
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Escort_ShipDestroy">
									<conditions>
										<!-- <event_object_destroyed object="$Ship" /> -->
										<event_object_destroyed group="$Cue_Mission.$GroupOfOne_Ship" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age" chance="UserSettings.$debugChance_missionEscort" />
										<signal_cue cue="Mission_Escort_End" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_Greeting" ref="Comm_Greeting">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_Escort_DamageReport" ref="Comm_DamageReport">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_Escort_EnemyFound" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$enemyTarget" exact="event.param.$enemyTarget" />
										<do_if value="$OpposingFaction == faction.criminal">
											<set_value name="$OpposingFaction" exact="$enemyTarget.owner" />
										</do_if>
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<do_if value="namespace.hasmission">
												<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionTargets" param="table[
													$missionLib = $kProfs_missionLib,
													$target = $enemyTarget
												]" />
											</do_if>
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_NoEnemiesNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_NoEnemiesFound">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_PlayerKill">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_NewEnemyFaction">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$newEnemyFaction" exact="event.param.$faction" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_EnemyTargets" ref="EnemyTargets">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Cue_EnemyFound" value="Mission_Escort_EnemyFound" />
									<param name="Cue_NoEnemiesNearby" value="Mission_Escort_NoEnemiesNearby" />
									<param name="Cue_NoEnemiesFound" value="Mission_Escort_NoEnemiesFound" />
									<param name="Cue_PlayerKill" value="Mission_Escort_PlayerKill" />
									<param name="Cue_NewEnemyFaction" value="Mission_Escort_NewEnemyFaction" />
									<param name="EnemyTargets" value="$EnemyTargets" />
									<param name="IsAllowStationTargets" value="false" />
									<param name="IsLimitEnemiesToAttackerFactions" value="true" />
									<param name="IsFindEnemiesOutOfRadarRange" value="false" />
								</cue>
								<cue name="Mission_Escort_PlayerAway">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
										<set_value name="$isEscortNearby" exact="false" />
										<disable_travel_mode ship="$Ship" duration="3s" />
										<run_actions ref="Mission_Escort_UpdateProgress" result="$tradeOrder_active">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<do_if value="not $tradeOrder_active">
											<signal_cue cue="Mission_Escort_End" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_PlayerNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
										<set_value name="$isEscortNearby" exact="true" />
										<set_value name="$isEscortNearby_setPreviously" exact="true" />
										<run_actions ref="Mission_Escort_UpdateProgress" result="$tradeOrder_active">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<do_if value="not $tradeOrder_active">
											<signal_cue cue="Mission_Escort_End" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Escort_IsPlayerOwnedNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<cues>
										<cue name="Mission_Escort_IsPlayerOwnedNearby_Interval" ref="IsPlayerOwnedNearby">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Cue_AwayTooLong" value="Mission_Escort_End" />
											<param name="Cue_ExitEscort" value="Mission_Escort_PlayerAway" />
											<param name="Cue_EnterEscort" value="Mission_Escort_PlayerNearby" />
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Escort_BriefingCutscene" ref="BriefingCutscene">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<!-- escort specifics -->
								<cue name="Mission_Escort_SectorChange">
									<conditions>
										<!-- Event for the specified object changing sector (object = sector changing object, param = new sector, param2 = previous sector) -->
										<!-- <event_object_changed_sector object="$Ship" /> -->
										<event_object_changed_sector group="$Cue_Mission.$GroupOfOne_Ship" />
										<check_value value="namespace.hasmission" />
									</conditions>
									<actions>
										<set_value name="$sector_new_escort" exact="event.param" />
										<set_value name="$count_gatesUsed" operation="add" exact="1" />
										<run_actions ref="GetSectorClass" result="$sectorClassData">
											<param name="Sector" value="$sector_new_escort" />
											<param name="Faction" value="$Faction" />
										</run_actions>
										<set_value name="$count_sectorsTraversedBySectorClass" operation="add" exact="kEMissions.$sectorDifficultyByClassification.{$sectorClassData.$class}" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<!-- <cue name="Mission_Escort_AttentionChange">
									<conditions>
										<event_object_changed_attention object="$Ship" />
										<check_value value="not kEMissions.$attentionAdjacentZoneAndNearer.indexof.{event.param}" />
										<check_value value="kEMissions.$attentionAdjacentZoneAndNearer.indexof.{event.param2}" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param + ' event.param2: ' + event.param2" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
										<disable_travel_mode ship="$Ship" duration="3s" />
										<reset_cue cue="this" />
									</actions>
								</cue> -->
								<cue name="Mission_Escort_Convo" instantiate="true">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_conversation_started actor="$Ship.pilot" />
										</check_any>
										<check_value value="namespace.hasmission" />
									</conditions>
									<actions>
										<set_value name="$cue_convoSelected" exact="null" />
										<add_player_choice text="{11513, 351}" section="kEMissions_escort_finish" choiceparam="$Cue_Mission" /><!-- Finish my escort duties. -->
									</actions>
									<cues>
										<cue name="Mission_Escort_ConvoNext">
											<conditions>
												<event_conversation_next_section sectionprefix="kEMissions_" />
												<check_value value="event.param2 == $Cue_Mission" />
											</conditions>
											<actions>
												<set_value name="$cue_convoSelected" exact="$Cue_Mission" />
												<do_if value="event.param == 'kEMissions_escort_finish'">
													<signal_cue cue="Mission_Escort_End" />
												</do_if>
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Escort_ConvoFinish">
											<conditions>
												<event_conversation_finished />
											</conditions>
											<actions>
												<cancel_cue cue="parent" />
												<reset_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Escort_OrderEvents" instantiate="true">
									<conditions>
										<check_any>
											<event_trade_completed buyer="$Ship" />
											<event_trade_completed seller="$Ship" />
											<!-- <event_object_order_ready object="$Ship" />
											<event_object_order_cancelled object="$Ship" />
											<event_object_order_finished object="$Ship" />
											<event_object_order_param_edited object="$Ship" />
											<event_object_order_syncpoint_released object="$Ship" /> -->
											<event_object_order_ready group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_order_cancelled group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_order_finished group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_order_param_edited group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_order_syncpoint_released group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_docking_started group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_docking_queued group="$Cue_Mission.$GroupOfOne_Ship" />
											<event_object_undocking_started group="$Cue_Mission.$GroupOfOne_Ship" />
										</check_any>
										<check_value value="namespace.hasmission" />
									</conditions>
									<actions>
										<do_if value="event.name == 'event_trade_completed' or event.name == 'event_object_order_cancelled' or event.name == 'event_object_order_finished'">
											<do_if value="event.name == 'event_trade_completed'">
												<set_value name="$order" exact="event.param2" />
											</do_if>
											<do_else>
												<set_value name="$order" exact="event.param" />
											</do_else>
											<debug_text text="$Cue_Mission.$MissionId + ' $count_tradesCompleted (pre): ' + $count_tradesCompleted + ' $tradeOrders.count: ' + $tradeOrders.count" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
											<set_value name="$count_tradesCompleted" operation="add" exact="1" />
											<do_if value="not $tradeOrders.indexof.{$order}">
												<append_to_list name="$tradeOrders" exact="$order" />
											</do_if>
											<debug_text text="$Cue_Mission.$MissionId + ' $count_tradesCompleted (post): ' + $count_tradesCompleted + ' $tradeOrders.count: ' + $tradeOrders.count" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
											<do_if value="@$Ship.station">
												<debug_text text="$Cue_Mission.$MissionId + ' $Ship.station: ' + $Ship.station" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
												<add_to_group groupname="$stations_traded" object="$Ship.station" />
											</do_if>
										</do_if>
										<reset_cue cue="Mission_Escort_CheckOrders" />
									</actions>
									<cues>
										<cue name="Mission_Escort_OrderEvents2">
											<actions>
												<signal_cue cue="Mission_Escort_CheckOrders" />
												<cancel_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Escort_CheckOrders">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<cues>
										<cue name="Mission_Escort_CheckOrders_Timeout" checktime="player.age + 5s">
											<actions>
												<run_actions ref="Mission_Escort_UpdateTradeOrdersList">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
												<debug_text text="$Cue_Mission.$MissionId + ' $count_tradesCompleted: ' + $count_tradesCompleted" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
												<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrders.count: ' + $tradeOrders.count" chance="if namespace.hasguidance then UserSettings.$debugChance_missionEscort else 0" />
												<do_if value="$count_tradesCompleted ge $tradeOrders.count">
													<signal_cue cue="Mission_Escort_End" />
												</do_if>
												<do_else>
													<run_actions ref="Mission_Escort_UpdateProgress" result="$tradeOrder_active">
														<param name="Cue_Mission" value="$Cue_Mission" />
													</run_actions>
													<do_if value="not $tradeOrder_active">
														<signal_cue cue="Mission_Escort_End" />
													</do_if>
												</do_else>
												<cancel_cue cue="this" />
												<reset_cue cue="parent" />
											</actions>
										</cue>
									</cues>
								</cue>
							</cues>
						</cue>
						<library name="Mission_EscortGetTradeDescription" purpose="run_actions">
							<params>
								<param name="Ship" />
								<param name="TradeOffer" />
								<param name="IsProgress" />
							</params>
							<actions>
								<!-- <t id="331">Current trade mission: Sell %s(wares) to %s(trading partner).</t> -->
								<!-- <t id="332">Current trade mission: Buy %s(wares) from %s(trading partner).</t> -->
								<!-- <t id="333">Current mining mission: Deliver %s(wares) to %s(trading partner).</t> -->
								<!-- <t id="334">Sell %s(wares) to %s(trading partner).</t> -->
								<!-- <t id="335">Buy %s(wares) from %s(trading partner).</t> -->
								<!-- <t id="336">Deliver %s(wares) to %s(trading partner).</t> -->
								<set_value name="$description" exact="null" />
								<set_value name="$line" exact="null" />
								<set_value name="$tradingPartner" exact="null" />
								<do_if value="$Ship == $TradeOffer.buyer or ((not $TradeOffer.buyer) and $TradeOffer.seller)">
									<!-- ship is the buyer -->
									<set_value name="$tradingPartner" exact="$TradeOffer.seller" />
									<do_if value="$IsProgress">
										<set_value name="$line" exact="335" />
									</do_if>
									<do_else>
										<set_value name="$line" exact="332" />
									</do_else>
								</do_if>
								<do_elseif value="$Ship == $TradeOffer.seller or ((not $TradeOffer.seller) and $TradeOffer.buyer)">
									<!-- ship is the seller -->
									<set_value name="$tradingPartner" exact="$TradeOffer.buyer" />
									<do_if value="$Ship.macro.primarypurpose == purpose.mine">
										<do_if value="$IsProgress">
											<set_value name="$line" exact="336" />
										</do_if>
										<do_else>
											<set_value name="$line" exact="333" />
										</do_else>
									</do_if>
									<do_else>
										<do_if value="$IsProgress">
											<set_value name="$line" exact="334" />
										</do_if>
										<do_else>
											<set_value name="$line" exact="331" />
										</do_else>
									</do_else>
								</do_elseif>
								<do_if value="$tradingPartner.sector == player.sector">
									<run_actions ref="GetName" result="$name_tradingPartner"><param name="Component" value="$tradingPartner" /><param name="IsShort" value="true" /></run_actions>
									<set_value name="$description" exact="readtext.{11513}.{$line}.[$TradeOffer.ware, $name_tradingPartner]" />
								</do_if>
								<do_else>
									<set_value name="$description" exact="readtext.{11513}.{$line}.[$TradeOffer.ware, $tradingPartner.sector.knownname]" />
								</do_else>
								<return value="$description" />
							</actions>
						</library>
						<library name="Mission_Escort_UpdateTradeOrdersList" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship.tradeorders.count: ' + @$Cue_Mission.$Ship.tradeorders.count" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionEscort else 0" />
								<do_for_each name="$tradeOrder" in="$Cue_Mission.$Ship.tradeorders">
									<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrder: ' + $tradeOrder" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionEscort else 0" />
									<do_if value="$tradeOrder.trade.exists">
										<do_if value="not $Cue_Mission.$tradeOrders.indexof.{$tradeOrder.trade}">
											<append_to_list name="$Cue_Mission.$tradeOrders" exact="$tradeOrder.trade" />
										</do_if>
									</do_if>
								</do_for_each>
								<set_value name="$Cue_Mission.$count_tradeOrders" exact="$Cue_Mission.$tradeOrders.count" />
							</actions>
						</library>
						<library name="Mission_Escort_UpdateProgress" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$tradeOrder_active" exact="null" />
								<set_value name="$Cue_Mission.$time_updateSpamStopper" exact="player.age" />
								<run_actions ref="GetName" result="$name_ship"><param name="Component" value="$Cue_Mission.$Ship" /></run_actions>
								<set_value name="$progressText" exact="null" />
								<do_for_each name="$tradeOrder" in="$Cue_Mission.$Ship.tradeorders">
									<!-- <do_if value="$Cue_Mission.hasguidance and md.kuertee_emergent_missions.UserSettings.$debugChance_missionEscort">
										<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrder == $Cue_Mission.$Ship.order: ' + ($tradeOrder == $Cue_Mission.$Ship.order) + ', $tradeOrder.exists: ' + $tradeOrder.exists" />
									</do_if> -->
									<do_if value="$tradeOrder.exists">
										<do_if value="not $tradeOrder_active">
											<set_value name="$tradeOrder_active" exact="$tradeOrder" />
											<run_actions ref="Mission_EscortGetTradeDescription" result="$progressText">
												<param name="Ship" value="$Cue_Mission.$Ship" />
												<param name="TradeOffer" value="$tradeOrder.trade" />
												<param name="IsProgress" value="true" />
											</run_actions>
										</do_if>
										<do_if value="@$tradeOrder.trade.buyer and $tradeOrder.trade.buyer != $Cue_Mission.$Ship">
											<add_to_group groupname="$Cue_Mission.$stations_max" object="$tradeOrder.trade.buyer" />
										</do_if>
										<do_if value="@$tradeOrder.trade.seller and $tradeOrder.trade.seller != $Cue_Mission.$Ship">
											<add_to_group groupname="$Cue_Mission.$stations_max" object="$tradeOrder.trade.seller" />
										</do_if>
									</do_if>
								</do_for_each>
								<do_if value="$tradeOrder_active">
									<clear_group group="$Cue_Mission.$objectiveTargets" />
									<do_if value="$Cue_Mission.hasguidance and md.kuertee_emergent_missions.UserSettings.$debugChance_missionEscort">
										<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$isEscortNearby: ' + @$Cue_Mission.$isEscortNearby" />
										<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrder_active: ' + @$tradeOrder_active" />
										<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrder_active.trade.buyer: ' + @$tradeOrder_active.trade.buyer" />
										<debug_text text="$Cue_Mission.$MissionId + ' $tradeOrder_active.trade.seller: ' + @$tradeOrder_active.trade.seller" />
									</do_if>
									<do_if value="@$Cue_Mission.$isEscortNearby or $Cue_Mission.$isEscortNearby_setPreviously">
										<do_if value="@$tradeOrder_active.trade.buyer">
											<add_to_group groupname="$Cue_Mission.$objectiveTargets" object="$tradeOrder_active.trade.buyer" />
										</do_if>
										<do_if value="@$tradeOrder_active.trade.seller">
											<add_to_group groupname="$Cue_Mission.$objectiveTargets" object="$tradeOrder_active.trade.seller" />
										</do_if>
									</do_if>
									<add_to_group groupname="$Cue_Mission.$objectiveTargets" object="$Cue_Mission.$Ship" />
									<set_value name="$dockingbay" exact="null" />
									<!-- <set_value name="$isInZoneOrNearby" exact="kEMissions.$attentionVisibleAndNearer.indexof.{$Cue_Mission.$Ship.attention} gt 0" /> -->
									<!-- <do_if value="$isInZoneOrNearby"> -->
									<do_if value="@$Cue_Mission.$isEscortNearby">
										<set_value name="$dockingbay" exact="$Cue_Mission.$Ship.assigneddock" />
										<do_if value="not $dockingbay">
											<set_value name="$dockingbay" exact="$Cue_Mission.$Ship.dock" />
										</do_if>
									</do_if>
									<do_if value="$dockingbay">
										<create_position name="$pos" space="$dockingbay.container.zone" object="$dockingbay.container" />
										<do_if value="$progressText">
											<!-- (objective text)Wait for %s(ship name). -->
											<!-- <set_objective cue="$Cue_Mission" step="1" action="objective.custom" customaction="{11513, 338}.[$name_ship]" object="$dockingbay.container" updatebriefing="true"> -->
											<set_objective cue="$Cue_Mission" step="1" action="objective.wait" object="$dockingbay.container" offset="position.[0m, 0m, 100m]" radius="50m" updatebriefing="true">
												<progress progress="$Cue_Mission.$stations_traded.count" max="$Cue_Mission.$stations_max.count" text="$progressText" />
											</set_objective>
										</do_if>
										<do_else>
											<!-- (objective text)Wait for %s(ship name). -->
											<!-- <set_objective cue="$Cue_Mission" step="1" action="objective.custom" customaction="{11513, 338}.[$name_ship]" object="$dockingbay.container" updatebriefing="true"> -->
											<set_objective cue="$Cue_Mission" step="1" action="objective.wait" object="$dockingbay.container" offset="position.[0m, 0m, 100m]" radius="50m" updatebriefing="true">
												<progress progress="$Cue_Mission.$stations_traded.count" max="$Cue_Mission.$stations_max.count" />
											</set_objective>
										</do_else>
									</do_if>
									<do_else>
										<do_if value="$progressText">
											<!-- (objective text)Escort %s(ship name). -->
											<!-- <set_objective cue="$Cue_Mission" step="1" action="objective.custom" customaction="{11513, 337}.[$name_ship]" group="$Cue_Mission.$objectiveTargets" updatebriefing="true"> -->
											<set_objective cue="$Cue_Mission" step="1" action="objective.escort" group="$Cue_Mission.$objectiveTargets" updatebriefing="true">
												<progress progress="$Cue_Mission.$stations_traded.count" max="$Cue_Mission.$stations_max.count" text="$progressText" />
											</set_objective>
										</do_if>
										<do_else>
											<!-- (objective text)Escort %s(ship name). -->
											<!-- <set_objective cue="$Cue_Mission" step="1" action="objective.custom" customaction="{11513, 337}.[$name_ship]" group="$Cue_Mission.$objectiveTargets" updatebriefing="true"> -->
											<set_objective cue="$Cue_Mission" step="1" action="objective.escort" group="$Cue_Mission.$objectiveTargets" updatebriefing="true">
												<progress progress="$Cue_Mission.$stations_traded.count" max="$Cue_Mission.$stations_max.count" />
											</set_objective>
										</do_else>
									</do_else>
								</do_if>
								<return value="$tradeOrder_active" />
							</actions>
						</library>
					</cues>
				</cue>
				<!--
					
					                      88          88
					                      ""          88
					                                  88
					8b,dPPYba, ,adPPYYba, 88  ,adPPYb,88
					88P'   "Y8 ""     `Y8 88 a8"    `Y88
					88         ,adPPPPP88 88 8b       88
					88         88,    ,88 88 "8a,   ,d88
					88         `"8bbdP"Y8 88  `"8bbdP"Y8
					
					
				 -->
				<cue name="Missions_SectorRaids" namespace="this" version="2">
					<actions>
						<set_value name="$missionsByFactionBySector" exact="table[]" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2'" />
						<set_value name="$patch_removeSectorsByFaction" exact="table[]" />
						<do_for_each name="$faction_inList" in="$missionsByFactionBySector.keys.list">
							<debug_text text="'$faction_inList: ' + $faction_inList" />
							<do_for_each name="$sector_inList" in="$missionsByFactionBySector.{$faction_inList}.keys.list">
								<debug_text text="'    $sector_inList: ' + $sector_inList + ' (' + $sector_inList.knownname + ')'" />
								<set_value name="$raid" exact="$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
								<debug_text text="'        $raid: ' + $raid + ' exists: ' + $raid.exists" />
								<do_if value="not $raid.exists">
									<do_if value="not @$patch_removeSectorsByFaction.{$faction_inList}">
										<set_value name="$patch_removeSectorsByFaction.{$faction_inList}" exact="[]" />
									</do_if>
									<append_to_list name="$patch_removeSectorsByFaction.{$faction_inList}" exact="$sector_inList" />
								</do_if>
							</do_for_each>
						</do_for_each>
						<do_for_each name="$faction_inList" in="$patch_removeSectorsByFaction.keys.list">
							<do_for_each name="$sector_inList" in="$patch_removeSectorsByFaction.{$faction_inList}">
								<debug_text text="'   $sector_inList (pre-remove): ' + $sector_inList + ' (' + $sector_inList.knownname + '): ' + @$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
								<remove_value name="$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
								<debug_text text="'   $sector_inList (post-remove): ' + $sector_inList + ' (' + $sector_inList.knownname + '): ' + @$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
							</do_for_each>
						</do_for_each>
					</patch>
					<cues>
						<cue name="Missions_SectorRaids_MapMenu_AcceptedMissions" namespace="this">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'MapMenu'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name + ' event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance" />
								<do_if value="event.param2 != 'menu_close'">
									<set_value name="$shipsByAcceptedMission" exact="table[]" />
									<set_value name="$aiDefendersByAcceptedMission" exact="table[]" />
									<do_for_each name="$faction_inList" in="Missions_SectorRaids.$missionsByFactionBySector.keys.list">
										<do_for_each name="$sector_inList" in="Missions_SectorRaids.$missionsByFactionBySector.{$faction_inList}.keys.list">
											<set_value name="$Cue_Mission" exact="Missions_SectorRaids.$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
											<do_if value="@$Cue_Mission.exists and $Cue_Mission.hasmission and $Cue_Mission.$Objective_Step gt $Cue_Mission.$Objective_Step_brief">
												<set_value name="$ship" exact="$Cue_Mission.$Ship" />
												<!-- <debug_text text="$ship + ' $Cue_Mission: ' + $Cue_Mission" chance="UserSettings.$debugChance" /> -->
												<!-- <debug_text text="$ship + ' $ship: ' + $ship + '(' + @$ship.knownname + ', ' + @$ship.idcode + ')'" chance="UserSettings.$debugChance" /> -->
												<set_value name="$shipsByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ship" />
												<!-- <debug_text text="$ship + ' $Ships_aiDefenders: ' + $Cue_Mission.$Ships_aiDefenders" chance="UserSettings.$debugChance" /> -->
												<set_value name="$aiDefendersByAcceptedMission.{$Cue_Mission}" exact="$Cue_Mission.$Ships_aiDefenders" />
											</do_if>
										</do_for_each>
									</do_for_each>
									<set_value name="player.entity.$ui_kuertee_em_raids" exact="table[
										$shipsByAcceptedMission = $shipsByAcceptedMission,
										$aiDefendersByAcceptedMission = $aiDefendersByAcceptedMission
									]" />
									<debug_text text="player.entity.$ui_kuertee_em_raids" chance="UserSettings.$debugChance" />
								</do_if>
								<do_else>
									<raise_lua_event name="'kEM_clear_ui_data'" />
									<remove_value name="player.entity.$ui_kuertee_em_raids" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="Missions_SectorRaids_CreateOffer" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$ship" exact="event.param.$ship" />
								<do_if value="$ship.isoperational and $ship.assignedaipilot.isoperational and $ship.owner.relationto.{faction.player} ge $ship.owner.relation.neutral.min">
									<set_value name="$target" exact="event.param.$target" />
									<set_value name="$targetSector" exact="event.param.$targetSector" />
									<set_value name="$cue_factionAI" exact="event.param.$cue_factionAI" />
									<set_value name="$cue_factionAI.$kEMissions_mission_isCreateOfferChecked" exact="true" />
									<run_actions ref="GetSectorClass" result="$class_targetSectorData">
										<param name="Sector" value="$targetSector" />
										<param name="Faction" value="$ship.owner" />
									</run_actions>
									<do_if value="$cue_factionAI.static == md.FactionGoal_Plunder.Start">
										<set_value name="$missionType" exact="kEMissions.$missionType_defendPirate" />
									</do_if>
									<do_elseif value="$cue_factionAI.$OwnerGoal.static == md.FactionGoal_Invade_Space.Start">
										<set_value name="$missionType" exact="kEMissions.$missionType_raid" />
									</do_elseif>
									<do_else>
										<set_value name="$missionType" exact="kEMissions.$missionType_patrol" />
									</do_else>
									<do_if value="$missionType == kEMissions.$missionType_patrol">
										<do_if value="[
												kEMissions.$sector_frontier,
												kEMissions.$sector_enemyHome,
												kEMissions.$sector_enemyTerritory,
												kEMissions.$sector_free
											].indexof.{$class_targetSectorData.$class} > 0
											or
											$class_targetSectorData.$isFrontier
										">
											<do_for_each name="$faction_contesting" in="$targetSector.contestingfactions">
												<do_if value="$faction_contesting.hasrelation.enemy.{$ship.owner}">
													<set_value name="$missionType" exact="kEMissions.$missionType_raid" />
													<break />
												</do_if>
											</do_for_each>
										</do_if>
									</do_if>
									<run_actions ref="Mission_SectorRaid_GetMissionByFactionBySector" result="$mission_sectorRaid_previous">
										<param name="Ship" value="$ship" />
										<param name="Faction" value="$ship.owner" />
										<param name="Sector" value="$targetSector" />
									</run_actions>
									<debug_text text="$ship + ' $mission_sectorRaid_previous: ' + $mission_sectorRaid_previous" chance="UserSettings.$debugChance_missionRaid" />
									<do_if value="not @$mission_sectorRaid_previous.exists">
										<!-- no mission attached to the faction goal exists, create new -->
										<signal_cue_instantly cue="Mission_SectorRaid" param="table[
											$ship = $ship,
											$targetSector = $targetSector,
											$target = $target,
											$missionType = $missionType,
											$cue_factionAI = $cue_factionAI
										]" />
									</do_if>
									<!-- <do_elseif value="@$mission_sectorRaid_previous.$Ship == $ship and $mission_sectorRaid_previous.hasmission"> -->
									<do_elseif value="(@cue_factionAI.$Ships.indexof.{$ship} or @$mission_sectorRaid_previous.$Ship == $ship)">
										<do_if value="$missionType != kEMissions.$missionType_defendPirate">
											<!-- a ship with a mission used in a new factionsubgoal_defendarea cue -->
											<!-- assume the ship's previous mission was delayed from getting cleared in Mission_SectorRaid_FactionAI_End -->
											<!-- so, simply update this ship's missions -->
											<do_if value="@$mission_sectorRaid_previous.$Cue_UpdateMission.exists">
												<signal_cue_instantly cue="$mission_sectorRaid_previous.$Cue_UpdateMission" param="table[
													$ship = $ship,
													$targetSector = $targetSector,
													$target = $target,
													$missionType = $missionType,
													$cue_factionAI = $cue_factionAI
												]" />
											</do_if>
										</do_if>
									</do_elseif>
									<do_if value="not @$cue_factionAI.$kEMissions_mission">
										<set_value name="$cue_factionAI.$kEMissions_mission_isSet" exact="false" />
									</do_if>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<library name="Mission_SectorRaids_IsOkToCreateOffer" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="Ship" />
								<param name="TargetSector" />
								<param name="Target" />
								<param name="kEMissionType" />
								<param name="Cue_FactionAI" />
							</params>
							<actions>
								<run_actions ref="Requirements_GetForFaction">
									<param name="Faction" value="$Ship.trueowner" />
								</run_actions>
								<set_value name="$isOk" exact="false" />
								<do_if value="(not $Ship.hasrelation.enemy.{faction.player}) and @$Ship.assignedaipilot.isoperational and @$Cue_FactionAI.exists">
									<run_actions ref="md.X4Ep1_War_Subscriptions.Query_War_Subscription_Status" result="$subscription_status">
										<param name="HostFaction" value="$Ship.owner" />
										<param name="EnemyFaction" value="$Cue_Mission.$OpposingFaction" />
									</run_actions>
									<run_actions ref="GetAnyWarSubscriptions" result="$warSubscriptions">
										<param name="HostFactions" value="[$Cue_Mission.$Faction]" />
									</run_actions>
									<run_actions ref="md.X4Ep1_War_Subscriptions.Get_Active_War_Subscriptions" result="$warSubscriptions_active">
										<param name="HostFactions" value="[$Cue_Mission.$Faction]" />
									</run_actions>
									<set_value name="$isOk_reqRel" exact="
										(
											$kEMissionType == kEMissions.$missionType_patrol and
											(
												Requirements.$mission_patrol_req_relLevel == UserSettings.$req_none
												or
												(
													Requirements.$mission_patrol_req_relLevel == UserSettings.$req_rel_neutral and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.neutral.min
												) or
												(
													Requirements.$mission_patrol_req_relLevel == UserSettings.$req_rel_friend and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
												) or
												(
													Requirements.$mission_patrol_req_relLevel == UserSettings.$req_rel_warSubscription and
													(
														$subscription_status == 'subscribed'
														or
														(
															$warSubscriptions.count gt 0
															and
															$warSubscriptions_active.count gt 0
														)
														or
														(
															$warSubscriptions.count == 0
															and
															$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
														)
													)
												)
											)
										) or
										(
											$kEMissionType == kEMissions.$missionType_raid and
											(
												Requirements.$mission_raid_req_relLevel == UserSettings.$req_none
												or
												(
													Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_neutral and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.neutral.min
												) or
												(
													Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_friend and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
												) or
												(
													Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_warSubscription and
													(
														$subscription_status == 'subscribed'
														or
														(
															$warSubscriptions.count gt 0
															and
															$warSubscriptions_active.count gt 0
														)
														or
														(
															$warSubscriptions.count == 0
															and
															$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
														)
													)
												)
											)
										) or
										(
											$kEMissionType == kEMissions.$missionType_defendPirate and
											(
												Requirements.$mission_defendPirate_req_relLevel == UserSettings.$req_none
												or
												(
													Requirements.$mission_defendPirate_req_relLevel == UserSettings.$req_rel_neutral and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.neutral.min
												) or
												(
													Requirements.$mission_defendPirate_req_relLevel == UserSettings.$req_rel_friend and
													$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
												) or
												(
													Requirements.$mission_defendPirate_req_relLevel == UserSettings.$req_rel_warSubscription and
													(
														$subscription_status == 'subscribed'
														or
														(
															$warSubscriptions.count gt 0
															and
															$warSubscriptions_active.count gt 0
														)
														or
														(
															$warSubscriptions.count == 0
															and
															$Ship.owner.relationto.{faction.player} ge $Ship.owner.relation.friend.min
														)
													)
												)
											)
										)
									" />
									<do_if value="md.kuertee_professions.kProfs.exists">
										<run_actions ref="md.kuertee_professions.GetReputationWithFaction" result="$reputation">
											<param name="Faction" value="$Ship.owner" />
										</run_actions>
										<set_value name="$isOk_reqRepu" exact="
											(
												$kEMissionType == kEMissions.$missionType_patrol and
												(
													Requirements.$mission_patrol_req_repuLevel == UserSettings.$req_none
													or
													(
														Requirements.$mission_patrol_req_repuLevel == UserSettings.$req_repu_defender and
														$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender
													) or
													(
														Requirements.$mission_patrol_req_repuLevel == UserSettings.$req_repu_defenderOrMercenary and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary
														)
													) or
													(
														Requirements.$mission_patrol_req_repuLevel == UserSettings.$req_repu_defenderOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													) or
													(
														Requirements.$mission_patrol_req_repuLevel == UserSettings.$req_repu_defenderOrMercenaryOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													)
												)
											) or
											(
												$kEMissionType == kEMissions.$missionType_raid and
												(
													Requirements.$mission_raid_req_repuLevel == UserSettings.$req_none
													or
													(
														Requirements.$mission_raid_req_repuLevel == UserSettings.$req_repu_defender and
														$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender
													) or
													(
														Requirements.$mission_raid_req_repuLevel == UserSettings.$req_repu_defenderOrMercenary and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary
														)
													) or
													(
														Requirements.$mission_raid_req_repuLevel == UserSettings.$req_repu_defenderOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													) or
													(
														Requirements.$mission_raid_req_repuLevel == UserSettings.$req_repu_defenderOrMercenaryOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													)
												)
											) or
											(
												$kEMissionType == kEMissions.$missionType_defendPirate and
												(
													Requirements.$mission_defendPirate_req_repuLevel == UserSettings.$req_none
													or
													(
														Requirements.$mission_defendPirate_req_repuLevel == UserSettings.$req_repu_defender and
														$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender
													) or
													(
														Requirements.$mission_defendPirate_req_repuLevel == UserSettings.$req_repu_defenderOrMercenary and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary
														)
													) or
													(
														Requirements.$mission_defendPirate_req_repuLevel == UserSettings.$req_repu_defenderOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													) or
													(
														Requirements.$mission_defendPirate_req_repuLevel == UserSettings.$req_repu_defenderOrMercenaryOrVigilante and
														(
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Defender or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Mercenary or
															$reputation == @md.kuertee_professions.kProfs.$Reputation_Vigilante
														)
													)
												)
											)
										" />
									</do_if>
									<do_else>
										<set_value name="$isOk_reqRepu" exact="true" />
									</do_else>
									<debug_text text="$Cue_Mission.$MissionId + ' $isOk_reqRel: ' + $isOk_reqRel + ' $isOk_reqRepu: ' + $isOk_reqRepu" chance="UserSettings.$debugChance_missionRaid" />
									<do_if value="$isOk_reqRel and $isOk_reqRepu">
										<set_value name="$isOk" exact="true" />
									</do_if>
								</do_if>
								<return value="$isOk" />
							</actions>
						</library>
						<cue name="Mission_SectorRaid" namespace="this" instantiate="true" version="21">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$Cue_Mission" exact="this" />
								<set_value name="$Ship" exact="event.param.$ship" />
								<set_value name="$MissionId" exact="$Ship" />
								<create_group groupname="$GroupOfOne_Ship" />
								<add_to_group groupname="$GroupOfOne_Ship" object="$Ship" />
								<set_value name="$Ship_Original" exact="$Ship" />
								<set_value name="$Cue_FactionAI" exact="event.param.$cue_factionAI" />
								<set_value name="$time_subGoalElapsed" exact="player.age - $Cue_FactionAI.$RegistryTable.$StartTime" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + $Ship + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' $time_subGoalElapsed: ' + ($time_subGoalElapsed / 60) + 'min'" chance="UserSettings.$debugChance_missionRaid" />
								<set_value name="$target" exact="event.param.$target" />
								<set_value name="$TargetSector" exact="event.param.$targetSector" />
								<set_value name="$kEMissionType" exact="event.param.$missionType" />
								<set_value name="$Ship.assignedaipilot.$kEMissions_mission" exact="$Cue_Mission" />
								<set_value name="$Ship.assignedaipilot.$kEMissions_mission_isSet" exact="true" />
								<set_value name="$Faction" exact="$Ship.owner" />
								<set_value name="$Difficulty" exact="level.medium" />
								<run_actions ref="Mission_SectorRaid_Register">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Faction" value="$Faction" />
									<param name="Sector" value="$TargetSector" />
								</run_actions>
								<set_value name="$Actor" exact="null" />
								<run_actions ref="GetMissionNPCByShip" result="$Actor">
									<param name="Ship" value="$Ship" />
								</run_actions>
								<create_group groupname="$MissionNPC_Container" />
								<set_value name="$MissionNPC_DynamicInterior" exact="null" />
								<set_value name="$MissionGroup" exact="null" />
								<set_value name="$Objective_Step_start" exact="0" />
								<set_value name="$Objective_Step_brief" exact="1" />
								<set_value name="$Objective_Step_raid" exact="2" />
								<set_value name="$Objective_Step_debrief" exact="3" />
								<set_value name="$Objective_Step_complete" exact="4" />
								<include_actions ref="Mission_SectorRaid_ResetMissionVars" />
								<run_actions ref="Requirements_GetForFaction">
									<param name="Faction" value="$Ship.trueowner" />
								</run_actions>
								<do_if value="$OpposingFaction != faction.criminal">
									<do_if value="Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_warSubscription">
										<run_actions ref="Mission_SectorRaid_SetMissionGroup">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="HostFaction" value="$Cue_Mission.$Faction" />
											<param name="EnemyFaction" value="$OpposingFaction" />
										</run_actions>
									</do_if>
								</do_if>
								<run_actions ref="Mission_SectorRaid_GetMissionNameAndDescription" result="$nameAndDescription">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<set_value name="$mission_name" exact="$nameAndDescription.$name" />
								<set_value name="$mission_name_short" exact="$nameAndDescription.$name_short" />
								<do_if value="@md.kuertee_professions.kProfs.exists">
									<set_value name="$Client" exact="$Ship.assignedaipilot" />
									<set_value name="$TextTable" exact="table[$missionname = $mission_name_short]" />
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship.assignedaipilot: ' + @$Ship.assignedaipilot.knownname + ' $MissionGroup: ' + $MissionGroup + ' $mission_name: ' + $mission_name" chance="UserSettings.$debugChance_missionRaid" />
							</actions>
							<patch sinceversion="4">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 4, state: ' + this.state" />
								<set_value name="$versionUpdate_missionNPCContainer" exact="$MissionNPC_Container" />
								<create_group groupname="$MissionNPC_Container" />
								<do_if value="$versionUpdate_missionNPCContainer.isoperational">
									<add_to_group groupname="$MissionNPC_Container" object="$versionUpdate_missionNPCContainer" />
								</do_if>
								<remove_value name="$versionUpdate_missionNPCContainer" />
							</patch>
							<patch sinceversion="6">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 6, state: ' + this.state" />
								<do_if value="$Ship.owner.relationto.{faction.player} lt $Ship.owner.relation.neutral.min">
									<signal_cue cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
								</do_if>
							</patch>
							<patch sinceversion="7">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 7, state: ' + this.state" />
								<do_if value="
									(not @$Cue_FactionAI.exists) or
									$Ship.owner.relationto.{faction.player} lt $Ship.owner.relation.neutral.min
								">
									<set_value name="$debugChance_saved" exact="UserSettings.$debugChance_missionRaid" />
									<set_value name="UserSettings.$debugChance_missionRaid" exact="100" />
									<debug_text text="$Cue_Mission.$Ship + ' $Cue_FactionAI.exists: ' + @$Cue_FactionAI.exists + ' $Ship.owner.relationto.{faction.player} lt ' + $Ship.owner.relation.neutral.min + ': ' + $Ship.owner.relationto.{faction.player} + ' (' + ($Ship.owner.relationto.{faction.player} lt $Ship.owner.relation.neutral.min) + ')'" />
									<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
									<set_value name="UserSettings.$debugChance_missionRaid" exact="$debugChance_saved" />
								</do_if>
							</patch>
							<patch sinceversion="8">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 8, state: ' + this.state" />
								<set_value name="$Objective_Step_start" exact="0" />
								<set_value name="$Objective_Step_brief" exact="1" />
								<set_value name="$Objective_Step_raid" exact="2" />
								<set_value name="$Objective_Step_debrief" exact="3" />
								<set_value name="$Objective_Step_complete" exact="4" />
							</patch>
							<patch sinceversion="9">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 9, state: ' + this.state" />
								<debug_text text="$Cue_Mission.$Ship + ' Mission_SectorRaid_CreateOffer_IfInRange.state: ' + Mission_SectorRaid_CreateOffer_IfInRange.state" />
							</patch>
							<patch sinceversion="10">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 10, state: ' + this.state" />
								<set_value name="$time_updateSpamStopper" exact="$time_missionLastUpdated" />
								<create_group groupname="$stations_owned" />
								<create_group groupname="$stations_toVisit" />
								<create_group groupname="$stations_visited" />
							</patch>
							<patch sinceversion="11">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 11, state: ' + this.state" />
								<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
							</patch>
							<patch sinceversion="12">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 12, state: ' + this.state" />
								<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
							</patch>
							<patch sinceversion="13">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 13, state: ' + this.state" />
								<run_actions ref="Mission_SectorRaid_GetRewardForEscort" result="$Cue_Mission.$MissionReward_ForEscort">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
							</patch>
							<patch sinceversion="14">
								<debug_text text="$Cue_Mission.$Ship + ' patch sinceversion 14, state: ' + this.state" />
								<set_value name="$Cue_Mission.$MissionId" exact="$Cue_Mission.$Ship" />
							</patch>
							<patch sinceversion="15">
								<debug_text text="'patch sinceversion 15, state: ' + this.state" />
								<!-- <debug_text text="'patch sinceversion 15, this.exists: ' + this.exists" />
								<debug_text text="'patch sinceversion 15, $MissionId: ' + $MissionId" />
								<debug_text text="'patch sinceversion 15, $Ship: ' + $Ship + ' ' + @$Ship.isoperational" />
								<debug_text text="'patch sinceversion 15, $Ship: ' + $Ship + ' ' + @$Ship.knownname" /> -->
								<debug_text text="'patch sinceversion 15, $Ship.assignedaipilot: ' + @$Ship.assignedaipilot + ' ' + @$Ship.assignedaipilot.knownname" />
								<do_if value="(not @$Ship.isoperational) or (not @$Ship.assignedaipilot.isoperational)">
									<do_if value="not UserSettings.$debugChance_missionRaid_patch?">
										<set_value name="UserSettings.$debugChance_missionRaid_patch" exact="UserSettings.$debugChance_missionRaid" />
									</do_if>
									<set_value name="UserSettings.$debugChance_missionRaid" exact="100" />
									<do_if value="$Cue_Mission.hasmission">
										<run_actions ref="Mission_SectorRaid_FindAndSetNewShip">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Cue_NewShip" value="Mission_SectorRaid_OnFactionAIUpdated" />
											<param name="Cue_NoShipFound" value="Mission_SectorRaid_StopRaiding" />
										</run_actions>
									</do_if>
									<do_else>
										<run_actions ref="Mission_SectorRaid_FindAndSetNewShip">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Cue_NewShip" value="Mission_SectorRaid_OnFactionAIUpdated" />
											<param name="Cue_NoShipFound" value="Mission_SectorRaid_CleanUp" />
										</run_actions>
									</do_else>
								</do_if>
							</patch>
							<patch sinceversion="16">
								<debug_text text="'patch sinceversion 16, state: ' + this.state" />
								<set_value name="$MissionReward_ForKeptAlive" exact="0" />
							</patch>
							<patch sinceversion="17">
								<debug_text text="'patch sinceversion 17, state: ' + this.state" />
								<set_value name="$time_missionEnd" exact="0" />
								<do_if value="not $time_missionEnd">
									<do_if value="$Cue_Mission.hasmission and $Cue_Mission.$time_awayTotal ge 5min">
										<set_value name="$time_missionEnd" exact="player.age" />
									</do_if>
								</do_if>
							</patch>
							<patch sinceversion="19">
								<debug_text text="'patch sinceversion 19, state: ' + this.state" />
								<do_if value="$time_missionStart and (not $time_missionEnd)">
									<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
									<do_if value="$isHealthy_thisMission">
										<signal_cue cue="Mission_SectorRaid_RestartRaiding" />
									</do_if>
								</do_if>
							</patch>
							<patch sinceversion="20">
								<debug_text text="'patch sinceversion 20, state: ' + this.state" />
								<do_if value="(not $time_missionStart) or $time_missionEnd">
									<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
									<do_if value="not $isHealthy_thisMission">
										<signal_cue cue="Mission_SectorRaid_CleanUp" />
									</do_if>
								</do_if>
							</patch>
							<patch sinceversion="21">
								<debug_text text="'patch sinceversion 21, state: ' + this.state" />
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 21 state: ' + this.state + ' $Ship: ' + @$Ship.knownname + ' ' + @$Ship.idcode + ' operational: ' + @$Ship.isoperational" />
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 21 state: ' + this.state + ' $Ship.assignedaipilot: ' + @$Ship.assignedaipilot.name + ' exists: ' + @$Ship.assignedaipilot.exists" />
								<do_if value="(not @$Ship.isoperational) or (not @$Ship.assignedaipilot.exists)">
									<signal_cue cue="Mission_SectorRaid_FactionAI_End_20220212" />
								</do_if>
							</patch>
							<cues>
								<cue name="Mission_SectorRaid_CreateOffer_IfInRange">
									<conditions>
										<check_any>
											<event_ui_triggered screen="'MapMenu'" control="'missionoffer'" />
											<check_all>
												<event_object_changed_sector group="global.$PlayerOccupiedShipGroup" />
												<check_value value="@md.ExternalApp.EA_Main.exists" />
											</check_all>
										</check_any>
									</conditions>
									<!-- <delay exact="5s" /> -->
									<actions>
										<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
										<set_value name="$gateDistance_toShip" exact="player.entity.gatedistance.{$Ship}" />
										<set_value name="$gateDistance_toTargetSector" exact="player.entity.gatedistance.{$TargetSector}" />
										<debug_text text="'\n\n\n'" chance="UserSettings.$debugChance_missionRaid" />
										<debug_text text="$Cue_Mission.$MissionId + ' $isHealthy_thisMission: ' + $isHealthy_thisMission" chance="UserSettings.$debugChance_missionRaid" />
										<debug_text text="$Cue_Mission.$MissionId + ' $gateDistance_toShip: ' + $gateDistance_toShip" chance="UserSettings.$debugChance_missionRaid" />
										<debug_text text="$Cue_Mission.$MissionId + ' $gateDistance_toTargetSector: ' + $gateDistance_toTargetSector" chance="UserSettings.$debugChance_missionRaid" />
										<debug_text text="$Cue_Mission.$MissionId + ' hasmissionoffer: ' + $Cue_Mission.hasmissionoffer + ' hasmission: ' + $Cue_Mission.hasmission + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' (' + @$Cue_FactionAI.exists + ') $TargetSector: ' + $TargetSector + ' (' + $TargetSector.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="(not $Cue_Mission.hasmissionoffer) and (not $Cue_Mission.hasmission)">
											<do_if value="$isHealthy_thisMission">
												<do_if value="
													$gateDistance_toShip le UserSettings.$gateDistance_missionOffers
													or
													$gateDistance_toTargetSector le UserSettings.$gateDistance_missionOffers
												">
													<run_actions ref="Mission_SectorRaids_IsOkToCreateOffer" result="$isOkToCreateOffer">
														<param name="Cue_Mission" value="$Cue_Mission" />
														<param name="Ship" value="$Ship" />
														<param name="TargetSector" value="$TargetSector" />
														<param name="Target" value="$target" />
														<param name="kEMissionType" value="$kEMissionType" />
														<param name="Cue_FactionAI" value="$Cue_FactionAI" />
													</run_actions>
													<debug_text text="$Cue_Mission.$MissionId + ' ' + $Ship.knownname + ' (' + $Ship.idcode + ') $isOkToCreateOffer: ' + $isOkToCreateOffer" chance="UserSettings.$debugChance_missionRaid" />
													<do_if value="$isOkToCreateOffer">
														<run_actions ref="Mission_SectorRaid_GetMissionNameAndDescription" result="$nameAndDescription">
															<param name="Cue_Mission" value="$Cue_Mission" />
														</run_actions>
														<set_value name="$mission_name" exact="$nameAndDescription.$name" />
														<set_value name="$mission_description" exact="$nameAndDescription.$description" />
														<set_value name="$mission_offerer" exact="$Ship.assignedaipilot" />
														<do_if value="not @$mission_offerer.exists">
															<set_value name="$mission_offerer" exact="$Ship.owner.representative" />
														</do_if>
														<do_if value="not @$mission_offerer.exists">
															<find_station groupname="$station_offerer" space="player.galaxy" owner="$Ship.owner" sortbydistanceto="$Ship" />
															<set_value name="$mission_offerer" exact="$station_offerer.tradenpc" />
														</do_if>
														<do_if value="@$mission_offerer.exists">
															<do_if value="(not $MissionGroup) and $OpposingFaction != faction.criminal">
																<do_if value="Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_warSubscription">
																	<run_actions ref="Mission_SectorRaid_SetMissionGroup">
																		<param name="Cue_Mission" value="$Cue_Mission" />
																		<param name="HostFaction" value="$Faction" />
																		<param name="EnemyFaction" value="$OpposingFaction" />
																	</run_actions>
																</do_if>
															</do_if>
															<create_offer cue="$Cue_Mission"
																type="missiontype.fight"
																actor="$mission_offerer"
																name="$mission_name"
																description="$mission_description"
																faction="$Faction"
																difficulty="$Difficulty"
																distance="0"
																group="$MissionGroup"
															>
																<briefing>
																	<objective step="1" action="objective.support" object="$Ship" />
																</briefing>
															</create_offer>
														</do_if>
														<do_else>
															<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
														</do_else>
													</do_if>
												</do_if>
											</do_if>
											<do_else>
												<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
											</do_else>
										</do_if>
										<do_elseif value="$Cue_Mission.hasmission">
											<do_if value="not $isHealthy_thisMission">
												<do_if value="$Objective_Step gt $Objective_Step_brief">
													<!-- allow mission to continue -->
												</do_if>
												<do_else>
													<signal_cue cue="Mission_SectorRaid_End" />
												</do_else>
											</do_if>
										</do_elseif>
										<do_else>
											<do_if value="
												(not $isHealthy_thisMission)
												or
												$gateDistance_toShip gt UserSettings.$gateDistance_missionOffers
												or
												$gateDistance_toTargetSector gt UserSettings.$gateDistance_missionOffers
											">
												<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" param="table[$isForcedCleanUp = true]" />
											</do_if>
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_CleanUp" version="2">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
										<set_value name="$Objective_Step_start" exact="0" />
										<set_value name="$Objective_Step_complete" exact="4" />
									</patch>
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<event_object_undocked dock="$MissionNPC_Container" group="global.$PlayerOccupiedShipGroup" />
												<check_value value="$Objective_Step == $Objective_Step_complete" />
											</check_all>
											<check_all>
												<event_object_changed_attention group="$MissionNPC_Container" />
												<check_value value="not kEMissions.$attentionInZoneAndNearer.indexof.{event.param}" />
												<check_value value="kEMissions.$attentionInZoneAndNearer.indexof.{event.param2}" />
												<check_value value="$Objective_Step == $Objective_Step_complete" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<do_if value="UserSettings.$debugChance_missionRaid or UserSettings.$debugChance_missionRaid_patch?">
											<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.param: ' + event.param + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' (' + @$Cue_FactionAI.exists + ') $Cue_Mission.hasmissionoffer: ' + @$Cue_Mission.hasmissionoffer + ' $Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step + ' $Objective_Step_complete: ' + $Objective_Step_complete" />
										</do_if>
										<do_if value="$Objective_Step == $Objective_Step_start or $Objective_Step == $Objective_Step_complete">
											<!-- mission never accepted or mission complete -->
											<signal_objects object="player.galaxy" param="'kEMission_complete'" param2="$Cue_Mission" />
											<do_if value="(not $Cue_FactionAI.exists) or @event.param.$isForcedCleanUp">
												<debug_text text="$Cue_Mission.$MissionId + ' remove_offer $Cue_FactionAI.exists: ' + @$Cue_FactionAI.exists + ' event.param.$isForcedCleanUp: ' + @event.param.$isForcedCleanUp" chance="UserSettings.$debugChance_missionRaid or UserSettings.$debugChance_missionRaid_patch?" />
												<remove_offer cue="$Cue_Mission" />
											</do_if>
											<remove_mission cue="$Cue_Mission" />
										</do_if>
										<do_else>
											<!-- force-set objective step to complete, so that this WILL be cleaned-up when next called -->
											<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
										</do_else>
										<do_if value="@$MissionNPC_Container.{1}.isoperational and player.entity.hascontext.{$MissionNPC_Container.{1}} and (not @event.param.$isForcedCleanUp)">
											<!-- player is in ship or in mission npc container -->
											<!-- do nothing. will be cleaned-up when player moves away. -->
										</do_if>
										<do_else>
											<do_if value="@$Actor.exists or @$MissionNPC_Container.{1}.isoperational or @$MissionNPC_DynamicInterior.isoperational">
												<signal_cue_instantly cue="Mission_SectorRaid_CleanUp_MissionNPC" param="table[
													$Cue_Mission = $Cue_Mission,
													$Cue_Mission_SectorRaid_MissionNPC_Start = Mission_SectorRaid_MissionNPC_Start
												]" />
											</do_if>
											<do_if value="
												(not @$Cue_FactionAI.exists)
												or
												(not $Ship.isoperational)
												or
												@event.param.$isForcedCleanUp
											">
												<!-- only clean up cue if ship is destroyed or faction ai cue is invalid -->
												<do_if value="UserSettings.$debugChance_missionRaid or UserSettings.$debugChance_missionRaid_patch?">
													<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI: ' + @$Cue_FactionAI + ' (' + @$Cue_FactionAI.exists + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $Ship.isoperational: ' + @$Ship.isoperational" />
													<debug_text text="$Cue_Mission.$MissionId + ' $Ship.isoperational: ' + @$Ship.isoperational" />
												</do_if>
												<do_if value="@$Ship.assignedaipilot.isoperational">
													<remove_value name="$Ship.assignedaipilot.$kEMissions_mission" />
													<remove_value name="$Ship.assignedaipilot.$kEMissions_mission_isSet" />
												</do_if>
												<do_if value="$Cue_FactionAI.exists">
													<set_value name="$Cue_FactionAI.$kEMissions_mission_isAlreadyCleanedUp" exact="true" />
													<remove_value name="$Cue_FactionAI.$kEMissions_mission" />
													<remove_value name="$Cue_FactionAI.$kEMissions_cue_missionEnd" />
													<remove_value name="$Cue_FactionAI.$kEMissions_mission_isSet" />
												</do_if>
												<run_actions ref="Mission_SectorRaid_Unregister">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="Faction" value="$Faction" />
													<param name="Sector" value="$TargetSector" />
												</run_actions>
												<debug_text text="$Cue_Mission.$MissionId + ' cancel_cue ' + $Cue_Mission" chance="UserSettings.$debugChance_missionRaid or UserSettings.$debugChance_missionRaid_patch?" />
												<cancel_cue cue="$Cue_Mission" />
											</do_if>
											<!-- this is ongoing, so just set it to restart -->
											<set_value name="$Objective_Step" exact="$Objective_Step_start" />
										</do_else>
										<run_actions ref="DamageCalculator_CleanData">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<clear_group group="$EnemyTargets" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Accept" version="2">
									<conditions>
										<!-- event_offer_accepted doesn't work -->
										<!-- <event_offer_accepted cue="$Cue_Mission" /> -->
										<!-- but menu_map.lua and menu_missionbriefing.lua sends the signal "accept" to the actor -->
										<event_object_signalled object="$Ship.assignedaipilot" param="'accept'" param2="$Cue_Mission" />
									</conditions>
									<actions>
										<include_actions ref="Mission_SectorRaid_ResetMissionVars" />
										<set_value name="$isDelayed_createMissionNPC" exact="false" />
										<do_if value="$kEMissionType == kEMissions.$missionType_defendPirate">
											<!-- no mission npc needed for defend pirate, all contacts are with the pilot -->
											<signal_cue cue="Mission_SectorRaid_CreateMission"  />
										</do_if>
										<do_else>
											<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.knownname + ', ' + @$Actor.exists + ')'" chance="UserSettings.$debugChance_missionRaid" />
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_SectorRaid_MissionNPC_Start.state: ' + Mission_SectorRaid_MissionNPC_Start.state" chance="UserSettings.$debugChance_missionRaid" />
											<set_value name="$dbId" exact="'' + $Actor" />
											<do_if value="$dbId == '0x0'">
												<set_value name="$Actor" exact="null" />
											</do_if>
											<do_if value="@$Actor.exists">
												<!-- actor must have already been created -->
												<do_if value="not $Cue_Mission.hasmission">
													<signal_cue cue="Mission_SectorRaid_CreateMission" />
												</do_if>
											</do_if>
											<do_elseif value="Mission_SectorRaid_MissionNPC_Start.state == cuestate.waiting">
												<signal_cue cue="Mission_SectorRaid_MissionNPC_Start"  />
											</do_elseif>
											<do_elseif value="Mission_SectorRaid_MissionNPC_Start.state == cuestate.complete">
												<set_value name="$isDelayed_createMissionNPC" exact="true" />
											</do_elseif>
										</do_else>
										<do_if value="not $isDelayed_createMissionNPC">
											<signal_objects object="player.entity" param="'em_raid_check_invalid_ships'" />
											<reset_cue cue="this" />
										</do_if>
									</actions>
									<cues>
										<cue name="Mission_SectorRaid_Accept_CleanNPC_First" checktime="player.age + 1s">
											<actions>
												<signal_cue cue="Mission_SectorRaid_CheckNPC" />
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_CheckNPC">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="'$Actor.exists: ' + @$Actor.exists" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="@$Actor.exists">
											<!-- all good, no need for clean-up -->
											<signal_cue cue="Mission_SectorRaid_CheckNPC_Done" />
										</do_if>
										<do_else>
											<do_if value="player.entity.hascontext.{$MissionNPC_Container.{1}}" comment="teleport player out of container so that the npc and room can be safely removed/cleaned then recreated">
												<set_value name="$Cue_Mission.$isWaitingForPlayerTeleport" exact="true" />
												<find_ship name="$location_friendly" owner="faction.player" checkoperational="true" space="player.galaxy" sortbydistanceto="player.entity" />
												<do_if value="not @$location_friendly.isoperational">
													<find_station name="$location_friendly" owner="faction.player" checkoperational="true" space="player.galaxy" sortbydistanceto="player.entity" />
												</do_if>
												<do_if value="not @$location_friendly.isoperational">
													<find_station name="$location_friendly" checkoperational="true" space="player.galaxy" sortbydistanceto="player.entity">
														<match_relation_to faction="faction.player" relation="neutral" comparison="ge" />
													</find_station>
												</do_if>
												<do_if value="@$location_friendly.isoperational">
													<teleport_player object="$location_friendly" comment="should teleport the player away so that actor and room can be cleaned" />
												</do_if>
												<do_else comment="no teleport location found, allow mission to continue. at least we tried.">
													<signal_cue cue="Mission_SectorRaid_CheckNPC_Done" />
												</do_else>
												<remove_value name="$location_friendly" />
											</do_if>
											<do_else>
												<signal_cue cue="Mission_SectorRaid_CheckNPC_Step2" />
											</do_else>
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_CheckNPC_Step2">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<check_any>
													<event_player_teleport_successful />
													<event_player_teleport_failed comment="teleport failed, allow mission to continue away. at least we tried." />
												</check_any>
												<check_value value="@$Cue_Mission.$isWaitingForPlayerTeleport" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<debug_text text="'$Actor.exists: ' + @$Actor.exists" chance="UserSettings.$debugChance_missionRaid" />
										<remove_value name="$Cue_Mission.$isWaitingForPlayerTeleport" />
										<signal_cue_instantly cue="Mission_SectorRaid_CleanUp_MissionNPC" param="table[
											$Cue_Mission = $Cue_Mission,
											$Cue_Mission_SectorRaid_MissionNPC_Start = Mission_SectorRaid_MissionNPC_Start,
											$Cue_CallBack_Cleaned = Mission_SectorRaid_CheckNPC_Done
										]" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_CheckNPC_Done">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="not $Cue_Mission.hasmission">
											<!-- <signal_cue cue="Mission_SectorRaid_CreateMission" /> -->
											<signal_cue cue="Mission_SectorRaid_MissionNPC_Start"  />
										</do_if>
										<signal_objects object="player.entity" param="'em_raid_check_invalid_ships'" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_CreateMission">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' create_mission'" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="$kEMissionType == kEMissions.$missionType_defendPirate">
											<do_if value="(not $MissionGroup) and $OpposingFaction != faction.criminal">
												<do_if value="Requirements.$mission_raid_req_relLevel == UserSettings.$req_rel_warSubscription">
													<run_actions ref="Mission_SectorRaid_SetMissionGroup">
														<param name="Cue_Mission" value="$Cue_Mission" />
														<param name="HostFaction" value="$Faction" />
														<param name="EnemyFaction" value="$OpposingFaction" />
													</run_actions>
												</do_if>
											</do_if>
											<create_mission cue="$Cue_Mission"
												type="missiontype.fight"
												actor="$Ship.assignedaipilot"
												name="$mission_name"
												description="$mission_description"
												faction="$Faction"
												difficulty="$Difficulty"
												distance="0"
												group="$MissionGroup"
											>
												<briefing>
													<objective step="$Objective_Step_brief" action="objective.support" object="$Ship" />
												</briefing>
												<objective step="$Objective_Step_brief" action="objective.talkto" object="$Ship.assignedaipilot" />
											</create_mission>
											<set_value name="stat.missions_accepted" operation="add" />
										</do_if>
										<do_else>
											<create_mission cue="$Cue_Mission"
												type="missiontype.fight"
												actor="$Ship.assignedaipilot"
												name="$mission_name"
												description="$mission_description"
												faction="$Faction"
												difficulty="$Difficulty"
												distance="0"
												group="$MissionGroup"
											>
												<briefing>
													<objective step="$Objective_Step_brief" action="objective.talkto" object="$Actor" />
													<objective step="$Objective_Step_raid" action="objective.support" object="$Ship" />
													<objective step="$Objective_Step_debrief" action="objective.talkto" object="$Actor" />
												</briefing>
												<objective step="$Objective_Step_brief" action="objective.talkto" object="$Actor" />
											</create_mission>
										</do_else>
										<debug_text text="$Cue_Mission.$MissionId + ' remove_offer $Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" chance="UserSettings.$debugChance_missionRaid" />
										<remove_offer cue="$Cue_Mission" />
										<set_value name="$Objective_Step" exact="$Objective_Step_brief" />
										<do_if value="Mission_SectorRaid_Convo_Start.state == cuestate.waiting">
											<signal_cue cue="Mission_SectorRaid_Convo_Start" />
										</do_if>
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionRML" param="table[
												$cue = $Cue_Mission,
												$action = md.kuertee_professions.kProfs.$activity_support_invasion
											]" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Complete">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<do_if value="not $time_missionEnd">
											<set_value name="$time_missionEnd" exact="player.age" />
										</do_if>
										<do_if value="not $time_missionStart">
											<set_value name="$time_missionTotal" exact="0" />
											<set_value name="$time_inEscort" exact="0" />
											<set_value name="$time_inEscort_percFraction" exact="0" />
										</do_if>
										<do_else>
											<set_value name="$time_missionTotal" exact="$time_missionEnd - $time_missionStart" />
											<set_value name="$time_inEscort" exact="[0, $time_missionTotal - $time_awayTotal].max" />
											<set_value name="$time_inEscort_percFraction" exact="$time_inEscort / (20min)f" />
										</do_else>
										<do_if value="UserSettings.$debugChance_missionRaid">
											<debug_text text="$Cue_Mission.$MissionId + ' $time_missionTotal: ' + $time_missionTotal" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort: ' + $time_inEscort" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal: ' + $time_awayTotal" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort_percFraction: ' + $time_inEscort_percFraction" />
										</do_if>
										<do_if value="$Objective_Step gt $Objective_Step_brief and ($time_awayTotal lt 5min or $time_inEscort ge 20min)">
											<set_value name="$missionLogLines" exact="[]" />
											<!-- <append_to_list name="$missionLogLines" exact="$mission_name" /> -->
											<include_actions ref="Mission_SectorRaid_CalculateRewards" />
											<debug_text text="$Cue_Mission.$MissionId + ' $reward_forKills: ' + $reward_forKills" chance="UserSettings.$debugChance_missionRaid" />
											<do_if value="kEMissions.$difficultyValues.{$MissionRewardData.$difficulty_max} gt kEMissions.$difficultyValues.{$Difficulty}">
												<set_value name="$Difficulty" exact="$MissionRewardData.$difficulty_max" />
											</do_if>
											<!-- total -->
											<set_value name="$RewardCr" exact="(($reward_forEscort)f + ($reward_forKills)f + ($reward_forKeptAlive)f)ct" />
											<!-- <t id="496">Total reward: %s.</t>
											<t id="497">Escort reward: %s.</t>
											<t id="498">Engagement reward: %s.</t> -->
											<!-- <t id="499">Patrol reward: %s.</t> -->
											<append_to_list name="$missionLogLines" exact="{11513, 499}.[((($reward_forEscort)f)ct).formatted.{'%.s %Cr'}]" />
											<append_to_list name="$missionLogLines" exact="{11513, 497}.[((($reward_forKeptAlive)f)ct).formatted.{'%.s %Cr'}]" />
											<do_if value="($reward_forKills)f">
												<append_to_list name="$missionLogLines" exact="$MissionRewardData.$description_damageAndKillsByClass" />
											</do_if>
											<append_to_list name="$missionLogLines" exact="{11513, 498}.[((($reward_forKills)f)ct).formatted.{'%.s %Cr'}]" />
											<append_to_list name="$missionLogLines" exact="{11513, 496}.[$RewardCr.formatted.{'%.s %Cr'}]" />
											<run_actions ref="Mission_Complete">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
											<!-- <run_actions ref="Comm_ThankYou">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions> -->
											<run_actions ref="WriteToLogBook">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="Lines" value="$missionLogLines" />
											</run_actions>
											<!-- add relationship data -->
											<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Notoriety" param="[$Cue_Mission, $Difficulty, 1, $Faction]" />
											<set_value name="$RewardNotoriety" exact="$Reward_Notoriety__Result" />
											<add_faction_relation faction="faction.player" otherfaction="$Faction" value="$RewardNotoriety" reason="relationchangereason.missioncompleted" />
											<set_value name="stat.missions_completed" operation="add" />
											<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
											<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" />
										</do_if>
										<do_else>
											<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
											<signal_cue_instantly cue="Mission_SectorRaid_Fail" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Fail" version="2">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
										<set_value name="$Objective_Step_raid" exact="2" />
									</patch>
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$missionLogLines" exact="[]" />
										<!-- <append_to_list name="$missionLogLines" exact="$mission_name" /> -->
										<!-- <t id="272">%s(ship) had no escort for more than 5min.</t> -->
										<!-- <t id="441">No assigned enemies were engaged.</t> -->
										<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal: ' + $time_awayTotal + ' $reward_forKills: ' + $reward_forKills + ' $isEnemyTargetGivenToPlayer: ' + $isEnemyTargetGivenToPlayer + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="$time_awayTotal ge 5min">
											<append_to_list name="$missionLogLines" exact="{11513, 272}.[$name_ship]" />
										</do_if>
										<do_elseif value="(not $reward_forKills) and $isEnemyTargetGivenToPlayer">
											<append_to_list name="$missionLogLines" exact="{11513, 441}" />
										</do_elseif>
										<do_elseif value="$Objective_Step lt $Objective_Step_raid">
											<append_to_list name="$missionLogLines" exact="{11513, 442}.[$name_ship]" />
										</do_elseif>
										<run_actions ref="WriteToLogBook">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Lines" value="$missionLogLines" />
										</run_actions>
										<run_actions ref="Mission_Fail">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_End">
									<conditions>
										<check_any>
											<event_cue_signalled />
	 										<event_mission_aborted cue="$Cue_Mission" />
	 										<check_all>
		 										<event_object_destroyed group="$GroupOfOne_Ship" />
		 										<check_value value="not $Cue_Mission.hasmission" />
		 									</check_all>
	 									</check_any>
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.hasmission: ' + $Cue_Mission.hasmission" chance="UserSettings.$debugChance_missionRaid" />
										<do_if value="$Cue_Mission.hasmission">
											<signal_cue_instantly cue="Mission_SectorRaid_Complete" />
										</do_if>
										<do_else>
											<signal_cue_instantly cue="Mission_SectorRaid_CleanUp" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_ShipDestroy">
									<conditions>
										<check_any>
											<event_object_signalled object="player.entity" param="'em_raid_check_invalid_ships'" />
											<event_object_destroyed group="$GroupOfOne_Ship" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.object: ' + event.object + ' (' + @event.object.knownname + ', ' + @event.object.idcode + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + $Ship + ' (' + @$Ship.knownname+ ', ' + @$Ship.idcode + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="
											event.name == 'event_object_destroyed'
											or
											(
												event.name == 'event_object_signalled'
												and
												(not @$Ship.isoperational)
											)
										">
											<do_if value="$Cue_Mission.hasmission">
												<run_actions ref="Mission_SectorRaid_FindAndSetNewShip">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="Cue_NewShip" value="Mission_SectorRaid_OnFactionAIUpdated" />
													<!-- <param name="Cue_NoShipFound" value="Mission_SectorRaid_StopRaiding" /> -->
												</run_actions>
											</do_if>
											<do_else>
												<run_actions ref="Mission_SectorRaid_FindAndSetNewShip">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="Cue_NewShip" value="Mission_SectorRaid_OnFactionAIUpdated" />
													<param name="Cue_NoShipFound" value="Mission_SectorRaid_End" />
												</run_actions>
											</do_else>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Greeting" ref="Comm_Greeting">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_SectorRaid_DamageReport" ref="Comm_DamageReport">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<cue name="Mission_SectorRaid_EnemyFound" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$time_enemyFound" exact="player.age" />
										<set_value name="$enemyTarget" exact="event.param.$enemyTarget" />
										<debug_text text="$Cue_Mission.$MissionId + ' $enemyTarget: ' + $enemyTarget + ' (' + $enemyTarget.knownname + ', ' + $enemyTarget.sector.knownname + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="$OpposingFaction == faction.criminal">
											<set_value name="$OpposingFaction" exact="$enemyTarget.owner" />
										</do_if>
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<do_if value="$Cue_Mission.hasmission">
												<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionTargets" param="table[
													$missionLib = $kProfs_missionLib,
													$target = $enemyTarget
												]" />
											</do_if>
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_NoEnemiesNearby">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Cue_Mission.hasmission" />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_NoEnemiesFound">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Cue_Mission.hasmission" />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_PlayerKill">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_NewEnemyFaction" version="2">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
										<set_value name="$Objective_Step_brief" exact="1" />
									</patch>
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<set_value name="$newEnemyFaction" exact="event.param.$faction" />
										<do_if value="$OpposingFaction == faction.criminal">
											<set_value name="$OpposingFaction" exact="$newEnemyFaction" />
										</do_if>
										<do_if value="$Objective_Step == $Objective_Step_raid">
											<run_actions ref="Mission_SectorRaid_UpdateProgress">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="IsBriefing" value="true" />
												<param name="NewEnemyFaction" value="$newEnemyFaction" />
												<param name="IsForced" value="true" />
											</run_actions>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_EnemyTargets" ref="EnemyTargets">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Cue_EnemyFound" value="Mission_SectorRaid_EnemyFound" />
									<param name="Cue_NoEnemiesNearby" value="Mission_SectorRaid_NoEnemiesNearby" />
									<param name="Cue_NoEnemiesFound" value="Mission_SectorRaid_NoEnemiesFound" />
									<param name="Cue_PlayerKill" value="Mission_SectorRaid_PlayerKill" />
									<param name="Cue_NewEnemyFaction" value="Mission_SectorRaid_NewEnemyFaction" />
									<param name="EnemyTargets" value="$EnemyTargets" />
									<param name="IsAllowStationTargets" value="$kEMissionType != kEMissions.$missionType_defendPirate" />
									<param name="IsLimitEnemiesToAttackerFactions" value="$kEMissionType != kEMissions.$missionType_defendPirate" />
									<param name="IsFindEnemiesOutOfRadarRange" value="true" />
								</cue>
								<cue name="Mission_SectorRaid_PlayerAway">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<set_value name="$isEscortNearby" exact="false" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_PlayerNearby">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $time_awayTotal: ' + $time_awayTotal" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<set_value name="$isEscortNearby" exact="true" />
										<do_if value="(not $time_missionStart) and $Objective_Step == $Objective_Step_raid">
											<set_value name="$time_missionStart" exact="player.age" />
										</do_if>
										<set_value name="$isEscortNearby_setPreviously" exact="true" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_IsPlayerOwnedNearby" version="2">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
									</actions>
									<patch sinceversion="2">
										<debug_text text="'patch sinceversion 2, state: ' + this.state" />
										<set_value name="Mission_SectorRaid_IsPlayerOwnedNearby_Interval.$Cue_InEscort_Interval" exact="Mission_SectorRaid_Interval" />
										<set_value name="Mission_SectorRaid_IsPlayerOwnedNearby_Interval.$Cue_Away_Interval" exact="Mission_SectorRaid_Interval" />
									</patch>
									<cues>
										<cue name="Mission_SectorRaid_IsPlayerOwnedNearby_Interval" ref="IsPlayerOwnedNearby">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Cue_AwayTooLong" value="null" />
											<param name="Cue_ExitEscort" value="Mission_SectorRaid_PlayerAway" />
											<param name="Cue_EnterEscort" value="Mission_SectorRaid_PlayerNearby" />
											<param name="Cue_InEscort_Interval" value="Mission_SectorRaid_Interval" />
											<param name="Cue_Away_Interval" value="Mission_SectorRaid_Interval" />
										</cue>
										<cue name="Mission_SectorRaid_IsPlayerOwnedNearby_CleanUp">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<actions>
												<debug_text text="$Cue_Mission.$MissionId" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
												<reset_cue cue="parent" />
												<reset_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_BriefingCutscene" ref="BriefingCutscene">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<!-- sector raid specifics -->
								<cue name="Mission_SectorRaid_StartRaiding" version="2">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
										<set_value name="$Objective_Step_brief" exact="1" />
										<set_value name="$Objective_Step_raid" exact="2" />
									</patch>
									<conditions>
										<event_cue_signalled />
										<check_value value="$Cue_Mission.hasmission" />
										<check_value value="$Objective_Step != $Objective_Step_raid" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $Objective_Step: ' + $Objective_Step + ' $Objective_Step_raid: ' + $Objective_Step_raid" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="$Objective_Step != $Objective_Step_raid">
											<set_value name="$Objective_Step" exact="$Objective_Step_raid" />
											<set_value name="$isOkToAssignTargets" exact="true" />
											<do_if value="$isEscortNearby">
												<do_if value="not $time_missionStart">
													<set_value name="$time_missionStart" exact="player.age" />
												</do_if>
												<do_if value="$stations_toVisit.count">
													<do_if value="player.entity.hascontext.{$stations_toVisit.{1}}">
														<add_to_group groupname="$stations_visited" object="$stations_toVisit.{1}" />
														<remove_from_group group="$stations_toVisit" object="$stations_toVisit.{1}" />
														<sort_group group="$stations_toVisit" sortbyvalue="loop.element.distanceto.{player.entity}" sortdescending="false" />
													</do_if>
												</do_if>
											</do_if>
											<run_actions ref="Mission_SectorRaid_UpdateProgress">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="IsBriefing" value="true" />
												<param name="IsForced" value="true" />
											</run_actions>
											<do_if value="Mission_SectorRaid_IsPlayerOwnedNearby.state == cuestate.waiting">
												<signal_cue cue="Mission_SectorRaid_IsPlayerOwnedNearby" />
											</do_if>
											<do_if value="@$Cue_EnemyTargets_FindInterval_Start.state == cuestate.waiting">
												<signal_cue cue="$Cue_EnemyTargets_FindInterval_Start" />
											</do_if>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_RestartRaiding" version="2">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $Objective_Step: ' + $Objective_Step + ' $Objective_Step_raid: ' + $Objective_Step_raid" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="$Objective_Step gt $Objective_Step_brief and $Objective_Step lt $Objective_Step_debrief">
											<signal_cue cue="Mission_SectorRaid_StartRaiding" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_StopRaiding" version="4">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
										<set_value name="$Objective_Step_debrief" exact="3" />
									</patch>
									<patch sinceversion="4" state="waiting">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 4, state: ' + this.state" />
										<do_if value="$Objective_Step lt $Objective_Step_debrief and (not $time_missionEnd)">
											<set_value name="$isOkToAssignTargets" exact="true" />
										</do_if>
									</patch>
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $Objective_Step: ' + $Objective_Step + ' $Objective_Step_debrief: ' + $Objective_Step_debrief" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<set_value name="$isFromConvo" exact="@event.param.$isFromConvo" />
										<do_if value="$Objective_Step != $Objective_Step_debrief">
											<set_value name="$Objective_Step" exact="$Objective_Step_debrief" />
											<set_value name="$isOkToAssignTargets" exact="false" />
											<do_if value="
												(not $time_missionEnd)
												and
												(
													$time_awayTotal ge 5min
													or
													player.age - $time_missionStart ge 20min
												)
											">
												<set_value name="$time_missionEnd" exact="player.age" />
											</do_if>
											<do_if value="not $isFromConvo">
												<run_actions ref="Mission_SectorRaid_UpdateProgress">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="IsBriefing" value="true" />
													<param name="IsForced" value="true" />
												</run_actions>
											</do_if>
											<do_if value="Mission_SectorRaid_IsPlayerOwnedNearby_CleanUp.state == cuestate.waiting">
												<signal_cue cue="Mission_SectorRaid_IsPlayerOwnedNearby_CleanUp" />
											</do_if>
											<do_if value="@$Cue_EnemyTargets_FindInterval_Stop.state == cuestate.waiting">
												<signal_cue cue="$Cue_EnemyTargets_FindInterval_Stop" />
											</do_if>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_OnFactionAIUpdated" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$ship_update" exact="@event.param.$ship" />
										<set_value name="$target_update" exact="@event.param.$target" />
										<set_value name="$targetSector_update" exact="@event.param.$targetSector" />
										<set_value name="$missionType_update" exact="@event.param.$missionType" />
										<set_value name="$cue_factionAI_update" exact="@event.param.$cue_factionAI" />
										<do_if value="UserSettings.$debugChance_missionRaid">
											<set_value name="$time_subGoalElapsed" exact="player.age - @$Cue_FactionAI.$RegistryTable.$StartTime" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' $time_subGoalElapsed: ' + ($time_subGoalElapsed / 60) + 'min'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
											<debug_text text="$Cue_Mission.$MissionId + ' $ship_update: ' + @$ship_update + ' (' + @$ship_update.knownname + ', ' + @$ship_update.idcode + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $targetSector_update: ' + @$targetSector_update + ' (' + @$targetSector_update.knownname + ', ' + @$targetSector_update.idcode + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $target_update: ' + @$target_update + ' (' + @$target_update.knownname + ', ' + @$target_update.idcode + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $missionType_update: ' + @$missionType_update" />
											<debug_text text="$Cue_Mission.$MissionId + ' $cue_factionAI_update: ' + @$cue_factionAI_update" />
										</do_if>
										<reset_cue cue="Mission_SectorRaid_OnFactionAIUpdatedActual" />
										<set_value name="$delay_update" min="0.5" max="1" />
									</actions>
									<cues>
										<cue name="Mission_SectorRaid_OnFactionAIUpdated2" checktime="player.age + $delay_update">
											<actions>
												<do_if value="Mission_SectorRaid_OnFactionAIUpdatedActual.state == cuestate.waiting">
													<signal_cue_instantly cue="Mission_SectorRaid_OnFactionAIUpdatedActual" param="table[
														$ship = $ship_update,
														$targetSector = $targetSector_update,
														$target = $target_update,
														$missionType = $missionType_update,
														$cue_factionAI = $cue_factionAI_update
													]" />
												</do_if>
												<cancel_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_OnFactionAIUpdatedActual">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$ship_update_actual" exact="@event.param.$ship" />
										<set_value name="$targetSector_update_actual" exact="@event.param.$targetSector" />
										<set_value name="$target_update_actual" exact="@event.param.$target" />
										<set_value name="$missionType_update_actual" exact="@event.param.$missionType" />
										<set_value name="$cue_factionAI_update_actual" exact="@event.param.$cue_factionAI" />
									</actions>
									<cues>
										<cue name="Mission_SectorRaid_OnFactionAIUpdatedActual2" checktime="player.age + 1s" version="2">
											<patch sinceversion="2">
												<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
												<set_value name="$Objective_Step_brief" exact="1" />
											</patch>
											<actions>
												<do_if value="UserSettings.$debugChance_missionRaid">
													<debug_text text="$Cue_Mission.$MissionId + ' $ship_update_actual: ' + @$ship_update_actual + ' (' + @$ship_update_actual.knownname + ', ' + @$ship_update_actual.idcode + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $targetSector_update_actual: ' + @$targetSector_update_actual + ' (' + @$targetSector_update_actual.knownname + ', ' + @$targetSector_update_actual.idcode + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $target_update_actual: ' + @$target_update_actual + ' (' + @$target_update_actual.knownname + ', ' + @$target_update_actual.idcode + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $missionType_update_actual: ' + @$missionType_update_actual" />
													<debug_text text="$Cue_Mission.$MissionId + ' $cue_factionAI_update_actual: ' + @$cue_factionAI_update_actual" />
												</do_if>
												<set_value name="$isNewShip" exact="false" />
												<set_value name="$isNewTarget" exact="false" />
												<set_value name="$newEnemyFaction" exact="null" />
												<do_if value="@$ship_update_actual.isoperational">
													<set_value name="$isNewShip" exact="$Ship != $ship_update_actual" />
													<set_value name="$Ship" exact="$ship_update_actual" />
													<set_value name="$Ship.assignedaipilot.$kEMissions_mission" exact="$Cue_Mission" />
													<clear_group group="$GroupOfOne_Ship" />
													<add_to_group groupname="$GroupOfOne_Ship" object="$Cue_Mission.$Ship" />
													<run_actions ref="GetName" result="$Cue_Mission.$name_ship"><param name="Component" value="$Cue_Mission.$Ship" /></run_actions>
												</do_if>
												<do_if value="@$targetSector_update_actual.isoperational">
													<set_value name="$isNewTarget" exact="$TargetSector != $targetSector_update_actual" />
													<set_value name="$TargetSector" exact="$targetSector_update_actual" />
												</do_if>
												<do_if value="@$target_update_actual.isoperational">
													<set_value name="$target" exact="$target_update_actual" />
													<do_if value="$target.isclass.[class.ship, class.station]">
														<add_to_group groupname="$EnemyTargets" object="$target" />
														<do_if value="not $EnemyFactions.indexof.{$target.owner}">
															<set_value name="$newEnemyFaction" exact="$target.owner" />
															<append_to_list name="$EnemyFactions" exact="$target.owner" />
															<do_if value="$OpposingFaction == faction.criminal">
																<set_value name="$OpposingFaction" exact="$target.owner" />
															</do_if>
														</do_if>
													</do_if>
												</do_if>
												<do_if value="$missionType_update_actual != null">
													<set_value name="$kEMissionType" exact="$missionType_update_actual" />
												</do_if>
												<do_if value="$cue_factionAI_update_actual != null">
													<set_value name="$Cue_FactionAI" exact="$cue_factionAI_update_actual" />
													<reset_cue cue="Mission_SectorRaid_Init" />
												</do_if>
												<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
												<do_if value="$Cue_Mission.hasmission">
													<do_if value="$Objective_Step gt $Objective_Step_brief">
														<do_if value="$isHealthy_thisMission">
															<run_actions ref="Mission_SectorRaid_UpdateProgress">
																<param name="Cue_Mission" value="$Cue_Mission" />
																<param name="IsBriefing" value="true" />
																<param name="IsNewShip" value="$isNewShip" />
																<param name="IsNewTarget" value="$isNewTarget" />
																<param name="NewEnemyFaction" value="$newEnemyFaction" />
															</run_actions>
															<signal_cue cue="Mission_SectorRaid_RestartRaiding" />
														</do_if>
														<do_else>
															<signal_cue cue="Mission_SectorRaid_StopRaiding" />
														</do_else>
													</do_if>
													<do_else>
														<do_if value="not $isHealthy_thisMission">
															<signal_cue cue="Mission_SectorRaid_End" />
														</do_if>
													</do_else>
												</do_if>
												<do_else>
													<do_if value="not $isHealthy_thisMission">
														<signal_cue cue="Mission_SectorRaid_End" />
													</do_if>
												</do_else>
												<do_if value="$isNewShip">
													<reset_cue cue="Mission_SectorRaid_Accept" />
												</do_if>
												<remove_value name="$isNewShip" />
												<remove_value name="$isNewTarget" />
												<remove_value name="$newEnemyFaction" />
												<!-- <reset_cue cue="parent" /> -->
												<!-- <cancel_cue cue="this" /> -->
											</actions>
											<cues>
												<cue name="Mission_SectorRaid_OnFactionAIUpdatedActual3">
													<actions>
														<reset_cue cue="Mission_SectorRaid_OnFactionAIUpdatedActual" />
														<cancel_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_FactionAI_End_20220212" version="2">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_game_loaded />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $Cue_Mission: ' + $Cue_Mission + ' (' + @$Cue_Mission.exists + ') hasmission: ' + $Cue_Mission.hasmission" />
										<!-- <do_if value="not $Cue_Mission.hasmission">
											<debug_text text="$Cue_Mission.$MissionId + ' signal_cue Mission_SectorRaid_End'" />
											<signal_cue cue="Mission_SectorRaid_End" />
											<reset_cue cue="this" />
										</do_if>
										<do_else> -->
											<debug_text text="$Cue_Mission.$MissionId + ' $kEMissionType == kEMissions.$missionType_defendPirate: ' + ($kEMissionType == kEMissions.$missionType_defendPirate)" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' $Cue_FactionAI.exists: ' + $Cue_FactionAI.exists" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + @$Ship.knownname + ' '  + @$Ship.idcode + ' isoperational: ' + @$Ship.isoperational" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Ship.assignedaipilot: ' + @$Ship.assignedaipilot.name + ' exists: ' + @$Ship.assignedaipilot.exists" />
											<do_if value="$kEMissionType == kEMissions.$missionType_defendPirate">
												<do_if value="
													(not $Cue_FactionAI.exists) or
													(not $Ship.isoperational) or
													(not $Ship.assignedaipilot.exists)">
													<debug_text text="$Cue_Mission.$MissionId + ' not OK! signal_cue Mission_SectorRaid_End'" />
													<signal_cue cue="Mission_SectorRaid_End" />
												</do_if>
												<do_else>
													<debug_text text="$Cue_Mission.$MissionId + ' OK!'" />
												</do_else>
												<debug_text text="$Cue_Mission.$MissionId + ' reset_cue this'" />
												<reset_cue cue="this" />
											</do_if>
											<do_else>
												<do_if value="$Cue_Mission.hasmission">
													<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + @$Actor.name + ' exists: ' + @$Actor.exists" />
													<do_if value="not $Actor.exists">
														<debug_text text="$Cue_Mission.$MissionId + ' signal_cue Mission_SectorRaid_CheckNPC'" />
														<signal_cue cue="Mission_SectorRaid_CheckNPC" />
													</do_if>
												</do_if>
												<do_if value="
													(not $Cue_FactionAI.exists) or
													(not $Ship.isoperational) or
													(not $Ship.assignedaipilot.exists)">
													<!-- defendarea subgoals cues are in: $Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals -->
													<!-- <set_value name="$subGoals" exact="$Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals" /> -->
													<!-- find another sub goal that this $Ship is in, in case it's been reassigned -->
													<set_value name="$cue_factionAI_new" exact="null" />
													<do_if value="$Cue_FactionAI.exists">
														<debug_text text="$Cue_Mission.$MissionId + ' $CurrentPhaseSubGoals.count: ' + $Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals.count" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<do_for_each name="$cue_subGoal" in="@$Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals">
															<debug_text text="$Cue_Mission.$MissionId + ' $cue_subGoal.$Ships.count: ' + @$cue_subGoal.$Ships.count" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
															<do_if value="@$cue_subGoal.$Ships.indexof.{@$Cue_Mission.$Ship}">
																<!-- another sub goal was found, set this mission to it -->
																<set_value name="$cue_factionAI_new" exact="$cue_subGoal" />
																<break />
															</do_if>
														</do_for_each>
														<debug_text text="$Cue_Mission.$MissionId + ' $cue_factionAI_new: ' + $cue_factionAI_new" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<do_if value="$cue_factionAI_new">
															<debug_text text="$Cue_Mission.$MissionId + ' OK! found $cue_factionAI_new. signal_cue_instantly Mission_SectorRaid_OnFactionAIUpdated'" />
															<signal_cue_instantly cue="Mission_SectorRaid_OnFactionAIUpdated" param="table[$cue_factionAI = $cue_factionAI_new]" />
															<debug_text text="$Cue_Mission.$MissionId + ' reset_cue this'" />
															<reset_cue cue="this" />
														</do_if>
														<do_else>
															<debug_text text="$Cue_Mission.$MissionId + ' not OK! will be checked in 5 min'" />
														</do_else>
													</do_if>
													<do_else>
														<debug_text text="$Cue_Mission.$MissionId + ' not OK! will be checked in 5 min'" />
													</do_else>
												</do_if>
												<do_else>
													<debug_text text="$Cue_Mission.$MissionId + ' OK! reset_cue this'" />
													<reset_cue cue="this" />
												</do_else>
											</do_else>
										<!-- </do_else> -->
									</actions>
									<cues>
										<!-- if ship is not destroyed, wait 1min in case ship gets new orders -->
										<!-- in which case, factionsubgoal_defendarea will try to create a new Mission_SectorRaid -->
										<!-- which will trigger Missions_SectorRaids_CreateOffer, which will THEN call Mission_SectorRaid_OnFactionAIUpdated with the new details -->
										<!-- it's ok if no new factionsubgoal_defendarea is created for the sector. thie raid mission will complete as normal. -->
										<cue name="Mission_SectorRaid_FactionAI_End_20220212_TimeOut" checktime="player.age + 5min">
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.exists: ' + $Cue_FactionAI.exists" />
												<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + @$Ship.knownname + ' '  + @$Ship.idcode + ' isoperational: ' + @$Ship.isoperational" />
												<debug_text text="$Cue_Mission.$MissionId + ' $Ship.assignedaipilot: ' + @$Ship.assignedaipilot.name + ' exists: ' + @$Ship.assignedaipilot.exists" />
												<do_if value="$Cue_FactionAI.exists">
													<do_if value="$Cue_Mission.hasmissionoffer or $Cue_Mission.hasmission" comment="update the faction ai cue">
														<debug_text text="$Cue_Mission.$MissionId + ' OK! new signal received elsewhere. signal_cue_instantly Mission_SectorRaid_OnFactionAIUpdated'" />
														<signal_cue_instantly cue="Mission_SectorRaid_OnFactionAIUpdated" param="table[$cue_factionAI = $cue_factionAI_new]" />
													</do_if>
													<do_else comment="no mission offer, no mission, allow to continue because Missions_SectorRaids_CreateOffer will create the offer when appropriate">
														<debug_text text="$Cue_Mission.$MissionId + ' OK! allow Missions_SectorRaids_CreateOffer to create the mission when appropriate'" />
													</do_else>
												</do_if>
												<do_else comment="after 5 minutes with no new cue ai, just end this mission">
													<debug_text text="$Cue_Mission.$MissionId + ' not OK! no $Cue_FactionAI even after 5 min. signal_cue Mission_SectorRaid_End'" />
													<signal_cue cue="Mission_SectorRaid_End" />
												</do_else>
												<debug_text text="$Cue_Mission.$MissionId + ' reset_cue parent'" />
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_Convo_Start">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<cues>
										<cue name="Mission_SectorRaid_Convo" instantiate="true" version="2">
											<patch sinceversion="2">
												<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
												<set_value name="$Objective_Step_brief" exact="1" />
												<set_value name="$Objective_Step_raid" exact="2" />
											</patch>
											<conditions>
												<check_any>
													<event_cue_signalled />
													<check_all>
														<event_conversation_started actor="$Actor" />
														<check_value value="$kEMissionType != kEMissions.$missionType_defendPirate" />
													</check_all>
													<event_conversation_started actor="$Ship.assignedaipilot" />
												</check_any>
												<check_value value="$Cue_Mission.hasmission" />
											</conditions>
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' $Actor.ismissionactor: ' + $Actor.ismissionactor + ' $Actor.istemporary: ' + $Actor.istemporary + ' $Actor.type: ' + $Actor.type + ' $Actor.occupationname: ' + $Actor.occupationname + ' $Actor.role: ' + $Actor.role" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
												<!-- $cue_convoSelected is required because:
												1. convos can finish at any point
												2. and event_conversation_finished sometimes doesn't have data (e.g. choiceparam after open_conversaion_menu)
													to determine if the topics selected were from this conversation thread
												-->
												<set_value name="$cue_convoSelected" exact="null" />
												<set_value name="$isBriefingOpened" exact="false" />
												<set_value name="$isDebriefingOpened" exact="false" />
												<!-- <t id="451">Briefing on sector raid?</t>
												<t id="452">Request release from raid duties.</t>
												<t id="453">Debriefing on sector raid?</t>
												<t id="454">Briefing on sector patrol?</t>
												<t id="455">Request release from patrol duties.</t>
												<t id="456">Debriefing on sector patrol?</t> -->
												<do_if value="$kEMissionType == kEMissions.$missionType_defendPirate">
													<do_if value="event.object == $Ship.assignedaipilot">
														<do_if value="$Objective_Step lt $Objective_Step_debrief and (not $time_missionEnd)">
															<add_player_choice text="$mission_name" section="kEMissions_sector_raid_briefing" choiceparam="$Cue_Mission" />
															<do_if value="$Objective_Step == $Objective_Step_raid">
																<add_player_choice text="{11513, 351}" section="kEMissions_sector_raid_finish" choiceparam="$Cue_Mission" />
															</do_if>
														</do_if>
														<do_elseif value="$Objective_Step == $Objective_Step_debrief or $time_missionEnd">
															<add_player_choice text="$mission_name" section="kEMissions_sector_raid_debriefing" choiceparam="$Cue_Mission" />
														</do_elseif>
													</do_if>
												</do_if>
												<do_else>
													<do_if value="event.object == $Ship.assignedaipilot">
														<do_if value="$Objective_Step lt $Objective_Step_debrief and (not $time_missionEnd)">
															<add_player_choice text="if $kEMissionType == kEMissions.$missionType_raid then {11513, 452} else {11513, 455}" section="kEMissions_sector_raid_finish" choiceparam="$Cue_Mission" />
														</do_if>
													</do_if>
													<do_elseif value="event.object == $Actor">
														<do_if value="$Objective_Step lt $Objective_Step_debrief and (not $time_missionEnd)">
															<add_player_choice text="$mission_name" section="kEMissions_sector_raid_briefing" choiceparam="$Cue_Mission" />
															<do_if value="$Objective_Step == $Objective_Step_raid">
																<add_player_choice text="{11513, 452}" section="kEMissions_sector_raid_debriefing" choiceparam="$Cue_Mission" />
															</do_if>
														</do_if>
														<do_elseif value="$Objective_Step == $Objective_Step_debrief or $time_missionEnd">
															<add_player_choice text="$mission_name" section="kEMissions_sector_raid_debriefing" choiceparam="$Cue_Mission" />
														</do_elseif>
													</do_elseif>
												</do_else>
											</actions>
											<cues>
												<cue name="Mission_SectorRaid_ConvoNext">
													<conditions>
														<!-- Event for when the next section in a conversation is triggered (object = actor (entity or list containing context and template), param = section name, param2 = choice parameter) -->
														<event_conversation_next_section sectionprefix="kEMissions_" />
														<check_value value="event.param2 == $Cue_Mission" />
													</conditions>
													<actions>
														<debug_text text="$Cue_Mission.$MissionId + ' event.object: ' + event.object + ' (' + @event.object.knownname + ', ' + (event.object == $Ship.assignedaipilot) + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param2: ' + event.param2" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param == $Cue_Mission? ' + (event.param == $Cue_Mission) + ' event.param2 == $Cue_Mission? ' + (event.param2 == $Cue_Mission)" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<set_value name="$cue_convoSelected" exact="$Cue_Mission" />
														<set_value name="$isOpenBriefing" exact="false" />
														<set_value name="$isOpenDebriefing" exact="false" />
														<set_value name="$convoSection" exact="event.param" />
														<do_if value="$convoSection == 'kEMissions_sector_raid_briefing'">
															<set_value name="$isOpenBriefing" exact="true" />
															<signal_cue_instantly cue="Mission_SectorRaid_StartRaiding" />
															<run_actions ref="Mission_SectorRaid_UpdateProgress">
																<param name="Cue_Mission" value="$Cue_Mission" />
																<param name="IsBriefing" value="true" />
															</run_actions>
														</do_if>
														<do_elseif value="$convoSection == 'kEMissions_sector_raid_finish'">
															<signal_cue cue="Mission_SectorRaid_StopRaiding" />
														</do_elseif>
														<do_elseif value="$convoSection == 'kEMissions_sector_raid_debriefing'">
															<set_value name="$isOpenDebriefing" exact="true" />
															<signal_cue_instantly cue="Mission_SectorRaid_StopRaiding" param="table[$isFromConvo = true]" />
															<run_actions ref="Mission_SectorRaid_UpdateProgress">
																<param name="Cue_Mission" value="$Cue_Mission" />
																<param name="IsBriefing" value="false" />
																<param name="IsDebriefing" value="true" />
															</run_actions>
														</do_elseif>
														<do_if value="(not $isOpenBriefing) and (not $isOpenDebriefing)">
															<reset_cue cue="this" />
														</do_if>
													</actions>
													<cues>
														<cue name="Mission_SectorRaid_ConvoNext_OpenDebriefing">
															<actions>
																<debug_text text="$Cue_Mission.$MissionId + ' $isOpenBriefing: ' + $isOpenBriefing + ' $isOpenDebriefing: ' + $isOpenDebriefing" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
																<do_if value="$isOpenBriefing">
																	<set_value name="$isBriefingOpened" exact="true" />
																	<!-- param == { 0, 0, missionID or offerID, isoffer = false } -->
																	<!-- Open a menu as part of a conversation, which will be suspended until the menu is closed -->
																	<open_conversation_menu menu="MissionBriefingMenu" param="[0, 0, $Cue_Mission, false]" param2="$convoSection" />
																</do_if>
																<do_elseif value="$isOpenDebriefing">
																	<set_value name="$isDebriefingOpened" exact="true" />
																	<!-- param == { 0, 0, missionID or offerID, isoffer = false } -->
																	<open_conversation_menu menu="MissionBriefingMenu" param="[0, 0, $Cue_Mission, false]" param2="$convoSection" />
																</do_elseif>
																<reset_cue cue="parent" />
																<cancel_cue cue="this" />
															</actions>
														</cue>
													</cues>
												</cue>
												<cue name="Mission_SectorRaid_ConvoFinish" version="2">
													<patch sinceversion="2">
														<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
														<set_value name="$Objective_Step_debrief" exact="3" />
													</patch>
													<conditions>
														<event_conversation_finished />
													</conditions>
													<actions>
														<!-- Event for when a conversation is finished (object = actor (entity or list containing context and template), param = outcome, param2 = outcome parameter) -->
														<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param2: ' + event.param2" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
														<do_if value="$cue_convoSelected == $Cue_Mission">
															<do_if value="$isDebriefingOpened">
																<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
																<signal_cue cue="Mission_SectorRaid_End" />
															</do_if>
														</do_if>
														<reset_cue cue="parent" />
														<reset_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_MissionNPC_Start">
									<conditions>
										<event_cue_signalled />
										<check_value value="$kEMissionType != kEMissions.$missionType_defendPirate" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
									</actions>
									<cues>
										<cue name="Mission_SectorRaid_MissionNPC_OnCreate" version="2">
											<patch sinceversion="2">
												<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
												<set_value name="$Objective_Step_brief" exact="1" />
											</patch>
											<conditions>
												<event_cue_signalled />
												<!-- <check_value value="$Cue_Mission.hasmission" /> -->
											</conditions>
											<actions>
												<!-- <signal_cue_instantly cue="$Cue_OnCreate" param="table[$container = $Container, $interior = $interior, $actor = $Actor]" /> -->
												<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionRaid" />
												<set_value name="$isNewActor" exact="$Actor and $Actor != event.param.$actor" />
												<set_value name="$isNew" exact="
													($MissionNPC_Container.count and $MissionNPC_Container.{1} != event.param.$container)
													or
													$isNewActor
												" />
												<!-- <set_value name="$MissionNPC_Container" exact="event.param.$container" /> -->
												<clear_group group="$MissionNPC_Container" />
												<add_to_group groupname="$MissionNPC_Container" object="event.param.$container" />
												<set_value name="$Actor" exact="event.param.$actor" />
												<set_value name="$MissionNPC_DynamicInterior" exact="event.param.$interior" />
												<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_Container: ' + $MissionNPC_Container.{1} + ' (' + $MissionNPC_Container.{1}.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + $Actor.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_DynamicInterior: ' + $MissionNPC_DynamicInterior + ' (' + @$MissionNPC_DynamicInterior.name + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<run_actions ref="RegisterMissionNPC">
													<param name="Ship" value="$Ship" />
													<param name="Actor" value="$Actor" />
												</run_actions>
												<do_if value="not $Cue_Mission.hasmission">
													<signal_cue cue="Mission_SectorRaid_CreateMission" />
												</do_if>
												<do_elseif value="$isNew">
													<run_actions ref="Mission_SectorRaid_UpdateProgress" result="$targets_missionGuidance">
														<param name="Cue_Mission" value="$Cue_Mission" />
														<param name="IsBriefing" value="true" />
														<param name="IsNewActor" value="$isNewActor" />
														<param name="IsForced" value="true" />
													</run_actions>
												</do_elseif>
												<do_if value="Mission_SectorRaid_Convo_Start.state == cuestate.waiting">
													<signal_cue cue="Mission_SectorRaid_Convo_Start" />
												</do_if>
												<remove_value name="$isNewActor" />
												<remove_value name="$isNew" />
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_SectorRaid_MissionNPC_OnFail">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<actions>
												<!-- <signal_cue_instantly cue="$Cue_OnFail" param="[$container = $Container, $interior = $interior, $actor = $Actor]" /> -->
												<debug_text text="$Cue_Mission.$MissionId + ' should not be here 1'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.name + ' room: ' + @$Actor.room + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<!-- shouldn't be here, but just in case -->
												<!-- actor failed to be created, fail this whole mission -->
												<signal_cue cue="Mission_SectorRaid_End" />
											</actions>
										</cue>
										<cue name="Mission_SectorRaid_MissionNPC_OnDestroy">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<actions>
												<!-- <signal_cue_instantly cue="$Cue_OnDestroy" param="[$container = $Container, $interior = $interior, $actor = $Actor]" /> -->
												<set_value name="$container_destroyed" exact="event.param.$container" />
												<set_value name="$actor_destroyed" exact="event.param.$actor" />
												<set_value name="$interior_destroyed" exact="event.param.$interior" />
												<debug_text text="$Cue_Mission.$MissionId + ' $container_destroyed: ' + $container_destroyed + ' (' + $container_destroyed.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $actor_destroyed: ' + $actor_destroyed + ' (' + $actor_destroyed.knownname + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $interior_destroyed: ' + $interior_destroyed + ' (' + @$interior_destroyed.name + ')'" chance="UserSettings.$debugChance_missionRaid" />
												<debug_text text="$Cue_Mission.$MissionId + ' $Ship.isoperational: ' + $Ship.isoperational" chance="UserSettings.$debugChance_missionRaid" />
												<!-- by this time, $Actor should have been replaced in Mission_SectorRaid_MissionNPC_OnCreate at a station -->
												<do_if value="$Actor.exists">
													<!-- but $Actor (the new one at a station) was created -->
													<!-- update the mission to talk to the new npc handler that should be at the station -->
													<reset_cue cue="Mission_SectorRaid_Convo_Start" />
												</do_if>
												<signal_cue cue="Mission_SectorRaid_StopRaiding" />
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_SectorRaid_MissionNPC" ref="MissionNPC">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Ship" value="$Ship" />
											<param name="Actor" value="$Actor" />
											<param name="Cue_OnCreate" value="Mission_SectorRaid_MissionNPC_OnCreate" />
											<param name="Cue_OnDestroy" value="Mission_SectorRaid_MissionNPC_OnDestroy" />
											<param name="Cue_OnFail" value="Mission_SectorRaid_MissionNPC_OnFail" />
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_OnChangeSector">
									<conditions>
										<event_object_changed_sector group="$GroupOfOne_Ship" />
										<check_value value="event.param2 == $TargetSector" />
										<check_value value="$kEMissionType == kEMissions.$missionType_defendPirate" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.object: ' + event.object + ' (' + @event.object.knownname + ', ' + @event.object.idcode + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Ship: ' + $Ship + ' (' + @$Ship.knownname+ ', ' + @$Ship.idcode + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<signal_cue cue="Mission_SectorRaid_StopRaiding" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_PlayerEnterSector">
									<conditions>
										<event_object_changed_sector object="player.entity" sector="$TargetSector" />
									</conditions>
									<actions>
										<set_value name="$isUpdateMission" exact="false" />
										<debug_text text="'$isEscortNearby: ' + $isEscortNearby" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<!-- start: hack to fix escort time when player was away from sector -->
										<do_if value="$Objective_Step == $Objective_Step_debrief and (not $time_missionEnd)">
											<do_if value="$time_awayTotal ge 5min">
												<!-- time away was logged -->
												<set_value name="$time_missionEnd" exact="player.age" />
											</do_if>
											<do_elseif value="player.age - $time_missionStart ge 20min">
												<!-- not time away was logged but timer over 20min -->
												<set_value name="$time_missionEnd" exact="$time_missionStart + 20min" />
											</do_elseif>
											<set_value name="$isUpdateMission" exact="true" />
											<debug_text text="$Cue_Mission.$MissionId + ' event.name:' + event.name + ' $time_missionStart:' + $time_missionStart + ' $time_missionEnd:' + $time_missionEnd" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										</do_if>
										<!-- end: hack to fix escort time when player was away from sector -->
										<do_if value="not $time_missionEnd">
											<sort_group group="$stations_toVisit" sortbyvalue="loop.element.distanceto.{player.entity}" sortdescending="false" />
											<set_value name="$isUpdateMission" exact="true" />
										</do_if>
										<do_if value="$isUpdateMission">
											<run_actions ref="Mission_SectorRaid_UpdateProgress">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="IsBriefing" value="true" />
											</run_actions>
										</do_if>
										<remove_value name="$isUpdateMission" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Interval">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
										<do_if value="not $isHealthy_thisMission">
											<do_if value="$Cue_Mission.hasguidance and UserSettings.$debugChance_missionRaid">
												<debug_text text="'$time_awayTotal: ' + $time_awayTotal + ' $time_missionStart: ' + $time_missionStart + ' $time_missionEnd: ' + $time_missionEnd" />
											</do_if>
											<do_else>
												<!-- if another another thing is causing this mission to break, then finish this mission -->
												<do_if value="$time_missionStart">
													<signal_cue cue="Mission_SectorRaid_StopRaiding" />
												</do_if>
												<do_else>
													<signal_cue cue="Mission_SectorRaid_End" />
												</do_else>
											</do_else>
										</do_if>
										<do_else>
											<set_value name="$time_total" exact="0" />
											<do_if value="$time_missionStart">
												<do_if value="$time_missionEnd">
													<set_value name="$time_total" exact="($time_missionEnd - $time_missionStart) - $time_awayTotal" />
												</do_if>
												<do_else>
													<set_value name="$time_total" exact="(player.age - $time_missionStart) - $time_awayTotal" />
												</do_else>
											</do_if>
											<do_if value="$Cue_Mission.hasguidance and UserSettings.$debugChance_missionRaid">
												<debug_text text="'$time_awayTotal: ' + $time_awayTotal + ' $time_missionStart: ' + $time_missionStart + ' $time_missionEnd: ' + $time_missionEnd" />
											</do_if>
											<do_if value="$time_awayTotal ge 5min or $time_missionEnd">
												<signal_cue cue="Mission_SectorRaid_StopRaiding" />
											</do_if>
											<do_else>
												<set_value name="$isEnemyFound" exact="@$time_enemyFound and player.age - $time_enemyFound lt 1min" />
												<do_if value="$time_total ge 20min">
													<do_if value="not $isEnemyFound">
														<signal_cue cue="Mission_SectorRaid_StopRaiding" />
													</do_if>
												</do_if>
												<do_else>
													<do_if value="$isEnemyFound">
														<signal_cue cue="Mission_SectorRaid_RestartRaiding" />
													</do_if>
												</do_else>
											</do_else>
										</do_else>
										<do_if value="$isEscortNearby">
											<do_if value="(not @$time_lastInterval) or player.age - $time_lastInterval gt 1min">
												<set_value name="$time_lastInterval" exact="player.age" />
												<do_if value="$Objective_Step == $Objective_Step_raid">
													<do_if value="$targets_missionGuidance?">
														<clear_group group="$targets_missionGuidance" />
													</do_if>
													<run_actions ref="Mission_SectorRaid_UpdateProgress" result="$targets_missionGuidance">
														<param name="Cue_Mission" value="$Cue_Mission" />
														<param name="IsBriefing" value="true" />
													</run_actions>
													<do_if value="@$targets_missionGuidance.{1}.isclass.[class.ship, class.station]">
														<set_value name="$patrolLocation_aiDefenders" exact="$targets_missionGuidance.{1}" />
														<signal_objects object="player.galaxy" param="'kEMission_protect_ship_patrol'" param2="$Cue_Mission.$Ship" param3="$patrolLocation_aiDefenders" />
													</do_if>
												</do_if>
											</do_if>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Init">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
										<set_value name="$Cue_Mission.$Cue_UpdateMission" exact="Mission_SectorRaid_OnFactionAIUpdated" />
										<set_value name="$Cue_FactionAI.$kEMissions_mission_isSet" exact="true" />
										<set_value name="$Cue_FactionAI.$kEMissions_mission" exact="$Cue_Mission" />
										<set_value name="$Cue_FactionAI.$kEMissions_cue_missionUpdate" exact="Mission_SectorRaid_OnFactionAIUpdated" />
										<set_value name="$Cue_FactionAI.$kEMissions_cue_missionEnd" exact="Mission_SectorRaid_FactionAI_End_20220212" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Init_Checker">
									<actions>
										<do_if value="@$Cue_FactionAI.$kEMissions_mission_isSet">
											<debug_text text="'$Cue_FactionAI.$kEMissions_mission_isSet: ' + @$Cue_FactionAI.$kEMissions_mission_isSet" />
											<set_value name="$Cue_Mission.$Cue_UpdateMission" exact="Mission_SectorRaid_OnFactionAIUpdated" />
											<set_value name="$Cue_FactionAI.$kEMissions_cue_missionUpdate" exact="Mission_SectorRaid_OnFactionAIUpdated" />
											<set_value name="$Cue_FactionAI.$kEMissions_cue_missionEnd" exact="Mission_SectorRaid_FactionAI_End_20220212" />
										</do_if>
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_Init_RunOnce">
									<actions>
										<signal_cue cue="Mission_SectorRaid_Init" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_SectorRaid_DebugChat" version="2">
									<patch sinceversion="2">
										<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2'" />
										<set_value name="$Objective_Step_brief" exact="1" />
									</patch>
									<conditions>
										<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
										<check_any>
											<check_all>
												<check_any>
													<check_value value="event.param3.$text == 'debug em raid targets'" />
													<check_value value="event.param3.$text == 'debug em raid cue'" />
													<check_value value="event.param3.$text == 'debug em raid kills'" />
													<check_value value="event.param3.$text == 'debug em raid player'" />
													<check_value value="event.param3.$text == 'debug em raid target'" />
													<check_value value="event.param3.$text == 'debug em raid test progress time'" />
													<check_value value="event.param3.$text == 'debug em raid test progress time2'" />
													<check_value value="event.param3.$text == 'debug em raid list'" />
												</check_any>
												<check_value value="$Cue_Mission.hasguidance" />
											</check_all>
											<check_value value="event.param3.$text == 'debug em raid cues'" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="@event.param3" />
										<do_if value="event.param3.$text == 'debug em raid cue' or event.param3.$text == 'debug em raid cues'">
											<include_actions ref="Mission_SectorRaid_GetIsHealthy" />
											<debug_text text="
												$Ship
												+ ' $Faction: ' + $Faction + ' $TargetSector: ' + $TargetSector.knownname + ' $OpposingFaction: ' + $OpposingFaction + ' $isHealthy_thisMission: ' + $isHealthy_thisMission
												+ ' \nhasmissionoffer: ' + $Cue_Mission.hasmissionoffer + ' hasmission: ' + $Cue_Mission.hasmission + ' Mission_SectorRaid_Accept.state: ' + Mission_SectorRaid_Accept.state
												+ ' \nship: ' + $Ship.knownname + ' (' + $Ship.idcode + ', ' + $Ship.assignedaipilot.knownname + ', ' + $Ship.isoperational + ')'
												+ ' \n$kEMissionType: ' + $kEMissionType + ' $Objective_Step: ' + $Objective_Step
												+ ' \n$Cue_FactionAI: ' + $Cue_FactionAI + ' (' + @$Cue_FactionAI.exists + ') $OwnerGoal: ' + @$Cue_FactionAI.$OwnerGoal
												+ ' \n$isEscortNearby: ' + $isEscortNearby + ' $isEscortNearby_setPreviously: ' + $isEscortNearby_setPreviously
												+ ' \n$IsFindNewEnemyTargets: ' + Mission_SectorRaid_EnemyTargets.$IsFindNewEnemyTargets
												+ ' \n$Actor: ' + @$Actor.knownname + ' $Actor.exists: ' + @$Actor.exists + ' $Actor.isoperational: ' + @$Actor.isoperational + ' $Actor.room.isoperational: ' + @$Actor.room.isoperational + ' $MissionNPC_Container.isoperational: ' + @$MissionNPC_Container.isoperational
												+ ' \n(in min) $time_missionStart: ' + ($time_missionStart / 60.0) + ' $time_missionEnd: ' + ($time_missionEnd / 60.0) + ' $time_awayTotal: ' + ($time_awayTotal / 60.0)
											" />
											<debug_text text="'    Mission_SectorRaid_IsPlayerOwnedNearby.state: ' + Mission_SectorRaid_IsPlayerOwnedNearby.state + ' time: ' + Mission_SectorRaid_IsPlayerOwnedNearby.time + ' elapsed: ' + ((player.age - Mission_SectorRaid_IsPlayerOwnedNearby.time) / 60) + ' min'" />
											<debug_text text="'    Mission_SectorRaid_IsPlayerOwnedNearby_Interval.state: ' + Mission_SectorRaid_IsPlayerOwnedNearby_Interval.state + ' time: ' + Mission_SectorRaid_IsPlayerOwnedNearby_Interval.time + ' elapsed: ' + ((player.age - Mission_SectorRaid_IsPlayerOwnedNearby_Interval.time) / 60) + ' min'" />
											<debug_text text="'    $Cue_EnemyTargets_FindInterval_Start.state: ' + $Cue_EnemyTargets_FindInterval_Start.state + ' time: ' + $Cue_EnemyTargets_FindInterval_Start.time + ' elapsed: ' + ((player.age - $Cue_EnemyTargets_FindInterval_Start.time) / 60) + ' min'" />
											<debug_text text="'    $Cue_EnemyTargets_FindInterval_Stop.state: ' + $Cue_EnemyTargets_FindInterval_Stop.state + ' time: ' + $Cue_EnemyTargets_FindInterval_Stop.time + ' elapsed: ' + ((player.age - $Cue_EnemyTargets_FindInterval_Stop.time) / 60) + ' min'" />
											<do_if value="$Ship.orders.count">
												<do_for_each name="$order_inList" in="$Ship.orders">
													<debug_text text="'    $order_inList: ' + $order_inList + ' id: ' + $order_inList.id + ' name: ' + $order_inList.name" />
												</do_for_each>
											</do_if>
											<do_if value="@$Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals.count">
												<do_for_each name="$subGoalData" in ="@$Cue_FactionAI.$OwnerGoal.$CurrentPhaseSubGoals">
													<set_value name="$subGoal" exact="$subGoalData.$Cue" />
													<set_value name="$gateDistances" exact="[]" />
													<do_if value="@$subGoal.$Ships.count">
														<do_for_each name="$ship_inList" in="$subGoal.$Ships">
															<do_if value="$ship_inList.isclass.[class.ship_l, class.ship_xl]">
																<append_to_list name="$gateDistances" exact="$ship_inList.gatedistance.{player.entity}" />
															</do_if>
														</do_for_each>
													</do_if>
													<do_if value="@$subGoal.$DefendArea.$Sector">
														<append_to_list name="$gateDistances" exact="$subGoal.$DefendArea.$Sector.gatedistance.{player.entity}" />
													</do_if>
													<do_if value="@$subGoal.$StagingArea.$Sector">
														<append_to_list name="$gateDistances" exact="$subGoal.$StagingArea.$Sector.gatedistance.{player.entity}" />
													</do_if>
													<do_if value="@$subGoal.$TargetStation">
														<append_to_list name="$gateDistances" exact="$subGoal.$TargetStation.gatedistance.{player.entity}" />
													</do_if>
													<do_if value="$gateDistances.count and $gateDistances.min le UserSettings.$gateDistance_missionOffers">
														<debug_text text="'    $subGoal: ' + $subGoal + ' $Descriptor: ' + @$subGoal.$Descriptor + ' $kEMissions_mission: ' + @$subGoal.$kEMissions_mission + ' this? ' + (@$subGoal.$kEMissions_mission == $Cue_Mission) + ' hasmissionoffer: ' + @$subGoal.$kEMissions_mission.hasmissionoffer + ' hasmission: ' + @$subGoal.$kEMissions_mission.hasmission" />
														<debug_text text="'        $gateDistances: ' + $gateDistances" />
														<debug_text text="'        $DefendArea.$Sector: ' + @$subGoal.$DefendArea.$Sector.knownname" />
														<debug_text text="'        $StagingArea.$Sector: ' + @$subGoal.$StagingArea.$Sector.knownname" />
														<debug_text text="'        $TargetStation: ' + @$subGoal.$TargetStation.knownname + ', ' + @$subGoal.$TargetStation.idcode" />
														<do_for_each name="$ship_inList" in="$subGoal.$Ships">
															<debug_text text="'        $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ', M: ' + $ship_inList.isclass.ship_m + ' L or XL: ' + $ship_inList.isclass.[class.ship_l, class.ship_xl] + ') this? ' + ($ship_inList == $Ship)" />
														</do_for_each>
													</do_if>
													<do_elseif value="$gateDistances.count">
														<debug_text text="'    $subGoal: ' + $subGoal + ' $Descriptor: ' + @$subGoal.$Descriptor + ' $kEMissions_mission: ' + @$subGoal.$kEMissions_mission + ' this? ' + (@$subGoal.$kEMissions_mission == $Cue_Mission) + ' hasmissionoffer: ' + @$subGoal.$kEMissions_mission.hasmissionoffer + ' hasmission: ' + @$subGoal.$kEMissions_mission.hasmission" />
														<debug_text text="'        $gateDistances: ' + $gateDistances" />
													</do_elseif>
												</do_for_each>
											</do_if>
											<debug_text text="'    $EnemyFactions.count: ' + @$EnemyFactions.count + ' (' + (typeof $EnemyFactions) + ')'" />
											<do_if value="@$EnemyFactions.count">
												<do_for_each name="$faction_inList" in="$Cue_Mission.$EnemyFactions">
													<debug_text text="'       $faction_inList: ' + $faction_inList" />
												</do_for_each>
											</do_if>
											<debug_text text="'    $EnemyTargets.count: ' + @$EnemyTargets.count + ' (' + (typeof $EnemyTargets) + ')'" />
											<do_if value="@$EnemyTargets.count">
												<do_for_each name="$enemy_inList" in="$EnemyTargets">
													<debug_text text="'       $enemy_inList: ' + $enemy_inList + ' (' + $enemy_inList.knownname + ', ' + $enemy_inList.idcode + ')'" />
												</do_for_each>
											</do_if>
											<debug_text text="'    $Ships_aiDefenders.count: ' + @$Ships_aiDefenders.count + ' (' + (typeof $Ships_aiDefenders) + ')'" />
											<do_if value="@$Ships_aiDefenders.count">
												<do_for_each name="$aiDefender" in="$Ships_aiDefenders">
													<debug_text text="'       $aiDefender: ' + $aiDefender + ' (' + $aiDefender.knownname + ', ' + $aiDefender.idcode + ')'" />
												</do_for_each>
											</do_if>
										</do_if>
										<do_elseif value="event.param3.$text == 'debug em raid targets'">
											<debug_text text="$Cue_Mission.$MissionId + ' $kEMissionType: ' + @$kEMissionType" />
											<debug_text text="$Cue_Mission.$MissionId + ' $isOkToAssignTargets: ' + @$isOkToAssignTargets" />
											<debug_text text="$Cue_Mission.$MissionId + ' $TargetSector: ' + @$TargetSector + ' (' + @$TargetSector.knownname + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $target: ' + @$target + ' (' + @$target.knownname + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $attacker_largest: ' + @$attacker_largest + ' (' + @$attacker_largest.knownname + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $EnemyFactions: ' + @$EnemyFactions" />
											<debug_text text="$Cue_Mission.$MissionId + ' at factionsubgoal_defendarea.xml:'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI: ' + $Cue_FactionAI + ' (' + @$Cue_FactionAI.exists + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.$kEMissions_target_possible: ' + @$Cue_FactionAI.$kEMissions_target_possible + ' (' + @$Cue_FactionAI.$kEMissions_target_possible.knownname + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.$kEMissions_target: ' + @$Cue_FactionAI.$kEMissions_target + ' (' + @$Cue_FactionAI.$kEMissions_target.knownname + ')'" />
											<do_for_each name="$enemy" in="$EnemyTargets">
												<debug_text text="$Cue_Mission.$MissionId + ' $enemy: ' + @$enemy + ' (' + @$enemy.knownname + ', ' + @$enemy.idcode + ', sector: ' + @$enemy.sector + ' (' + @$enemy.sector.knownname + '), isoperational: ' + @$enemy.isoperational + ', ' + @$enemy.class + ', ' + @$enemy.hullpercentage + ', ' + @$enemy.hull + ')'" />
											</do_for_each>
											<debug_text text="$Cue_Mission.$MissionId + ' order: ' + $Ship.order + ' (' + $Ship.order.name + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.$PerformingOrder: ' + @$Cue_FactionAI.$PerformingOrder + ' (' + @$Cue_FactionAI.$PerformingOrder.name + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.$DefendArea.$Sector: ' + @$Cue_FactionAI.$DefendArea.$Sector + ' (' + @$Cue_FactionAI.$DefendArea.$Sector.knownname + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.$StagingArea.$Sector: ' + @$Cue_FactionAI.$StagingArea.$Sector + ' (' + @$Cue_FactionAI.$StagingArea.$Sector.knownname + ')'" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em raid kills'">
											<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$DamageAndKillsList">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
											<debug_text text="'$DamageAndKillsList: ' + $DamageAndKillsList" />
											<!-- <do_for_each name="$key_inList" in="$DamageAndKillsList.keys.list">
												<set_value name="$damageAndKillData" exact="$DamageAndKillsList.{$key_inList}" /> -->
											<do_for_each name="$damageAndKillData" in="$DamageAndKillsList">
												<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$name: ' + $damageAndKillData.$name + ' (' + $damageAndKillData.$idCode + ')'" />
												<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$class: ' + $damageAndKillData.$class" />
												<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$damage_total: ' + $damageAndKillData.$damage_total" />
												<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$isPlayerKilled: ' + $damageAndKillData.$isPlayerKilled" />
											</do_for_each>
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em raid player'">
											<debug_text text="'$TargetSector: ' + $TargetSector" />
											<debug_text text="'$MissionGroup: ' + $MissionGroup" />
											<debug_text text="'player.entity.sector: ' + player.entity.sector" />
											<debug_text text="'player.entity.sector == $TargetSector: ' + (player.entity.sector == $TargetSector)" />
											<debug_text text="'player.entity.hascontext.{$TargetSector}: ' + (player.entity.hascontext.{$TargetSector})" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em raid target'">
											<do_if value="player.target.exists">
												<debug_text text="player.target.knownname + ', owner: ' + player.target.owner + ', coverowner: ' + player.target.coverowner + ', trueowner: ' + player.target.trueowner" />
											</do_if>
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em raid list'">
											<set_value name="$list" exact="[1, 2, 3, 'four', 'five', table[$a='a', $b='b', $c=3]]" />
											<do_for_each name="$item" in="$list.keys.list">
												<debug_text text="$item" />
											</do_for_each>
										</do_elseif>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<library name="Mission_SectorRaid_SetMissionGroup" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="HostFaction" />
								<param name="EnemyFaction" />
							</params>
							<actions>
								<run_actions ref="GetAnyWarSubscriptions" result="$warSubscriptions">
									<param name="HostFactions" value="[$HostFaction]" />
									<param name="EnemyFactions" value="[$EnemyFaction]" />
								</run_actions>
								<do_for_each name="$warSubscription" in="$warSubscriptions">
									<do_if value="$warSubscription.$Faction == $HostFaction and $warSubscription.$EnemyFaction == $EnemyFaction">
										<set_value name="$Cue_Mission.$MissionGroup" exact="$warSubscription.$MissionGroup" />
										<break />
									</do_if>
								</do_for_each>
							</actions>
						</library>
						<library name="Mission_SectorRaid_ResetMissionVars">
							<actions>
								<set_value name="$target" exact="@$Cue_FactionAI.$kEMissions_target" />
								<do_if value="$target.isclass.sector">
									<set_value name="$TargetSector" exact="$target" />
									<set_value name="$target" exact="null" />
								</do_if>
								<do_if value="not $target.isclass.[class.ship, class.station]">
									<set_value name="$target" exact="null" />
								</do_if>
								<set_value name="$OpposingFaction" exact="if $target then $target.owner else faction.criminal" />
								<set_value name="$RewardCr" exact="0Cr" />
								<do_if value="$EnemyTargets?">
									<clear_group group="$EnemyTargets" />
								</do_if>
								<do_else>
									<create_group groupname="$EnemyTargets" />
								</do_else>
								<do_if value="not $EnemyFactions?">
									<set_value name="$EnemyFactions" exact="[]" />
								</do_if>
								<clear_list list="$EnemyFactions" />
								<do_if value="$target">
									<add_to_group groupname="$EnemyTargets" object="$target" />
									<append_to_list name="$EnemyFactions" exact="$target.owner" />
								</do_if>
								<set_value name="$time_updateSpamStopper" exact="0" />
								<set_value name="$time_missionStart" exact="0" />
								<set_value name="$time_missionEnd" exact="0" />
								<set_value name="$time_missionTotal" exact="0" />
								<set_value name="$time_awayTotal" exact="0" />
								<set_value name="$time_enemyFound" exact="0" />
								<set_value name="$time_lastInterval" exact="0" />
								<set_value name="$isOkToAssignTargets" exact="false" />
								<set_value name="$isEnemyTargetGivenToPlayer" exact="false" />
								<set_value name="$attacker_largest" exact="null" />
								<set_value name="$attacker_largestClass" exact="null" />
								<set_value name="$reward_forKills" exact="0" />
								<do_if value="$Ships_aiDefenders?">
									<clear_group group="$Ships_aiDefenders" />
								</do_if>
								<do_else>
									<create_group groupname="$Ships_aiDefenders" />
								</do_else>
								<do_if value="$GrouOfOne_aiDefendersTarget?">
									<clear_group group="$GrouOfOne_aiDefendersTarget" />
								</do_if>
								<do_else>
									<create_group groupname="$GrouOfOne_aiDefendersTarget" />
								</do_else>
								<set_value name="$isEscortNearby" exact="false" />
								<set_value name="$isEscortNearby_setPreviously" exact="false" />
								<set_value name="$MissionRewardData" exact="null" />
								<run_actions ref="Mission_SectorRaid_GetRewardForEscort" result="$MissionReward_ForEscort">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<set_value name="$MissionReward_ForKeptAlive" exact="0" />
								<do_if value="@md.kuertee_professions.kProfs.exists">
									<set_value name="$enemyFactions" exact="$EnemyFactions" />
								</do_if>
								<set_value name="$Objective_Step" exact="$Objective_Step_start" />
								<create_group groupname="$stations_owned" />
								<find_station groupname="$stations_owned" space="$TargetSector" owner="$Faction" multiple="true" sortbydistanceto="player.entity" />
								<debug_text text="$MissionId + ' $stations_owned: ' + $stations_owned" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<create_group groupname="$stations_toVisit" />
								<do_for_each name="$station_inList" in="$stations_owned">
									<add_to_group groupname="$stations_toVisit" object="$station_inList" />
								</do_for_each>
								<create_group groupname="$stations_visited" />
								<set_value name="$patrolLocation_aiDefenders" exact="null" />
								<set_value name="$Ship.assignedaipilot.$kEMissions_mission" exact="$Cue_Mission" />
								<set_value name="$Ship.assignedaipilot.$kEMissions_mission_isSet" exact="true" />
							</actions>
						</library>
						<library name="Mission_SectorRaid_GetIsHealthy">
							<actions>
								<set_value name="$isHealthy_thisMission" exact="false" />
								<do_if value="not $Cue_Mission.hasmission">
									<set_value name="$isHealthy_thisMission" exact="
										$Cue_FactionAI.exists and
										@$Cue_Mission.$Ship.isoperational and
										Mission_SectorRaid_IsPlayerOwnedNearby.state != cuestate.disabled
									" />
								</do_if>
								<do_else>
									<set_value name="$isHealthy_thisMission" exact="
										$Cue_FactionAI.exists and
										@$Actor.room.isoperational and
										Mission_SectorRaid_IsPlayerOwnedNearby.state != cuestate.disabled
									" />
								</do_else>
								<do_if value="
									((not $isHealthy_thisMission) and UserSettings.$debugChance) or
									($Cue_Mission.hasguidance and UserSettings.$debugChance_missionRaid) or
									this == Mission_SectorRaid_FactionAI_End_20220212">
									<debug_text text="$Cue_Mission.$MissionId + ' $isHealthy_thisMission: ' + $isHealthy_thisMission" />
									<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI.exists: ' + @$Cue_FactionAI.exists" chance="if (not $Cue_FactionAI.exists) then 100 else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$Ship.isoperational: ' + @$Cue_Mission.$Ship.isoperational" chance="if (not $Cue_Mission.$Ship.isoperational) then 100 else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' $Actor.room.exists: ' + @$Actor.room.exists" chance="if (not @$Actor.room.exists) then 100 else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal lt 5min: ' + (@$time_awayTotal lt 5min)" chance="if $time_awayTotal ge 5min then 100 else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' Mission_SectorRaid_IsPlayerOwnedNearby.state != cuestate.disabled: ' + (Mission_SectorRaid_IsPlayerOwnedNearby.state != cuestate.disabled)" chance="if Mission_SectorRaid_IsPlayerOwnedNearby.state == cuestate.disabled then 100 else 0" />
								</do_if>
							</actions>
						</library>
						<library name="Mission_SectorRaid_CalculateRewards">
							<actions>
								<!-- reward for escort -->
								<set_value name="$reward_forEscort" exact="0ct" />
								<do_if value="not @$Cue_Mission.$MissionReward_ForEscort">
									<run_actions ref="Mission_SectorRaid_GetRewardForEscort" result="$Cue_Mission.$MissionReward_ForEscort">
										<param name="Cue_Mission" value="$Cue_Mission" />
									</run_actions>
									<set_value name="$Cue_Mission.$MissionReward_ForEscort" exact="(($Cue_Mission.$MissionReward_ForEscort)f * $time_inEscort_percFraction)ct" />
								</do_if>
								<set_value name="$reward_forEscort" exact="$Cue_Mission.$MissionReward_ForEscort" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forEscort: ' + $reward_forEscort" chance="UserSettings.$debugChance_missionRaid" />
								<!-- reward for kept alive -->
								<set_value name="$reward_forKeptAlive" exact="0ct" />
								<do_if value="@$Cue_Mission.$Ship.isoperational">
									<do_if value="not $Cue_Mission.$MissionReward_ForKeptAlive">
										<run_actions ref="Mission_SectorRaid_GetRewardForEscort" result="$Cue_Mission.$MissionReward_ForKeptAlive">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<set_value name="$Cue_Mission.$MissionReward_ForKeptAlive" exact="(($Cue_Mission.$MissionReward_ForKeptAlive)f * $time_inEscort_percFraction)ct" />
									</do_if>
									<set_value name="$reward_forKeptAlive" exact="$Cue_Mission.$MissionReward_ForKeptAlive" />
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forKeptAlive: ' + $reward_forKeptAlive" chance="UserSettings.$debugChance_missionRaid" />
								<!-- reward for kills -->
								<set_value name="$reward_forKills" exact="0ct" />
								<do_if value="not @$Cue_Mission.$MissionRewardData">
									<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$Cue_Mission.$DamageAndKillsList">
										<param name="Cue_Mission" value="$Cue_Mission" />
									</run_actions>
									<run_actions ref="Reward_CalculateForKills" result="$Cue_Mission.$MissionRewardData">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="DamageAndKillsList" value="$Cue_Mission.$DamageAndKillsList" />
									</run_actions>
								</do_if>
								<set_value name="$reward_forKills" exact="(($Cue_Mission.$MissionRewardData.$reward)f * ((UserSettings.$rewardMult / 100f))f)ct" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forKills: ' + $reward_forKills" chance="UserSettings.$debugChance_missionRaid" />
							</actions>
						</library>
						<library name="Mission_SectorRaid_Register" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="Faction" />
								<param name="Sector" />
							</params>
							<actions>
								<set_value name="$missionsByFactionBySector" exact="md.kuertee_emergent_missions.Missions_SectorRaids.$missionsByFactionBySector" />
								<do_if value="not @$missionsByFactionBySector.{$Faction}">
									<set_value name="$missionsByFactionBySector.{$Faction}" exact="table[]" />
								</do_if>
								<set_value name="$missionsByFactionBySector.{$Faction}.{$Sector}" exact="$Cue_Mission" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Sector: ' + $Sector.knownname + ' missionsByFactionBySector: ' + $missionsByFactionBySector.{$Faction}.{$Sector}" chance="UserSettings.$debugChance_missionRaid" />
							</actions>
						</library>
						<library name="Mission_SectorRaid_Unregister" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="Faction" />
								<param name="Sector" />
							</params>
							<actions>
								<set_value name="$missionsByFactionBySector" exact="md.kuertee_emergent_missions.Missions_SectorRaids.$missionsByFactionBySector" />
								<set_value name="$isRegistered" exact="@$missionsByFactionBySector.{$Faction}.{$Sector} == $Cue_Mission" />
								<debug_text text="$Cue_Mission.$MissionId + ' $isRegistered: ' + $isRegistered" chance="UserSettings.$debugChance_missionRaid" />
								<do_if value="$isRegistered">
									<debug_text text="$Cue_Mission.$MissionId + ' pre remove_value $isRegistered: ' + $isRegistered" chance="UserSettings.$debugChance_missionRaid" />
									<remove_value name="$missionsByFactionBySector.{$Faction}.{$Sector}" />
									<debug_text text="$Cue_Mission.$MissionId + ' post remove_value missionsByFactionBySector: ' + @$missionsByFactionBySector.{$Faction}.{$Sector}" chance="UserSettings.$debugChance_missionRaid" />
								</do_if>
								<do_elseif value="not @$missionsByFactionBySector.{$Faction}.{$Sector}.exists">
									<debug_text text="$Cue_Mission.$MissionId + ' pre remove_value $missionsByFactionBySector: ' + @$missionsByFactionBySector.{$Faction}.{$Sector}" chance="UserSettings.$debugChance_missionRaid" />
									<remove_value name="$missionsByFactionBySector.{$Faction}.{$Sector}" />
									<debug_text text="$Cue_Mission.$MissionId + ' post remove_value missionsByFactionBySector: ' + @$missionsByFactionBySector.{$Faction}.{$Sector}" chance="UserSettings.$debugChance_missionRaid" />
								</do_elseif>
								<do_else>
									<debug_text text="$Cue_Mission.$MissionId + ' keep. another cue registered. missionsByFactionBySector: ' + @$missionsByFactionBySector.{$Faction}.{$Sector}" chance="UserSettings.$debugChance_missionRaid" />
								</do_else>
							</actions>
						</library>
						<library name="Mission_SectorRaid_GetMissionByFactionBySector" purpose="run_actions">
							<params>
								<param name="Ship" />
								<param name="Faction" />
								<param name="Sector" />
							</params>
							<actions>
								<set_value name="$return" exact="null" />
								<set_value name="$missionsByFactionBySector" exact="md.kuertee_emergent_missions.Missions_SectorRaids.$missionsByFactionBySector" />
								<do_if value="$Ship">
									<set_value name="$missionsByFaction" exact="@$missionsByFactionBySector.{$Ship.owner}" />
									<do_if value="$missionsByFaction">
										<do_for_each name="$sector" in="$missionsByFaction.keys.list">
											<do_if value="@$missionsByFaction.{$sector}.$Ship == $Ship">
												<set_value name="$return" exact="$missionsByFaction.{$sector}" />
											</do_if>
											<break />
										</do_for_each>
									</do_if>
								</do_if>
								<do_if value="not $return">
									<set_value name="$return" exact="@$missionsByFactionBySector.{$Faction}.{$Sector}" />
								</do_if>
								<do_if value="not @$return.exists">
									<set_value name="$return" exact="null" />
								</do_if>
								<debug_text text="$Ship + ' $Sector: ' + @$Sector.knownname + ' $return: ' + $return" chance="UserSettings.$debugChance_missionRaid" />
								<return value="$return" />
							</actions>
						</library>
						<!-- <library name="Mission_SectorRaid_CleanUpInvalidMissions" purpose="run_actions">
							<params>
								<param name="Faction" />
							</params>
							<actions>
								<set_value name="$missionsByFactionBySector" exact="md.kuertee_emergent_missions.Missions_SectorRaids.$missionsByFactionBySector" />
								<do_for_each name="$sector_inList" in="$missionsByFactionBySector.{$Faction}.keys.list">
									<debug_text text="'    $sector_inList: ' + $sector_inList + ' (' + $sector_inList.knownname + ')'" />
									<set_value name="$raid" exact="$missionsByFactionBySector.{$Faction}.{$sector_inList}" />
									<debug_text text="'        $raid: ' + $raid + ' typeof:' + (typeof $raid) + ' exists: ' + $raid.exists" />
									<do_if value="not @$raid.exists">
										<run_actions ref="Mission_SectorRaid_Unregister">
											<param name="Cue_Mission" value="$raid" />
											<param name="Faction" value="$Faction" />
											<param name="Sector" value="$sector_inList" />
										</run_actions>
										<cancel_cue cue="$raid" />
									</do_if>
								</do_for_each>
							</actions>
						</library> -->
						<library name="Mission_SectorRaid_UpdateProgress" purpose="run_actions" version="2">
							<patch sinceversion="2">
								<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
								<set_value name="$Objective_Step_brief" exact="1" />
								<set_value name="$Objective_Step_raid" exact="2" />
							</patch>
							<params>
								<param name="Cue_Mission" />
								<param name="IsBriefing" default="false" />
								<param name="IsDebriefing" default="false" />
								<param name="IsNewShip" default="false" />
								<param name="IsNewTarget" default="false" />
								<param name="IsNewActor" default="false" />
								<param name="NewEnemyFaction" default="null" />
								<param name="IsForced" default="false" />
								<param name="IsDestroyed" default="false" />
							</params>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $IsBriefing: ' + $IsBriefing" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
								<debug_text text="$Cue_Mission.$MissionId + ' $IsDebriefing: ' + $IsDebriefing" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$time_updateSpamStopper: ' + $Cue_Mission.$time_updateSpamStopper" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<set_value name="$elapsed" exact="player.age - @$Cue_Mission.$time_updateSpamStopper" />
								<create_group groupname="$missionTargets" />
								<debug_text text="$Cue_Mission.$MissionId + ' $elapsed: ' + $elapsed" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<do_if value="(not @$Cue_Mission.$time_updateSpamStopper) or $elapsed gt 5 or $IsNewShip or $IsNewTarget or $IsNewActor or $NewEnemyFaction or $IsForced">
									<set_value name="$Cue_Mission.$time_updateSpamStopper" exact="player.age" />
									<run_actions ref="Mission_SectorRaid_GetMissionNameAndDescription" result="$nameAndDescription">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="IsBriefing" value="$IsBriefing" />
										<param name="IsDebriefing" value="$IsDebriefing" />
										<param name="IsNewShip" value="$IsNewShip" />
										<param name="IsNewTarget" value="$IsNewTarget" />
										<param name="IsNewActor" value="$IsNewActor" />
										<param name="NewEnemyFaction" value="$NewEnemyFaction" />
										<param name="IsDestroyed" value="$IsDestroyed" />
									</run_actions>
									<set_value name="$Cue_Mission.$mission_name" exact="$nameAndDescription.$name" />
									<set_value name="$Cue_Mission.$mission_description" exact="$nameAndDescription.$description" />
									<set_value name="$progressText_newDetail" exact="$nameAndDescription.$newDetail" />
									<!-- <update_mission cue="$Cue_Mission" name="$Cue_Mission.$mission_name" description="$Cue_Mission.$mission_description" /> -->
									<do_if value="$Cue_Mission.hasmission">
										<do_if value="(not $Cue_Mission.$MissionGroup) and $Cue_Mission.$OpposingFaction != faction.criminal">
											<run_actions ref="Mission_SectorRaid_SetMissionGroup">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="HostFaction" value="$Cue_Mission.$Faction" />
												<param name="EnemyFaction" value="$Cue_Mission.$OpposingFaction" />
											</run_actions>
										</do_if>
										<do_if value="$Cue_Mission.$MissionGroup">
											<update_mission cue="$Cue_Mission" name="$Cue_Mission.$mission_name" description="$Cue_Mission.$mission_description" group="$Cue_Mission.$MissionGroup">
												<briefing>
													<objective step="1" action="objective.talkto" object="$Cue_Mission.$Actor" />
													<objective step="2" action="objective.support" object="$Cue_Mission.$Ship" />
													<objective step="3" action="objective.talkto" object="$Cue_Mission.$Actor" />
												</briefing>
											</update_mission>
										</do_if>
										<do_else>
											<update_mission cue="$Cue_Mission" name="$Cue_Mission.$mission_name" description="$Cue_Mission.$mission_description">
												<briefing>
													<objective step="1" action="objective.talkto" object="$Cue_Mission.$Actor" />
													<objective step="2" action="objective.support" object="$Cue_Mission.$Ship" />
													<objective step="3" action="objective.talkto" object="$Cue_Mission.$Actor" />
												</briefing>
											</update_mission>
										</do_else>
										<do_if value="$Cue_Mission.$Objective_Step gt $Cue_Mission.$Objective_Step_brief">
											<debug_text text="$Cue_Mission.$MissionId + ' $time_missionStart: ' + $Cue_Mission.$time_missionStart" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
											<do_if value="$Cue_Mission.$time_missionStart">
												<do_if value="$Cue_Mission.$time_missionEnd">
													<set_value name="$time_total" exact="($Cue_Mission.$time_missionEnd - $Cue_Mission.$time_missionStart) - $Cue_Mission.$time_awayTotal" />
												</do_if>
												<do_else>
													<set_value name="$time_total" exact="(player.age - $Cue_Mission.$time_missionStart) - $Cue_Mission.$time_awayTotal" />
												</do_else>
											</do_if>
											<do_else>
												<set_value name="$time_total" exact="0" />
											</do_else>
											<debug_text text="$Cue_Mission.$MissionId + ' $time_total: ' + $time_total" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
											<set_value name="$time_total_inMin" exact="($time_total / 60 * 100)i / 100" />
											<set_value name="$time_max_inMin" exact="[20, $time_total_inMin].max" />
											<!-- <t id="410">Patrol time (minutes)</t> -->
											<!-- <t id="484">(mission notification)Continue your patrol or request a release</t> -->
											<!-- <t id="487">(mission notification)Update: Your support duties are complete.</t> -->
											<set_value name="$progressText" exact="{11513, 410}" />
											<do_if value="$time_total ge 20min">
												<do_if value="$Cue_Mission.$Objective_Step lt $Cue_Mission.$Objective_Step_debrief and (not @$Cue_Mission.$time_missionEnd)">
													<set_value name="$progressText" exact="{11513, 484}" />
												</do_if>
												<do_else>
													<set_value name="$progressText" exact="{11513, 487}" />
												</do_else>
											</do_if>
											<do_elseif value="$progressText_newDetail">
												<set_value name="$progressText" exact="$progressText_newDetail" />
											</do_elseif>
											<set_value name="$isObjectiveDynamic" exact="false" />
											<set_value name="$missionObject" exact="$Cue_Mission.$Ship" />
											<set_value name="$missionAction" exact="objective.support" />
											<do_if value="
												$Cue_Mission.$Objective_Step != $Cue_Mission.$Objective_Step_raid
												or
												$time_total ge 20min
											">
												<set_value name="$missionObject" exact="$Cue_Mission.$Actor" />
												<set_value name="$missionAction" exact="objective.talkto" />
											</do_if>
											<do_elseif value="$Cue_Mission.$kEMissionType != kEMissions.$missionType_defendPirate">
												<set_value name="$isObjectiveDynamic" exact="true" />
												<set_value name="$missionObject" exact="$Cue_Mission.$TargetSector" />
												<set_value name="$missionAction" exact="objective.patrol" />
											</do_elseif>
											<do_if value="$isObjectiveDynamic">
												<debug_text text="$Cue_Mission.$MissionId + ' player.target: ' + player.target + ' (' + @player.target.knownname + ', ' + @player.target.idcode + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
												<set_value name="$isInSector" exact="
													@player.entity.hascontext.{$Cue_Mission.$TargetSector}
													or
													$Cue_Mission.$Ships_aiDefenders.count
												" />
												<do_if value="$isInSector">
													<!-- start: rotate between stations to patrol -->
													<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$stations_owned.count: ' + $Cue_Mission.$stations_owned.count" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
													<do_if value="$Cue_Mission.$stations_owned.count">
														<do_if value="not $Cue_Mission.$stations_toVisit.count">
															<do_for_each name="$station_inList" in="$Cue_Mission.$stations_owned">
																<add_to_group groupname="$Cue_Mission.$stations_toVisit" object="$station_inList" />
															</do_for_each>
															<clear_group group="$Cue_Mission.$stations_visited" />
														</do_if>
														<do_if value="$Cue_Mission.$stations_owned.count gt 1">
															<set_value name="$isVisited" exact="false" />
															<do_if value="player.entity.hascontext.{$Cue_Mission.$TargetSector}">
																<set_value name="$isVisited" exact="md.kuertee_emergent_missions.kEMissions.$attentionVisibleAndNearer.indexof.{$Cue_Mission.$stations_toVisit.{1}.attention}" />
																<do_if value="$isVisited">
																	<sort_group group="$Cue_Mission.$stations_toVisit" sortbyvalue="loop.element.distanceto.{player.entity}" sortdescending="false" />
																</do_if>
															</do_if>
															<do_if value="(not $isVisited) and $Cue_Mission.$Ships_aiDefenders.count">
																<find_ship name="$playerOwnedShip_nearby" owner="faction.player" primarypurpose="purpose.fight" space="$Cue_Mission.$TargetSector" sortbydistanceto="$Cue_Mission.$stations_toVisit.{1}">
																	<match_distance max="$Cue_Mission.$stations_toVisit.{1}.maxradarrange" object="$Cue_Mission.$stations_toVisit.{1}" />
																</find_ship>
																<set_value name="$isVisited" exact="@$playerOwnedShip_nearby.isoperational" />
																<do_if value="$isVisited">
																	<sort_group group="$Cue_Mission.$stations_toVisit" sortbyvalue="loop.element.distanceto.{$Cue_Mission.$Ships_aiDefenders.{1}}" sortdescending="false" />
																</do_if>
															</do_if>
															<do_if value="$isVisited">
																<add_to_group groupname="$Cue_Mission.$stations_visited" object="$Cue_Mission.$stations_toVisit.{1}" />
																<remove_from_group group="$Cue_Mission.$stations_toVisit" object="$Cue_Mission.$stations_toVisit.{1}" />
																<do_if value="not $Cue_Mission.$stations_toVisit.count">
																	<do_for_each name="$station_inList" in="$Cue_Mission.$stations_owned">
																		<add_to_group groupname="$Cue_Mission.$stations_toVisit" object="$station_inList" />
																	</do_for_each>
																	<clear_group group="$Cue_Mission.$stations_visited" />
																	<sort_group group="$Cue_Mission.$stations_toVisit" sortbyvalue="loop.element.distanceto.{player.entity}" sortdescending="false" />
																	<add_to_group groupname="$Cue_Mission.$stations_visited" object="$Cue_Mission.$stations_toVisit.{1}" />
																	<remove_from_group group="$Cue_Mission.$stations_toVisit" object="$Cue_Mission.$stations_toVisit.{1}" />
																</do_if>
															</do_if>
														</do_if>
													</do_if>
													<!-- end: rotate between stations to patrol -->
												</do_if>
												<clear_group group="$missionTargets" />
												<!-- <do_if value="@player.ship.sector == $Cue_Mission.$TargetSector and (not @player.target.exists) and $Cue_Mission.$stations_toVisit.{1}.isoperational"> -->
												<!-- objective guidance # 1 -->
												<do_if value="$isInSector and @$Cue_Mission.$stations_toVisit.{1}.isoperational">
													<add_to_group groupname="$missionTargets" object="$Cue_Mission.$stations_toVisit.{1}" />
												</do_if>
												<do_else>
													<add_to_group groupname="$missionTargets" object="$Cue_Mission.$TargetSector" />
												</do_else>
												<!-- objective guidance # 2 -->
												<do_if value="$isInSector">
													<do_if value="$Cue_Mission.$Ship.isoperational">
														<add_to_group groupname="$missionTargets" object="$Cue_Mission.$Ship" />
													</do_if>
													<do_else>
														<add_to_group groupname="$missionTargets" object="$Cue_Mission.$Actor" />
													</do_else>
												</do_if>
												<!-- fail-safe if no objective guidance -->
												<do_if value="not $missionTargets.count">
													<add_to_group groupname="$missionTargets" object="$Cue_Mission.$TargetSector" />
												</do_if>
												<!-- get objective action based on objective guidance -->
												<do_if value="$missionTargets.{1} == $Cue_Mission.$Ship">
													<set_value name="$missionAction" exact="objective.support" />
												</do_if>
												<do_elseif value="$missionTargets.{1}.isclass.npc">
													<set_value name="$missionAction" exact="objective.talkto" />
												</do_elseif>
												<do_else>
													<set_value name="$missionAction" exact="objective.patrol" />
												</do_else>
												<debug_text text="$Cue_Mission.$MissionId + ' $missionTargets.{1}: ' + $missionTargets.{1} + ' (' + $missionTargets.{1}.knownname + ')'" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
												<do_if value="$missionTargets.count == 1 and $missionTargets.{1}.isclass.sector">
													<set_objective cue="$Cue_Mission" step="$Cue_Mission.$Objective_Step" action="$missionAction" object="$missionTargets.{1}" radius="$missionTargets.{1}.coresize * 0.5">
														<progress text="$progressText" progress="$time_total_inMin" max="$time_max_inMin" />
													</set_objective>
												</do_if>
												<do_else>
													<set_objective cue="$Cue_Mission" step="$Cue_Mission.$Objective_Step" action="$missionAction" group="$missionTargets">
														<progress text="$progressText" progress="$time_total_inMin" max="$time_max_inMin" />
													</set_objective>
												</do_else>
											</do_if>
											<do_else>
												<set_objective cue="$Cue_Mission" step="$Cue_Mission.$Objective_Step" action="$missionAction" object="$missionObject">
													<progress text="$progressText" progress="$time_total_inMin" max="$time_max_inMin" />
												</set_objective>
											</do_else>
										</do_if>
										<do_else>
											<set_objective cue="$Cue_Mission" step="$Cue_Mission.$Objective_Step" action="objective.talkto" object="$Cue_Mission.$Actor" />
										</do_else>
									</do_if>
								</do_if>
								<do_else>
									<!-- reset, so the next one would trigger -->
									<set_value name="$Cue_Mission.$time_updateSpamStopper" exact="0" />
								</do_else>
								<return value="$missionTargets" />
							</actions>
						</library>
						<library name="Mission_SectorRaid_GetMissionNameAndDescription" purpose="run_actions" version="2">
							<patch sinceversion="2">
								<debug_text text="$Cue_Mission.$MissionId + ' (' + $Ship.knownname + ', ' + $Ship.idcode + ') patch sinceversion 2, state: ' + this.state" />
								<set_value name="$Objective_Step_raid" exact="2" />
							</patch>
							<params>
								<param name="Cue_Mission" />
								<param name="IsBriefing" default="false" />
								<param name="IsDebriefing" default="false" />
								<param name="IsNewShip" default="false" />
								<param name="IsNewTarget" default="false" />
								<param name="IsNewActor" default="false" />
								<param name="NewEnemyFaction" default="null" />
								<param name="IsDestroyed" default="null" />
							</params>
							<actions>
								<set_value name="$name" exact="''" />
								<set_value name="$name_short" exact="''" />
								<set_value name="$description" exact="''" />
								<set_value name="$newDetail" exact="null" />
								<create_group groupname="$enemy_targets" />
								<!-- <t id="427">Support patrols</t>
								<t id="428">Support raids</t>
								<t id="327">Support pirates</t> -->
								<run_actions ref="GetName" result="$Cue_Mission.$name_ship"><param name="Component" value="$Cue_Mission.$Ship" /></run_actions>
								<do_if value="$Cue_Mission.$kEMissionType == kEMissions.$missionType_defendPirate">
									<!-- defend pirate -->
									<!-- <t id="303">Defend raider \(%s(ship)\)</t>
									<t id="304">Defend %1(ship) while they raid and plunder %2(sector).</t> -->
									<set_value name="$name" exact="{11513, 303}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$description" exact="{11513, 304}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$name_short" exact="{11513, 327}" />
								</do_if>
								<do_elseif value="$Cue_Mission.$kEMissionType == kEMissions.$missionType_raid">
									<!-- raid -->
									<!-- <set_value name="$name" exact="{11513, 401}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" /> -->
									<set_value name="$name" exact="{11513, 401}.[$Cue_Mission.$Ship.owner, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$description" exact="{11513, 402}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$name_short" exact="{11513, 428}" />
								</do_elseif>
								<do_else>
									<!-- patrol -->
									<!-- <set_value name="$name" exact="{11513, 403}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" /> -->
									<set_value name="$name" exact="{11513, 403}.[$Cue_Mission.$Ship.owner, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$description" exact="{11513, 404}.[$Cue_Mission.$name_ship, $Cue_Mission.$TargetSector.knownname]" />
									<set_value name="$name_short" exact="{11513, 427}" />
								</do_else>
								<!-- <t id="405">Update: New assignment: %s(ship name)</t>
								<t id="406">Update: New target: %s(sector name)</t>
								<t id="407">Update: New contact: %s(actor name)</t>
								<t id="408">Update: New enemy target: %s(faction name)</t> -->
								<!-- <t id="485">(mission description)Your support duties are complete but there are more enemy targets in the sector. You can continue to patrol and engage enemy targets. Or you can contact the pilot to request a release from the mission.</t> -->
								<!-- <t id="486">(mission description)Update: %s(ship) has been destroyed. You can continue to patrol and engage enemy targets. Or you can contact the pilot to request a release from the mission.</t> -->
								<!-- <t id="488">(mission notification)Update: %s(ship) was destroyed.</t> -->
								<do_if value="$Cue_Mission.$time_missionStart">
									<do_if value="$Cue_Mission.$time_missionEnd">
										<set_value name="$time_total" exact="($Cue_Mission.$time_missionEnd - $Cue_Mission.$time_missionStart) - $Cue_Mission.$time_awayTotal" />
									</do_if>
									<do_else>
										<set_value name="$time_total" exact="(player.age - $Cue_Mission.$time_missionStart) - $Cue_Mission.$time_awayTotal" />
									</do_else>
								</do_if>
								<do_else>
									<set_value name="$time_total" exact="0" />
								</do_else>
								<do_if value="$time_total ge 20min and $Cue_Mission.$Objective_Step lt $Cue_Mission.$Objective_Step_debrief and (not $Cue_Mission.$time_missionEnd)">
									<set_value name="$description" exact="$description + '\n\n'" />
									<set_value name="$description" exact="$description + {11513, 485}" />
								</do_if>
								<do_else>
									<do_if value="$Cue_Mission.$stations_owned.count and $Cue_Mission.$TargetSector != $Cue_Mission.$stations_owned.{1}.sector">
										<set_value name="$IsNewTarget" exact="true" />
										<clear_group group="$Cue_Mission.$stations_owned" />
										<find_station groupname="$Cue_Mission.$stations_owned" space="$Cue_Mission.$TargetSector" owner="$Cue_Mission.$Faction" multiple="true" sortbydistanceto="player.entity" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$stations_owned: ' + $Cue_Mission.$stations_owned" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
										<clear_group group="$Cue_Mission.$stations_toVisit" />
										<do_for_each name="$station_inList" in="$Cue_Mission.$stations_owned">
											<add_to_group groupname="$Cue_Mission.$stations_toVisit" object="$station_inList" />
										</do_for_each>
										<clear_group group="$Cue_Mission.$stations_visited" />
									</do_if>
									<do_if value="not $Cue_Mission.$Ship.isoperational">
										<!-- always show this update if ship is destroyed -->
										<set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 486}.[$Cue_Mission.$name_ship]" />
									</do_if>
									<do_if value="$IsNewShip or $IsNewTarget or $IsNewActor or $NewEnemyFaction">
										<do_if value="$IsNewShip and $Cue_Mission.$Objective_Step == $Cue_Mission.$Objective_Step_raid">
											<set_value name="$newDetail" exact="{11513, 405}.[$Cue_Mission.$name_ship]" />
											<set_value name="$description" exact="$description + '\n\n'" />
											<set_value name="$description" exact="$description + $newDetail" />
										</do_if>
										<do_if value="$IsNewTarget and $Cue_Mission.$Objective_Step == $Cue_Mission.$Objective_Step_raid">
											<set_value name="$newDetail" exact="{11513, 406}.[$Cue_Mission.$TargetSector.knownname]" />
											<set_value name="$description" exact="$description + '\n\n'" />
											<set_value name="$description" exact="$description + $newDetail" />
										</do_if>
										<do_if value="$IsNewActor">
											<set_value name="$newDetail" exact="{11513, 407}.[$Cue_Mission.$Actor.knownname]" />
											<set_value name="$description" exact="$description + '\n\n'" />
											<set_value name="$description" exact="$description + $newDetail" />
										</do_if>
										<do_if value="$NewEnemyFaction and $Cue_Mission.$Objective_Step == $Cue_Mission.$Objective_Step_raid">
											<set_value name="$newDetail" exact="{11513, 408}.[$NewEnemyFaction.name]" />
											<set_value name="$description" exact="$description + '\n\n'" />
											<set_value name="$description" exact="$description + $newDetail" />
										</do_if>
									</do_if>
									<do_if value="$IsDestroyed">
										<!-- show this notification if ship is destroyed ONLY at this mission update -->
										<set_value name="$newDetail" exact="{11513, 488}.[$Cue_Mission.$name_ship]" />
									</do_if>
								</do_else>
								<set_value name="$briefing" exact="null" />
								<do_if value="$IsBriefing or $IsDebriefing">
									<run_actions ref="Mission_SectorRaid_GetBriefing" result="$briefing">
										<param name="Cue_Mission" value="$Cue_Mission" />
									</run_actions>
									<set_value name="$description" exact="$description + '\n\n'" />
									<set_value name="$description" exact="$description + $briefing.$description" />
								</do_if>
								<do_if value="$IsDebriefing">
									<do_if value="not $Cue_Mission.$time_missionStart">
										<set_value name="$time_missionTotal" exact="0" />
										<set_value name="$time_inEscort" exact="0" />
										<set_value name="$time_inEscort_percFraction" exact="0" />
									</do_if>
									<do_else>
										<do_if value="$Cue_Mission.$time_missionEnd">
											<set_value name="$time_missionTotal" exact="$Cue_Mission.$time_missionEnd - $Cue_Mission.$time_missionStart" />
										</do_if>
										<do_else>
											<set_value name="$time_missionTotal" exact="player.age - $Cue_Mission.$time_missionStart" />
										</do_else>
										<set_value name="$time_inEscort" exact="[0, $time_missionTotal - $Cue_Mission.$time_awayTotal].max" />
										<set_value name="$time_inEscort_percFraction" exact="$time_inEscort / (20min)f" />
									</do_else>
									<do_if value="UserSettings.$debugChance_missionRaid">
										<debug_text text="$Cue_Mission.$MissionId + ' $time_missionEnd: ' + $Cue_Mission.$time_missionEnd" />
										<debug_text text="$Cue_Mission.$MissionId + ' $time_missionTotal: ' + $time_missionTotal" />
										<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort: ' + $time_inEscort" />
										<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal: ' + $Cue_Mission.$time_awayTotal" />
										<debug_text text="$Cue_Mission.$MissionId + ' $time_inEscort_percFraction: ' + $time_inEscort_percFraction" />
									</do_if>
									<include_actions ref="Mission_SectorRaid_CalculateRewards" />
									<!-- <t id="491">Operation results:</t>
									<t id="492">%1(number) killed / %2(total) x %3(enemy macro)</t>
									<t id="493">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your kills: %4(number)\033X: %7(reward)</t>
									<t id="494">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your damage: %5(number)\033X / %6(total hull): %7(reward)</t>
									<t id="495">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your kills: %4(number), your damage: %5(number)\033X / %6(total hull): %7(reward)</t>
									<t id="496">Total reward: %s</t> -->
									<!-- <t id="496">Total reward: %s.</t>
									<t id="497">Escort reward: %s.</t>
									<t id="498">Engagement reward: %s.</t> -->
									<!-- <t id="499">Patrol reward: %s.</t> -->
									<set_value name="$description" exact="$description + '\n\n'" />
									<set_value name="$description" exact="$description + {11513, 491} + '\n'" />
									<do_if value="($reward_forKills)f">
										<set_value name="$description" exact="$description + $Cue_Mission.$MissionRewardData.$description_damageAndKillsByMacro + '\n'" />
									</do_if>
									<set_value name="$reward_forEscort_text" exact="(($reward_forEscort)ct).formatted.{'%.s %Cr'}" />
									<set_value name="$description" exact="$description + {11513, 499}.[$reward_forEscort_text] + '\n'" />
									<set_value name="$reward_forKeptAlive_text" exact="(($reward_forKeptAlive)ct).formatted.{'%.s %Cr'}" />
									<set_value name="$description" exact="$description + {11513, 497}.[$reward_forKeptAlive_text] + '\n'" />
									<set_value name="$reward_forKills_text" exact="(($reward_forKills)ct).formatted.{'%.s %Cr'}" />
									<set_value name="$description" exact="$description + {11513, 498}.[$reward_forKills_text] + '\n'" />
									<set_value name="$reward_total" exact="(($reward_forEscort)f + ($reward_forKeptAlive)f + ($reward_forKills)f)ct" />
									<set_value name="$reward_total_text" exact="(($reward_total)ct).formatted.{'%.s %Cr'}" />
									<set_value name="$description" exact="$description + {11513, 496}.[$reward_total_text] + '\n'" />
								</do_if>
								<do_else>
									<do_if value="@$briefing.$enemy_targets">
										<set_value name="$enemy_targets" exact="@$briefing.$enemy_targets" />
									</do_if>
									<!-- sector raids objectives -->
									<!-- <t id="411">We will assign targets to you when your targeting computer is free. You are allowed to ignore them and continue your patrol. Engagements against factions that are outside the scope of our mission will be ignored.</t> -->
									<!-- <t id="412">The mission completes when %s(ship) completes their orders or when no enemy targets are found after 20 minutes. New combat orders that they receive during the mission will extend the mission. Escort and kill rewards continue to accumulate past 20 minutes. You can request an early release from the mission.</t> -->
									<!-- defend pirate objectives -->
									<!-- <t id="413">The mission completes when %s(ship) exits the sector.</t> -->
									<!-- early end of mission -->
									<!-- <t id="414">The mission will end early when %s(ship) completes their mission.</t> -->
									<!-- sector raids reward -->
									<!-- <t id="421">You will be rewarded for enemies that your ships engage plus a bonus if %s(ship name) survives.</t> -->
									<!-- <t id="422">Failure conditions are: %s(ship) is left with no escort for more than 5min; and your ships fail to engage with any assigned targets.</t> -->
									<!-- <t id="423">Your priorities are: targets we assign to you, patrol locations, criminal activities.</t> -->
									<set_value name="$description" exact="$description + '\n\n'" />
									<do_if value="$Cue_Mission.$kEMissionType == kEMissions.$missionType_defendPirate">
										<set_value name="$description" exact="$description + {11513, 423} + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 411} + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 413}.[$Cue_Mission.$name_ship] + '\n\n'" />
										<!-- <set_value name="$description" exact="$description + {11513, 414}.[$Cue_Mission.$name_ship]" /> -->
										<!-- <set_value name="$description" exact="$description + '\n\n'" /> -->
										<set_value name="$description" exact="$description + {11513, 421}.[$Cue_Mission.$name_ship] + '\n\n' " />
										<set_value name="$description" exact="$description + {11513, 422}.[$Cue_Mission.$name_ship]" />
									</do_if>
									<do_else>
										<set_value name="$description" exact="$description + {11513, 423} + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 411} + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 412}.[$Cue_Mission.$name_ship] + '\n\n'" />
										<!-- <set_value name="$description" exact="$description + {11513, 414}.[$Cue_Mission.$name_ship]" /> -->
										<!-- <set_value name="$description" exact="$description + '\n\n'" /> -->
										<set_value name="$description" exact="$description + {11513, 421}.[$Cue_Mission.$name_ship] + '\n\n' " />
										<set_value name="$description" exact="$description + {11513, 422}.[$Cue_Mission.$name_ship]" />
									</do_else>
									<set_value name="$travelMaxSpeed_kms" exact="($Cue_Mission.$Ship.travel.maxspeed * 100)i / 100" />
									<!-- <t id="391">\(Note that %s(ship) can travel up to %s(speed)km/s.\)</t> -->
									<set_value name="$description" exact="$description + '\n\n' + {11513, 391}.[$Cue_Mission.$name_ship, $travelMaxSpeed_kms]" />
								</do_else>
								<debug_text text="$Cue_Mission.$MissionId + ' $name: ' + $name" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<debug_text text="$Cue_Mission.$MissionId + ' $description: ' + $description" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<debug_text text="$Cue_Mission.$MissionId + ' $enemy_targets: ' + $enemy_targets" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<do_if value="$enemy_targets.count">
									<return value="table[$name = $name, $name_short = $name_short, $description = $description, $objectiveTargets = $enemy_targets, $newDetail = $newDetail]" />
								</do_if>
								<do_else>
									<return value="table[$name = $name, $name_short = $name_short, $description = $description, $objectiveTargets = $Cue_Mission.$stations_owned, $newDetail = $newDetail]" />
								</do_else>
							</actions>
						</library>
						<library name="Mission_SectorRaid_GetBriefing" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$description" exact="''" />
								<!-- briefing: sector description
								<t id="461">%s(sector name) is our home.</t>
								<t id="462">%s(sector name) is our territory.</t>
								<t id="463">%s(sector name) is occupied by us and %s(factions)</t>
								<t id="464">%s(sector name) is the home of %s(other faction).</t>
								<t id="465">%s(sector name) is the territory of %s(other faction).</t>
								<t id="466">%s(sector name) is open space.</t> -->
								<set_value name="$description_sector" exact="table[
									{kEMissions.$sector_home} = 461,
									{kEMissions.$sector_territory} = 462,
									{kEMissions.$sector_frontier} = 463,
									{kEMissions.$sector_foreignHome} = 464,
									{kEMissions.$sector_foreignTerritory} = 465,
									{kEMissions.$sector_enemyHome} = 464,
									{kEMissions.$sector_enemyTerritory} = 465,
									{kEMissions.$sector_free} = 466
								]" />
								<run_actions ref="GetSectorClass" result="$class_targetSectorData">
									<param name="Sector" value="$Cue_Mission.$TargetSector" />
									<param name="Faction" value="$Cue_Mission.$Faction" />
								</run_actions>
								<do_if value="$Cue_Mission.$TargetSector.iscontested">
									<run_actions ref="ConcactenateItems" result="$list">
										<param name="List" value="$Cue_Mission.$TargetSector.contestingfactions" />
										<param name="Delimiter" value="', '" />
										<param name="ExcludeList" value="[$Cue_Mission.$Faction]" />
									</run_actions>
									<set_value name="$description" exact="$description + {11513, 463}.[$Cue_Mission.$TargetSector.knownname, $list]" />
								</do_if>
								<do_else>
									<set_value name="$description" exact="$description + readtext.{11513}.{$description_sector.{$class_targetSectorData.$class}}.[$Cue_Mission.$TargetSector.knownname, $Cue_Mission.$TargetSector.owner.knownname]" />
								</do_else>
								<!-- briefing: properties -->
								<!-- <t id="471">(patrol)We have %1(number) bases in the sector: %2(stations).</t>
								<t id="472">Our target: %s(other faction).</t>
								<t id="473">Our targets: %s(other factions).</t>
								<t id="474">Our targets have %1(number) bases: %2(stations).</t>
								<t id="475">Engagements against factions that are outside the scope of our mission will be ignored.</t> -->
								<do_if value="$Cue_Mission.$stations_owned.count">
									<run_actions ref="ConcactenateItems" result="$list">
										<param name="List" value="$Cue_Mission.$stations_owned" />
										<param name="Delimiter" value="', '" />
									</run_actions>
									<set_value name="$description" exact="$description + '\n\n'" />
									<set_value name="$description" exact="$description + {11513, 471}.[$Cue_Mission.$stations_owned.count, $list]" />
								</do_if>
								<do_if value="$Cue_Mission.$OpposingFaction != faction.criminal or $Cue_Mission.$EnemyFactions.count">
									<debug_text text="$Cue_Mission.$MissionId + ' $EnemyFactions: ' + $Cue_Mission.$EnemyFactions" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
									<do_if value="not @$Cue_Mission.$EnemyFactions.count">
										<!-- <set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 472}.[{11513, 475}]" /> -->
									</do_if>
									<do_elseif value="$Cue_Mission.$EnemyFactions.count == 1">
										<do_if value="$Cue_Mission.$EnemyFactions.{1} and $Cue_Mission.$EnemyFactions.{1} != ''">
											<set_value name="$description" exact="$description + '\n\n'" />
											<set_value name="$description" exact="$description + {11513, 472}.[$Cue_Mission.$EnemyFactions.{1}]" />
										</do_if>
									</do_elseif>
									<do_elseif value="$Cue_Mission.$EnemyFactions.count gt 1">
										<run_actions ref="ConcactenateItems" result="$list">
											<param name="List" value="$Cue_Mission.$EnemyFactions" />
											<param name="Delimiter" value="', '" />
										</run_actions>
										<set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 473}.[$list]" />
									</do_elseif>
									<set_value name="$stations_enemy" exact="[]" />
									<do_for_each name="$faction_inList" in="$Cue_Mission.$EnemyFactions">
										<find_station name="$stations_enemy" space="$Cue_Mission.$TargetSector" owner="$faction_inList" multiple="true" append="true" />
									</do_for_each>
									<debug_text text="$Cue_Mission.$MissionId + ' $stations_enemy: ' + $stations_enemy" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
									<do_if value="$stations_enemy.count">
										<run_actions ref="ConcactenateItems" result="$list">
											<param name="List" value="$stations_enemy" />
											<param name="Delimiter" value="', '" />
										</run_actions>
										<set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 474}.[$stations_enemy.count, $list]" />
									</do_if>
								</do_if>
								<!-- briefing: current situation -->
								<!-- <t id="481">(enroute)We are currently in %s(current sector) and enroute to %s(target sector).</t>
								<t id="482">We are supported in this sector by: %s(L or XL ship list).</t>
								<t id="483">Intelligence reports these enemy ships in our sector: %s(L or XL ship list).</t> -->
								<do_if value="$Cue_Mission.$Ship.isoperational and $Cue_Mission.$Ship.sector != $Cue_Mission.$TargetSector">
									<set_value name="$description" exact="$description + '\n\n'" />
									<set_value name="$description" exact="$description + {11513, 481}.[$Cue_Mission.$Ship.sector.knownname, $Cue_Mission.$TargetSector.knownname]" />
								</do_if>
								<!-- <find_ship name="$ships" primarypurpose="purpose.fight" space="$Cue_Mission.$TargetSector" class="[class.ship_l, class.ship_xl]" multiple="true">
									<match owner="$Cue_Mission.$Faction" />
								</find_ship> -->
								<set_value name="$ships" exact="[]" />
								<do_if value="@$Cue_Mission.$Cue_FactionAI.namespace.$Ships.count">
									<do_for_each name="$ship" in="$Cue_Mission.$Cue_FactionAI.namespace.$Ships">
										<debug_text text="$Cue_Mission.$MissionId + ' $ship ' + $ship + '(' + $ship.knownname + ', ' + $ship.class + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="$ship != $Cue_Mission.$Ship and $ship.isclass.[class.ship_l, class.ship_xl]">
											<append_to_list name="$ships" exact="$ship" />
										</do_if>
									</do_for_each>
									<do_if value="$ships.count">
										<run_actions ref="ConcactenateItems" result="$list">
											<param name="List" value="$ships" />
											<param name="Delimiter" value="', '" />
											<param name="ExcludeList" value="[$Cue_Mission.$Ship]" />
										</run_actions>
										<set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 482}.[$list]" />
									</do_if>
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$OpposingFaction: ' + $Cue_Mission.$OpposingFaction" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<create_group groupname="$enemy_targets" />
								<do_if value="$Cue_Mission.$OpposingFaction != faction.criminal or $Cue_Mission.$EnemyTargets.count">
									<find_ship name="$enemy_targets" space="$Cue_Mission.$TargetSector" checkoperational="true" class="[class.ship_l, class.ship_xl]" multiple="true">
										<match owner="$Cue_Mission.$OpposingFaction" />
									</find_ship>
									<do_for_each name="$enemy" in="$Cue_Mission.$EnemyTargets">
										<debug_text text="$Cue_Mission.$MissionId + ' $enemy: ' + $enemy" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
										<do_if value="
											@$enemy.isclass.[class.ship_l, class.ship_xl] and
											(not $enemy_targets.indexof.{$enemy}) and
											@$enemy.sector == $Cue_Mission.$Ship.sector
										">
											<add_to_group groupname="$enemy_targets" object="$enemy" />
										</do_if>
									</do_for_each>
									<do_if value="$enemy_targets.count">
										<run_actions ref="ConcactenateItems" result="$list">
											<param name="List" value="$enemy_targets" />
											<param name="Delimiter" value="', '" />
										</run_actions>
										<set_value name="$description" exact="$description + '\n\n'" />
										<set_value name="$description" exact="$description + {11513, 483}.[$list]" />
									</do_if>
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $description: ' + $description" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_missionRaid else 0" />
								<return value="table[
									$description = $description,
									$enemy_targets = $enemy_targets
								]" />
							</actions>
						</library>
						<library name="Mission_SectorRaid_FindAndSetNewShip" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="Cue_NewShip" />
								<param name="Cue_NoShipFound" default="null" />
							</params>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$Ship: ' + $Cue_Mission.$Ship + ' (' + @$Cue_Mission.$Ship.knownname+ ', ' + @$Cue_Mission.$Ship.isoperational + ')'" chance="if $Cue_Mission.hasguidance or UserSettings.$debugChance_missionRaid_patch? then UserSettings.$debugChance_missionRaid else 0" />
								<set_value name="$ship_possible" exact="null" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_FactionAI: ' + $Cue_Mission.$Cue_FactionAI + ' $Ships.count: ' + @$Cue_Mission.$Cue_FactionAI.$Ships.count" chance="if $Cue_Mission.hasguidance or UserSettings.$debugChance_missionRaid_patch? then UserSettings.$debugChance_missionRaid else 0" />
								<do_if value="@$Cue_Mission.$Cue_FactionAI.$Ships.count">
									<do_for_each name="$ship_inList" in="$Cue_Mission.$Cue_FactionAI.$Ships">
										<!-- <do_if value="$ship_inList.isclass.[class.ship_m, class.ship_l, class.ship_xl]"> -->
										<do_if value="$ship_inList.isclass.[class.ship_l, class.ship_xl]">
											<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ') sector: ' + @$ship_inList.sector.knownname" chance="if $Cue_Mission.hasguidance or UserSettings.$debugChance_missionRaid_patch? then UserSettings.$debugChance_missionRaid else 0" />
											<do_if value="$ship_inList.sector == $Cue_Mission.$TargetSector">
												<set_value name="$ship_possible" exact="$ship_inList" />
												<break />
											</do_if>
										</do_if>
									</do_for_each>
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $ship_possible: ' + $ship_possible + ' (' + @$ship_possible.knownname + ', ' + @$ship_possible.idcode + ' ,' + @$ship_possible.isoperational + ') sector: ' + @$ship_possible.sector.knownname" chance="if $Cue_Mission.hasguidance or UserSettings.$debugChance_missionRaid_patch? then UserSettings.$debugChance_missionRaid else 0" />
								<do_if value="@$ship_possible.isoperational">
									<do_if value="$Cue_NewShip.exists">
										<signal_cue_instantly cue="$Cue_NewShip" param="table[$ship = $ship_possible]" />
									</do_if>
								</do_if>
								<do_else>
									<!-- no large ship in sector, stop raiding, end mission -->
									<do_if value="$Cue_NoShipFound.exists and $Cue_NoShipFound.state == cuestate.waiting">
										<signal_cue cue="$Cue_NoShipFound" />
									</do_if>
								</do_else>
							</actions>
						</library>
						<library name="Mission_SectorRaid_GetRewardForEscort" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$Ship" exact="$Cue_Mission.$Ship" />
								<set_value name="$reward_forEscort" exact="0" />
								<do_if value="$Ship.isoperational">
									<run_actions ref="GetRewardForLevel" result="$reward_forEscort">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="Faction" value="$Cue_Mission.$Faction" />
										<param name="Difficulty" value="level.medium" />
										<param name="Level" value="1" />
									</run_actions>
									<debug_text text="$Cue_Mission.$MissionId + ' $reward_forEscort: ' + $reward_forEscort" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
									<!-- adjust for largest danger ship was in -->
									<set_value name="$danger" exact="table[
										{class.ship_xs} = 0.75,
										{class.ship_s} = 0.83,
										{class.ship_m} = 0.91,
										{class.ship_l} = 1,
										{class.ship_xl} = 1,
										{class.station} = 1.25
									]" />
									<debug_text text="$Cue_Mission.$MissionId + ' $attacker_largestClass: ' + $Cue_Mission.$attacker_largestClass" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
									<do_if value="$Cue_Mission.$attacker_largestClass and $Cue_Mission.$isEnemyTargetGivenToPlayer">
										<set_value name="$reward_forEscort" exact="(($reward_forEscort)f * $danger.{$Cue_Mission.$attacker_largestClass} * ((UserSettings.$rewardMult / 100f))f)ct" />
									</do_if>
									<do_else>
										<set_value name="$reward_forEscort" exact="(($reward_forEscort)f * $danger.{class.ship_xs} * ((UserSettings.$rewardMult / 100f))f)ct" />
									</do_else>
									<debug_text text="$Cue_Mission.$MissionId + ' $reward_forEscort (post danger adj): ' + $reward_forEscort" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
								</do_if>
								<do_else>
									<debug_text text="$Cue_Mission.$MissionId + ' $reward_forEscort: ' + $reward_forEscort" chance="if $Cue_Mission.hasguidance then UserSettings.$debugChance_missionRaid else 0" />
								</do_else>
								<return value="($reward_forEscort)ct" />
							</actions>
						</library>
						<cue name="Mission_SectorRaid_CleanUp_MissionNPC" namespace="this" instantiate="true" version="2">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$Cue_Namespace" exact="this" />
								<set_value name="$Cue_Mission" exact="event.param.$Cue_Mission" />
								<set_value name="$Cue_Mission_SectorRaid_MissionNPC_Start" exact="@event.param.$Cue_Mission_SectorRaid_MissionNPC_Start" />
								<set_value name="$Cue_CallBack_Cleaned" exact="@event.param.$Cue_CallBack_Cleaned" />
								<set_value name="$Ship" exact="$Cue_Mission.$Ship" />
								<debug_text text="$Ship + ' event.param: ' + event.param" chance="UserSettings.$debugChance_missionRaid" />
								<set_value name="$Actor" exact="$Cue_Mission.$Actor" />
								<set_value name="$MissionNPC_Container" exact="$Cue_Mission.$MissionNPC_Container" /><!-- this is a group!!! -->
								<set_value name="$MissionNPC_DynamicInterior" exact="$Cue_Mission.$MissionNPC_DynamicInterior" />
								<set_value name="$Container" exact="$Actor.container" />
							</actions>
							<patch sinceversion="2">
								<debug_text text="'patch sinceversion 2, state: ' + this.state" />
								<do_if value="not @$Cue_CallBack_Cleaned.exists">
									<signal_objects object="player.entity" param="'em_raid_clean_npc_bug_fix'" param2="table[$cue_mission = $Cue_Mission, $cue_cleanUpMissionNPC = this]" />
								</do_if>
							</patch>
							<cues>
								<cue name="Mission_SectorRaid_CleanUp_MissionNPC2">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
												<check_value value="@event.param2.$leaveFrom.exists" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<do_if value="UserSettings.$debugChance_missionRaid">
											<debug_text text="$Cue_Mission.$MissionId + ' $Actor (pre clean): ' + @$Actor + ' (' + @$Actor.knownname + ', ' + @$Actor.exists + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_Container: ' + @$MissionNPC_Container.{1} + ' (' + @$MissionNPC_Container.{1}.knownname + ', ' + @$MissionNPC_Container.{1}.isoperational + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_DynamicInterior: ' + @$MissionNPC_DynamicInterior + ' (' + @$MissionNPC_DynamicInterior.name + ', ' + @$MissionNPC_DynamicInterior.isoperational + ')'" />
										</do_if>
										<set_value name="$isAllDone" exact="false" />
										<do_if value="not @player.entity.hascontext.{$Container}">
											<do_if value="$Actor and @$Actor.exists">
												<debug_text text="$Cue_Mission.$MissionId + ' remove_actor_from_room ' + $Actor" chance="UserSettings.$debugChance_missionRaid" />
												<remove_actor_from_room actor="$Actor" />
											</do_if>
											<do_if value="not @$Ship.isoperational">
												<!-- only destroy the actor if this ship is destroyed -->
												<!-- otherwise, this same actor should be the player's contact when this same ship is given a sector raid mission -->
												<run_actions ref="UnregisterMissionNPC">
													<param name="Ship" value="$Ship" />
												</run_actions>
												<do_if value="$Actor and @$Actor.exists">
													<debug_text text="$Cue_Mission.$MissionId + ' destroy_object ' + $Actor" chance="UserSettings.$debugChance_missionRaid" />
													<destroy_object object="$Actor" />
												</do_if>
											</do_if>
											<do_if value="@$MissionNPC_DynamicInterior.isoperational">
												<!-- always remove any dynamically created room for the actor -->
												<!-- this will be the case if the ship is destroyed and a room is created in a station in MissionNPC library -->
												<do_if value="@$MissionNPC_Container.{1}.isoperational">
													<debug_text text="$Cue_Mission.$MissionId + ' remove_dynamic_interior ' + $MissionNPC_Container.{1}" chance="UserSettings.$debugChance_missionRaid" />
													<remove_dynamic_interior object="$MissionNPC_Container.{1}" interior="$MissionNPC_DynamicInterior" />
												</do_if>
												<debug_text text="$Cue_Mission.$MissionId + ' destroy_object ' + $MissionNPC_DynamicInterior" chance="UserSettings.$debugChance_missionRaid" />
												<destroy_object object="$MissionNPC_DynamicInterior" />
											</do_if>
											<set_value name="$isAllDone" exact="true" />
										</do_if>
									</actions>
									<cues>
										<cue name="Mission_SectorRaid_CleanUp_MissionNPC3">
											<actions>
												<do_if value="UserSettings.$debugChance_missionRaid">
													<debug_text text="$Cue_Mission.$MissionId + ' $isAllDone: ' + @$isAllDone" />
													<debug_text text="$Cue_Mission.$MissionId + ' $Actor (post clean): ' + @$Actor + ' (' + @$Actor.knownname + ', ' + @$Actor.exists + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_Container: ' + @$MissionNPC_Container.{1} + ' (' + @$MissionNPC_Container.{1}.knownname + ', ' + @$MissionNPC_Container.{1}.isoperational + ')'" />
													<debug_text text="$Cue_Mission.$MissionId + ' $MissionNPC_DynamicInterior: ' + @$MissionNPC_DynamicInterior + ' (' + @$MissionNPC_DynamicInterior.name + ', ' + @$MissionNPC_DynamicInterior.isoperational + ')'" />
												</do_if>
												<do_if value="$isAllDone">
													<do_if value="@$Cue_Mission_SectorRaid_MissionNPC_Start.exists">
														<reset_cue cue="$Cue_Mission_SectorRaid_MissionNPC_Start" />
													</do_if>
													<do_if value="@$Cue_CallBack_Cleaned.exists">
														<signal_cue cue="$Cue_CallBack_Cleaned" />
													</do_if>
													<cancel_cue cue="$Cue_Namespace" />
												</do_if>
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_SectorRaid_CleanUp_MissionNPC4">
									<actions>
										<do_if value="not @player.entity.hascontext.{$Container}">
											<signal_cue cue="Mission_SectorRaid_CleanUp_MissionNPC2" />
										</do_if>
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="Mission_SectorRaid_DebugChat2">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_value value="event.param3.$text == 'debug em raid faction cues'" />
									<check_value value="event.param3.$text == 'debug em raids'" />
									<check_value value="event.param3.$text == 'debug em raid find dock'" />
									<check_value value="event.param3.$text == 'debug em raid gate distance'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<do_if value="event.param3.$text == 'debug em raid faction cues'">
									<!-- <do_for_each name="$goal" in="global.$FactionGoals">
										<set_value name="$cue" exact="$goal.$TriggerCue" />
										<debug_text text="'$cue: ' + $cue + ' $Faction: ' + @$cue.$Faction + ' $cue.$Ships.count: ' + @$cue.$Ships.count" />
									</do_for_each> -->
									<do_if value="not kEMissions.$IsSWIExists">
										<set_value name="$factions_toList" exact="[faction.teladi]" />
									</do_if>
									<do_else>
										<set_value name="$factions_toList" exact="[faction.galempire, faction.newrepublic, faction.rebelalliance]" />
									</do_else>
									<do_for_each name="$key_factionManager" in="global.$FactionManagers.keys.list">
										<set_value name="$factionManager" exact="global.$FactionManagers.{$key_factionManager}" />
										<do_if value="$factions_toList.indexof.{$factionManager.$Faction}">
											<debug_text text="'\n\n\n'" />
											<debug_text text="'$key_factionManager: ' + $key_factionManager" />
											<debug_text text="'$factionManager: ' + $factionManager + ' $Faction: ' + $factionManager.$Faction" />
											<set_value name="$goals" exact="$factionManager.$Goals" />
											<do_for_each name="$goal" in="$goals">
												<debug_text text="'\n'" />
												<debug_text text="'    $goal: ' + $goal + ' static.$Name: ' + @$goal.static.$Name + ' $Target.knownname: ' + @$goal.$Target.knownname" />
												<do_if value="@$goal.$CurrentPhaseSubGoals">
													<do_for_each name="$subGoalData" in ="@$goal.$CurrentPhaseSubGoals">
														<set_value name="$subGoal" exact="$subGoalData.$Cue" />
														<set_value name="$gateDistances" exact="[]" />
														<do_if value="@$subGoal.$Ships.count">
															<do_for_each name="$ship_inList" in="$subGoal.$Ships">
																<do_if value="$ship_inList.isclass.[class.ship_l, class.ship_xl]">
																	<append_to_list name="$gateDistances" exact="$ship_inList.gatedistance.{player.entity}" />
																</do_if>
															</do_for_each>
														</do_if>
														<do_if value="@$subGoal.$DefendArea.$Sector">
															<append_to_list name="$gateDistances" exact="$subGoal.$DefendArea.$Sector.gatedistance.{player.entity}" />
														</do_if>
														<do_if value="@$subGoal.$StagingArea.$Sector">
															<append_to_list name="$gateDistances" exact="$subGoal.$StagingArea.$Sector.gatedistance.{player.entity}" />
														</do_if>
														<do_if value="@$subGoal.$TargetStation">
															<append_to_list name="$gateDistances" exact="$subGoal.$TargetStation.gatedistance.{player.entity}" />
														</do_if>
														<debug_text text="'    $subGoal: ' + $subGoal + ' $Descriptor: ' + @$subGoal.$Descriptor + ' $kEMissions_mission: ' + @$subGoal.$kEMissions_mission + ' this? ' + (@$subGoal.$kEMissions_mission == namespace) + ' hasmissionoffer: ' + @$subGoal.$kEMissions_mission.hasmissionoffer + ' hasmission: ' + @$subGoal.$kEMissions_mission.hasmission" />
														<debug_text text="'        $gateDistances: ' + $gateDistances" />
														<debug_text text="'        $DefendArea.$Sector: ' + @$subGoal.$DefendArea.$Sector.knownname" />
														<debug_text text="'        $StagingArea.$Sector: ' + @$subGoal.$StagingArea.$Sector.knownname" />
														<debug_text text="'        $TargetStation: ' + @$subGoal.$TargetStation.knownname + ', ' + @$subGoal.$TargetStation.idcode" />
														<do_if value="@$subGoal.$Ships.count">
															<debug_text text="'    *** $Ships: ' + @$subGoal.$Ships.count" />
															<do_for_each name="$ship_inList" in="$subGoal.$Ships">
																<debug_text text="'        ' + $ship_inList.knownname + ' ' + $ship_inList.idcode + ' ship_l or ship_xl: ' + $ship_inList.isclass.[class.ship_l, class.ship_xl] + ' isoperational: ' + @$ship_inList.isoperational + ' ' + @$ship_inList.sector.knownname" />
															</do_for_each>
														</do_if>
													</do_for_each>
												</do_if>
											</do_for_each>
										</do_if>
									</do_for_each>
								</do_if>
								<do_elseif value="event.param3.$text == 'debug em raids'">
									<set_value name="$counter" exact="0" />
									<do_for_each name="$faction_inList" in="$missionsByFactionBySector.keys.list">
										<debug_text text="'$faction_inList: ' + $faction_inList" />
										<do_for_each name="$sector_inList" in="$missionsByFactionBySector.{$faction_inList}.keys.list">
											<set_value name="$counter" operation="add" exact="1" />
											<debug_text text="'    ' + $counter + ' $sector_inList: ' + $sector_inList + ' (' + $sector_inList.knownname + ')'" />
											<set_value name="$raid" exact="$missionsByFactionBySector.{$faction_inList}.{$sector_inList}" />
											<debug_text text="'        $raid: ' + $raid + ' typeof:' + (typeof $raid) + ' exists: ' + $raid.exists" />
											<debug_text text="'        $raid: ' + $raid + ' namespace:' + @$raid.namespace + ' state:' + @$raid.state" />
											<debug_text text="'        $raid: ' + $raid + ' mission_name:' + @$raid.$mission_name" />
											<debug_text text="'        $raid: ' + $raid + ' $Ship: ' + @$raid.$Ship + ' (' + @$raid.$Ship.knownname + ', ' + @$raid.$Ship.idcode + ')'" />
											<debug_text text="'        $raid: ' + $raid + ' $TargetSector: ' + @$raid.$TargetSector + ' (' + @$raid.$TargetSector.knownname + ')'" />
											<debug_text text="'        $raid: ' + $raid + ' $MissionGroup: ' + @$raid.$MissionGroup" />
											<debug_text text="'        $raid: ' + $raid + ' $OpposingFaction: ' + @$raid.$OpposingFaction" />
											<debug_text text="'        $raid: ' + $raid + ' $Cue_FactionAI: ' + @$raid.$Cue_FactionAI + ' exists: ' + @$Cue_FactionAI.exists" />
											<debug_text text="'        $raid: ' + $raid + ' $Actor: ' + @$raid.$Actor + ' exists: ' + @$Actor.exists" />
											<debug_text text="'        $raid: ' + $raid + ' $MissionNPC_Container: ' + @$raid.$MissionNPC_Container + ' isoperational: ' + @$MissionNPC_Container.isoperational" />
											<debug_text text="'        $raid: ' + $raid + ' $MissionNPC_DynamicInterior: ' + @$raid.$MissionNPC_DynamicInterior + ' isoperational: ' + @$MissionNPC_DynamicInterior.isoperational" />
											<debug_text text="'        $raid: ' + $raid + ' $Actor.room: ' + @$raid.$Actor.room + ' isoperational: ' + @$Actor.room.isoperational" />
										</do_for_each>
									</do_for_each>
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em raid find dock'">
									<debug_text text="'player.ship.docksize: ' + player.ship.docksize" />
									<set_value name="$dockSize" exact="tag.dock_s" />
									<do_if value="player.ship.isclass.ship_m">
										<set_value name="$dockSize" exact="tag.dock_m" />
									</do_if>
									<do_elseif value="not player.ship.isclass.ship_s">
										<set_value name="$dockSize" exact="tag.dock_l" />
									</do_elseif>
									<debug_text text="'$dockSize: ' + $dockSize" />
									<find_station name="$container_possible" space="player.galaxy" owner="faction.teladi" defencestation="true" sortbydistanceto="player.entity">
										<match_content checkoperational="true">
											<match_dock size="$dockSize"/>
										</match_content>
										<match_relation_to faction="faction.player" relation="dock" comparison="ge" />
									</find_station>
									<debug_text text="@$container_possible.knownname + ' ' + @$container_possible.idcode" />
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em raid gate distance'">
									<do_if value="UserSettings.$gateDistance_missionOffers == 3">
										<set_value name="UserSettings.$gateDistance_missionOffers" exact="10" />
									</do_if>
									<do_else>
										<set_value name="UserSettings.$gateDistance_missionOffers" exact="3" />
									</do_else>
									<raise_lua_event name="'Chat_Window_API.Print'" param="'em $gateDistance_missionOffers: ' + UserSettings.$gateDistance_missionOffers" />
								</do_elseif>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<!--
					
					  ,,
					`7MM                              mm
					  MM                              MM
					  MMpMMMb.`7MM  `7MM  `7MMpMMMb.mmMMmm
					  MM    MM  MM    MM    MM    MM  MM
					  MM    MM  MM    MM    MM    MM  MM
					  MM    MM  MM    MM    MM    MM  MM
					.JMML  JMML.`Mbod"YML..JMML  JMML.`Mbmo
					
					
				 -->
				<cue name="Missions_Hunts" namespace="this" version="14">
					<actions>
						<set_value name="$missionIdCounter" exact="0" />
						<set_value name="$missions_active" exact="[]" />
						<set_value name="$missionHunts_shipsByMissionOffers" exact="table[]" />
						<set_value name="$missionHunts_lastKnownTimesByMissionOffers" exact="table[]" />
						<set_value name="$missionsPerHour_max" exact="3" />
						<set_value name="$missionsPerHour_adj" exact="0" />
						<set_value name="$missionTimes" exact="[]" />
						<set_value name="global.$Missions_Hunts" exact="this" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<set_value name="$missions_active" exact="[]" />
					</patch>
					<patch sinceversion="3">
						<debug_text text="'patch sinceversion 3, state: ' + this.state" />
						<set_value name="$missionHunts_shipsByMissionOffers" exact="table[]" />
						<set_value name="$missionHunts_lastKnownTimesByMissionOffers" exact="table[]" />
						<set_value name="$missionHunts_current_ship_target" exact="null" />
						<set_value name="$missionHunts_current_lastKnownTime" exact="null" />
					</patch>
					<patch sinceversion="4">
						<debug_text text="'patch sinceversion 4, state: ' + this.state" />
						<set_value name="$kCHC_ships_noCrime" exact="[]" />
						<remove_value name="$missionHunts_current_ship_target" />
						<remove_value name="$missionHunts_current_lastKnownTime" />
					</patch>
					<patch sinceversion="5">
						<debug_text text="'patch sinceversion 5, state: ' + this.state" />
						<remove_value name="$kCHC_ships_noCrime" />
					</patch>
					<patch sinceversion="6">
						<debug_text text="'patch sinceversion 6, state: ' + this.state" />
						<set_value name="$missionIdCounter" exact="$missionCounter" />
						<remove_value name="$missionCounter" />
						<set_value name="$missionsPerHour_succeeded" exact="[]" />
						<set_value name="$missionsPerHour_failed" exact="[]" />
						<set_value name="$missionsPerHour_max" exact="3" />
					</patch>
					<patch sinceversion="8">
						<debug_text text="'patch sinceversion 8, state: ' + this.state" />
						<remove_value name="$isGuildMember" />
					</patch>
					<patch sinceversion="10">
						<debug_text text="'patch sinceversion 10, state: ' + this.state" />
						<clear_list list="$missionsPerHour_succeeded" />
						<clear_list list="$missionsPerHour_failed" />
						<set_value name="$time_lastLimiterStart" exact="0" />
					</patch>
					<patch sinceversion="12">
						<debug_text text="'patch sinceversion 12, state: ' + this.state" />
						<set_value name="$missionsPerHour_adj" exact="0" />
					</patch>
					<patch sinceversion="13">
						<debug_text text="'patch sinceversion 13, state: ' + this.state" />
						<set_value name="$missionTimes" exact="[]" />
						<do_for_each name="$mission_inList" in="$missions_active">
							<append_to_list name="$missionTimes" exact="$mission_inList.time" />
						</do_for_each>
						<remove_value name="$missionsPerHour_succeeded" />
						<remove_value name="$missionsPerHour_failed" />
						<remove_value name="$time_lastLimiterStart" />
					</patch>
					<patch sinceversion="14">
						<debug_text text="'patch sinceversion 14, state: ' + this.state" />
						<set_value name="global.$Missions_Hunts" exact="this" />
					</patch>
					<cues>
						<cue name="Missions_Hunts_MapMenu_MissionOffers" namespace="this">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_ui_triggered screen="'MapMenu'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name + ' event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance_missionHunt" />
								<do_if value="event.param2 != 'menu_close'">
									<!-- <debug_text text="'Missions_Hunts.$missions_active.count: ' + Missions_Hunts.$missions_active.count" chance="UserSettings.$debugChance_missionHunt" /> -->
									<set_value name="$missionHunts_activeMissionsByShip" exact="table[]" />
									<set_value name="$missionHunts_lastKnownTimesByShip" exact="table[]" />
									<do_for_each name="$mission_active" in="Missions_Hunts.$missions_active">
										<do_if value="@$mission_active.$MissionTarget.isoperational">
											<set_value name="$missionHunts_activeMissionsByShip.{$mission_active.$MissionTarget}" exact="$mission_active" />
											<set_value name="$missionHunts_lastKnownTimesByShip.{$mission_active.$MissionTarget}" exact="@$mission_active.$LastKnownDatas.$lastKnowns.{1}.$time" />
										</do_if>
									</do_for_each>
									<set_value name="$missionsPerHour_adj" exact="0" />
									<do_if value="@md.kuertee_professions.kProfs.exists">
										<set_value name="$prof" exact="md.kuertee_professions.kProfs.$prof_BountyHunter" />
										<do_if value="@md.kuertee_professions.kProfs.$professions.$scores.{$prof}.$accessKey_gold_time and player.age - @md.kuertee_professions.kProfs.$professions.$scores.{$prof}.$accessKey_gold_time lt 3h">
											<set_value name="$missionsPerHour_adj" exact="4" comment="for 10 missions total per hour" />
										</do_if>
										<do_elseif value="@md.kuertee_professions.kProfs.$professions.$scores.{$prof}.$accessKey_silver_time and player.age - @md.kuertee_professions.kProfs.$professions.$scores.{$prof}.$accessKey_silver_time lt 3h">
											<set_value name="$missionsPerHour_adj" exact="3" comment="for 6 missions total per hour" />
										</do_elseif>
									</do_if>
									<do_for_each name="$time_inList" in="Missions_Hunts.$missionTimes" reverse="true">
										<do_if value="player.age - $time_inList gt 1h">
											<remove_from_list name="Missions_Hunts.$missionTimes" exact="$time_inList" multiple="false" />
										</do_if>
									</do_for_each>
									<set_value name="player.entity.$ui_kuertee_em_hunts" exact="table[
										$missionHunts_shipsByMissionOffers = Missions_Hunts.$missionHunts_shipsByMissionOffers,
										$missionHunts_lastKnownTimesByMissionOffers = Missions_Hunts.$missionHunts_lastKnownTimesByMissionOffers,
										$missionHunts_lastKnownTimesByShip = $missionHunts_lastKnownTimesByShip,
										$missionHunts_activeMissionsByShip = $missionHunts_activeMissionsByShip,
										$missionHunts_missionsPerHour_max = Missions_Hunts.$missionsPerHour_max + $missionsPerHour_adj,
										$missionHunts_missionsPerHour_count = Missions_Hunts.$missionTimes.count,
										$missionHunts_lastTime = @Missions_Hunts.$missionTimes.{1}
									]" />
									<debug_text text="player.entity.$ui_kuertee_em_hunts" chance="UserSettings.$debugChance_missionHunt" />
								</do_if>
								<do_else>
									<raise_lua_event name="'kEM_clear_ui_data'" />
									<remove_value name="player.entity.$ui_kuertee_em_hunts" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="Missions_Hunts_CreateOffer" namespace="this" instantiate="true">
							<conditions>
								<event_cue_signalled />
								<!-- <check_value value="Missions_Hunts.$missions_active.count == 0" /> -->
							</conditions>
							<actions>
								<set_value name="$station" exact="event.param.$station" />
								<set_value name="$isOffered" exact="false" />
								<do_if value="@$station.isoperational">
									<do_if value="kEMissions.$validFactions.indexof.{$station.owner} and $station.owner.relationto.{faction.player} ge $station.owner.relation.neutral.min">
										<set_value name="$target" exact="event.param.$target" />
										<set_value name="$faction" exact="$station.owner" />
										<debug_text text="'$kEMissions_missions: ' + @$target.pilot.$kEMissions_missions.{$faction} + ' isplayerowned: ' + $target.isplayerowned" chance="UserSettings.$debugChance_bounties" />
										<do_if value="@$target.pilot.isoperational and (not @$target.pilot.$kEMissions_missions.{$faction}) and (not $target.isplayerowned)">
											<debug_text text="'$station: ' + $station.knownname" chance="UserSettings.$debugChance_missionHunt" />
											<set_value name="$missionType" exact="kEMissions.$missionType_hunt" />
											<set_value name="parent.$missionIdCounter" exact="parent.$missionIdCounter + 1" />
											<do_if value="parent.$missionIdCounter gt 9999">
												<set_value name="parent.$missionIdCounter" exact="0" />
											</do_if>
											<do_if value="not $station.isoperational">
												<find_station name="$station" space="player.galaxy" owner="$target.owner" sortbydistanceto="$target" />
											</do_if>
											<do_if value="@$station.isoperational">
												<signal_cue_instantly cue="Mission_Hunt" param="table[
													$station = $station,
													$target = $target,
													$missionType = $missionType,
													$missionId = 'kEM_Hunt_' + parent.$missionIdCounter
												]" />
												<set_value name="$isOffered" exact="true" />
											</do_if>
										</do_if>
									</do_if>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="Mission_Hunt" namespace="this" instantiate="true" version="11">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$MissionId" exact="event.param.$missionId" />
								<set_value name="$Cue_Mission" exact="this" />
								<debug_text text="$Cue_Mission.$MissionId + ' $MissionId: ' + $MissionId" chance="UserSettings.$debugChance_missionHunt" />
								<set_value name="$MissionOffer_Station" exact="event.param.$station" />
								<!-- $Ship is required and set to $MissionOffer_Station because the libs expect $Ship -->
								<set_value name="$Ship" exact="$MissionOffer_Station" />
								<!-- start: $GroupOfOne_Ship is required and set to $MissionOffer_Station because the libs expect $GroupOfOne_Ship -->
								<create_group groupname="$GroupOfOne_Ship" />
								<add_to_group groupname="$GroupOfOne_Ship" object="$MissionOffer_Station" />
								<!-- end: $GroupOfOne_Ship is required and set to $MissionOffer_Station because the libs expect $GroupOfOne_Ship -->
								<debug_text text="$Cue_Mission.$MissionId + ' $MissionOffer_Station: ' + $MissionOffer_Station.knownname" chance="UserSettings.$debugChance_missionHunt" />
								<set_value name="$MissionTarget" exact="event.param.$target" />
								<do_if value="not @$MissionTarget.pilot.$kEMissions_missions">
									<set_value name="$MissionTarget.pilot.$kEMissions_missions" exact="table[]" />
								</do_if>
								<set_value name="$MissionTarget.pilot.$kEMissions_missions.{$MissionOffer_Station.owner}" exact="namespace" />
								<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget: ' + $MissionTarget.knownname" chance="UserSettings.$debugChance_missionHunt" />
								<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget.pilot: ' + $MissionTarget.pilot.knownname" chance="UserSettings.$debugChance_missionHunt" />
								<set_value name="$TargetSector" exact="$MissionTarget.pilot.$kEM_lastKnownLocation.{$MissionOffer_Station.owner}.{1}.$sector" />
								<run_actions ref="GetName" result="$MissionTarget_name">
									<param name="Component" value="$MissionTarget" />
								</run_actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget_name: ' + $MissionTarget_name" chance="UserSettings.$debugChance_missionHunt" />
								<set_value name="$kEMissionType" exact="event.param.$missionType" />
								<set_value name="$MissionGroup" exact="null" />
								<do_if value="@md.kuertee_professions.kProfs.exists">
									<set_value name="$MissionGroup" exact="missiongroup.bountyHunters_guild" />
								</do_if>
								<!-- start: generic mission / RAP requirements -->
								<set_value name="$RewardCr" value="0ct" />
								<set_value name="$Faction" exact="$MissionOffer_Station.owner" />
								<set_value name="$IsDisguised" exact="$MissionTarget.coverowner and $MissionTarget.coverowner != $MissionTarget.trueowner" />
								<set_value name="$Difficulty" exact="level.medium" />
								<do_if value="$MissionTarget.isclass.[class.ship_l, class.ship_xl]">
									<set_value name="$Difficulty" exact="level.hard" />
								</do_if>
								<!-- end: generic mission / RAP requirements -->
								<set_value name="$Objective_Step_init" exact="0" />
								<set_value name="$Objective_Step_brief" exact="1" />
								<set_value name="$Objective_Step_find" exact="2" />
								<set_value name="$Objective_Step_identify" exact="3" />
								<set_value name="$Objective_Step_destroy" exact="4" />
								<set_value name="$Objective_Step_debrief" exact="5" />
								<set_value name="$Objective_Step_complete" exact="6" />
								<set_value name="$Objective_Step_find_success" exact="false" />
								<set_value name="$Objective_Step_identify_success" exact="false" />
								<set_value name="$Objective_Step_destroy_success" exact="false" />
								<set_value name="$Objective_Step" exact="$Objective_Step_init" />
								<!-- start: set-up starting mission info for ui -->
								<set_value name="$LastKnownDatas" exact="table[
									$lastKnowns = [],
									$lastKnownTexts = []
								]" />
								<run_actions ref="Mission_Hunt_GetLast3KnownData" result="$LastKnownDatas">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<run_actions ref="Mission_Hunt_GetKillsText" result="$TargetKillsDescription">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<run_actions ref="Mission_Hunt_GetBaseRewardData" result="$BaseRewardData">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTargetKills: ' + $BaseRewardData.$reward_forTargetKills" chance="UserSettings.$debugChance_missionHunt" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTarget: ' + $BaseRewardData.$reward_forTarget" chance="UserSettings.$debugChance_missionHunt" />
								<set_value name="$PlayerDamageAndKillsData" exact="null" />
								<run_actions ref="Mission_Hunt_GetMissionTexts" result="$MissionTexts">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</run_actions>
								<set_value name="$mission_name" exact="$MissionTexts.$name" />
								<set_value name="$mission_name_short" exact="$MissionTexts.$name_short" />
								<set_value name="$mission_description" exact="$MissionTexts.$description" />
								<set_value name="$RewardText" exact="$MissionTexts.$rewardText" />
								<!-- end: set-up starting mission info for ui -->
								<!-- start: generic mission / RAP requirements -->
								<set_value name="$Client" exact="$MissionOffer_Station.tradenpc" />
								<set_value name="$TextTable" exact="table[$missionname = $mission_name_short]" />
								<set_value name="$OpposingFaction" exact="$MissionTarget.owner" />
								<!-- end: generic mission / RAP requirements -->
								<create_offer cue="$Cue_Mission"
									type="missiontype.fight"
									actor="$Client"
									name="$mission_name"
									description="$mission_description"
									faction="$Faction"
									difficulty="$Difficulty"
									distance="0"
									rewardtext="$RewardText"
									group="$MissionGroup"
								>
									<briefing>
										<!-- <objective step="$Objective_Step_brief" action="objective.talkto" object="$Client" /> -->
										<objective step="1" action="objective.find" text="$MissionTarget_name" />
										<objective step="2" action="objective.destroy" text="$MissionTarget_name" />
										<!-- <objective step="$Objective_Step_debrief" action="objective.talkto" object="$Client" /> -->
									</briefing>
								</create_offer>
								<create_group groupname="$beacons_lastKnown" />
								<create_group groupname="$EnemyTargets" />
								<add_to_group groupname="$EnemyTargets" object="$MissionTarget" />
								<set_value name="$EnemyFactions" exact="[$MissionTarget.owner]" />
								<set_value name="$Result" exact="null" />
								<set_value name="$Result_success" exact="'success'" />
								<set_value name="$Result_fail" exact="'fail'" />
								<set_value name="$Result_aborted" exact="'aborted'" />
								<set_value name="$timer_find_end" exact="0" />
								<set_value name="$MissionContact_NPC" exact="null" />
								<set_value name="$MissionContact_Container" exact="null" />
								<set_value name="$MissionContact_Interior" exact="null" />
								<set_value name="$MissionContact_Tries" exact="0" />
								<set_value name="$LastKnown_Update" exact="null" />
								<set_value name="Missions_Hunts.$missionHunts_shipsByMissionOffers.{$Cue_Mission}" exact="$MissionTarget" />
								<set_value name="Missions_Hunts.$missionHunts_lastKnownTimesByMissionOffers.{$Cue_Mission}" exact="$LastKnownDatas.$lastKnowns.{1}.$time" />
								<set_value name="$isTargetAttackedByPlayer" exact="false" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Client: ' + @$Client.knownname + ' $MissionGroup: ' + $MissionGroup + ' create_offer ' + $mission_name" chance="UserSettings.$debugChance_missionHunt" />
							</actions>
							<patch sinceversion="5">
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 5, state: ' + this.state" />
								<set_value name="$IsDisguised" exact="@$MissionTarget.coverowner and @$MissionTarget.coverowner != @$MissionTarget.trueowner" />
								<set_value name="$Objective_Step_init" exact="0" />
								<set_value name="$Objective_Step_brief" exact="1" />
								<set_value name="$Objective_Step_find" exact="2" />
								<set_value name="$Objective_Step_identify" exact="3" />
								<set_value name="$Objective_Step_destroy" exact="4" />
								<set_value name="$Objective_Step_debrief" exact="5" />
								<set_value name="$Objective_Step_complete" exact="6" />
							</patch>
							<patch sinceversion="6">
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 6, state: ' + this.state" />
								<do_if value="not Missions_Hunts.$missions_active.indexof.{$MissionId}">
									<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
									<signal_cue cue="Mission_Hunt_CleanUp" />
								</do_if>
							</patch>
							<patch sinceversion="7">
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 7, state: ' + this.state" />
								<do_if value="$Objective_Step == $Objective_Step_destroy">
									<signal_cue cue="Mission_Hunt_EnemyTargets2" />
								</do_if>
							</patch>
							<patch sinceversion="9">
								<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 9, state: ' + this.state" />
								<set_value name="$isTargetAttackedByPlayer" exact="false" />
							</patch>
							<patch sinceversion="10">
								<debug_text text="'patch sinceversion 10, state: ' + this.state" />
								<signal_cue cue="Mission_Hunt_CheckMissionContact" />
							</patch>
							<patch sinceversion="11">
								<debug_text text="'patch sinceversion 11, state: ' + this.state" />
								<remove_value name="$timer_find_left" />
								<do_if value="player.age ge $timer_find_end">
									<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' Mission_Hunt_TimeoutStart.time: ' + Mission_Hunt_TimeoutStart.time + ' $timer_find_end: ' + $timer_find_end" />
									<signal_cue cue="Mission_Hunt_ObjectiveComplete" />
									<signal_cue cue="Mission_Hunt_CleanUp" />
								</do_if>
							</patch>
							<cues>
								<cue name="Mission_Hunt_DebugChat">
									<conditions>
										<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
										<check_any>
											<check_value value="event.param3.$text == 'debug em hunt cues'" />
											<check_value value="event.param3.$text == 'debug em hunt pilot'" />
											<check_value value="event.param3.$text == 'debug em hunt beacons'" />
											<check_value value="event.param3.$text == 'debug em hunt attention'" />
											<check_value value="event.param3.$text == 'debug em hunt owner'" />
											<check_value value="event.param3.$text == 'debug em hunt result'" />
											<check_value value="event.param3.$text == 'debug em hunt target'" />
											<check_value value="event.param3.$text == 'debug em hunt time'" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="event.param3" />
										<do_if value="event.param3.$text == 'debug em hunt cues'">
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget ' + @$MissionTarget.knownname + ', ' + @$MissionTarget.idcode + ', isoperational: ' + @$MissionTarget.isoperational" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_NPC ' + @$MissionContact_NPC.knownname + ', isoperational: ' + @$MissionContact_NPC.isoperational" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_Container ' + @$MissionContact_Container.knownname + ', ' + @$MissionContact_Container.idcode + ', isoperational: ' + @$MissionContact_Container.isoperational" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_Interior ' + @$MissionContact_Interior.knownname + ', isoperational: ' + @$MissionContact_Interior.isoperational" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step ' + @$Objective_Step" />
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Resolve.state ' + @Mission_Hunt_Resolve.state + ' Mission_Hunt_Resolve.time ' + @Mission_Hunt_Resolve.time" />
											<debug_text text="$Cue_Mission.$MissionId + ' Missions_Hunts.$missions_active.indexof.{$MissionId}: ' + Missions_Hunts.$missions_active.indexof.{$MissionId}" />
										</do_if>
										<do_elseif value="event.param3.$text == 'debug em hunt pilot'">
											<debug_text text="$Cue_Mission.$MissionId + ' event.param3: ' + event.param3" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' @$MissionTarget.isoperational: ' + @$MissionTarget.isoperational + ' @$MissionTarget.isoperational: ' + @$MissionTarget.isoperational" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' @$MissionTarget.pilot.isoperational: ' + @$MissionTarget.pilot.isoperational + ' @$MissionTarget.pilot.isoperational: ' + $MissionTarget.pilot.isoperational" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' @$MissionTarget.idcode: ' + @$MissionTarget.idcode" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' @$MissionTarget.owner: ' + @$MissionTarget.owner + ' @$MissionTarget.trueowner: ' + @$MissionTarget.trueowner" chance="UserSettings.$debugChance_missionHunt" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt beacons'">
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Beacons_CleanUp: ' + Mission_Hunt_Beacons_CleanUp" />
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Beacons_CleanUp: ' + Mission_Hunt_Beacons_CleanUp.state" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt attention'">
											<debug_text text="$Cue_Mission.$MissionId + ' attention: ' + $MissionTarget.attention" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt owner'">
											<debug_text text="$Cue_Mission.$MissionId + ' owner: ' + $MissionTarget.owner" />
											<debug_text text="$Cue_Mission.$MissionId + ' trueowner: ' + $MissionTarget.trueowner" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt result'">
											<debug_text text="$Cue_Mission.$MissionId + ' DamageCalculator.$EnemyTargets: ' + DamageCalculator.$EnemyTargets" />
											<!-- <debug_text text="$Cue_Mission.$MissionId + ' DamageCalculator.$EnemyTargets.indexof.{$MissionTarget}: ' + DamageCalculator.$EnemyTargets.indexof.{$MissionTarget}" /> -->
											<!-- <debug_text text="$Cue_Mission.$MissionId + ' DamageCalculator.$DamageAndKillsData.{$MissionTarget}: ' + DamageCalculator.$DamageAndKillsData.{$MissionTarget}" /> -->
											<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_find_success: ' + $Objective_Step_find_success" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_identify_success: ' + $Objective_Step_identify_success" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_destroy_success: ' + $Objective_Step_destroy_success" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Result: ' + $Result" chance="UserSettings.$debugChance_missionHunt" />
											<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$DamageAndKillsList">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions>
											<debug_text text="$Cue_Mission.$MissionId + ' $DamageAndKillsList: ' + $DamageAndKillsList" chance="UserSettings.$debugChance_missionHunt" />
											<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
											<do_for_each name="$killData" in="$DamageAndKillsList">
												<debug_text text="'index: ' + ($idCodes.indexof.{$killData.$idCode}) + ': ' + $killData" />
												<do_for_each name="$key" in="$killData.keys.list">
													<debug_text text="'    ' + $key + ': ' + $killData.{$key}" />
												</do_for_each>
											</do_for_each>
											<run_actions ref="Reward_CalculateForKills" result="$PlayerDamageAndKillsData">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="DamageAndKillsList" value="$DamageAndKillsList" />
											</run_actions>
											<do_for_each name="$key" in="$PlayerDamageAndKillsData.keys.list">
												<debug_text text="$key + ': ' + $PlayerDamageAndKillsData.{$key}" />
											</do_for_each>
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt target'">
											<debug_text text="$Cue_Mission.$MissionId + ' $IsDisguised: ' + $IsDisguised" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget ' + @$MissionTarget.knownname + ', coverowner: ' + @$MissionTarget.coverowner + ' and ' + @$MissionTarget.coverowner + ' != ' + @$MissionTarget.trueowner + ' (' + (@$MissionTarget.coverowner != @$MissionTarget.trueowner) + ')'" />
											<debug_text text="$Cue_Mission.$MissionId + ' player.target: ' + @player.target.knownname + ', owner: ' + @player.target.owner + ', coverowner: ' + @player.target.coverowner + ', trueowner: ' + @player.target.trueowner" />
										</do_elseif>
										<do_elseif value="event.param3.$text == 'debug em hunt time'">
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_ObjectiveFind.time: ' + Mission_Hunt_ObjectiveFind.time" />
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_TimeoutStart.time: ' + Mission_Hunt_TimeoutStart.time" />
											<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Timeout.time: ' + Mission_Hunt_Timeout.time" />
											<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age" />
											<debug_text text="$Cue_Mission.$MissionId + ' $timer_find_end: ' + $timer_find_end" />
										</do_elseif>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_CleanUp">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<check_any>
													<check_all>
														<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
														<check_value value="@event.param2.$leaveFrom.exists" />
													</check_all>
													<check_all>
														<event_object_signalled object="player.entity" param="'Bounties_Convo_Next_remove_mission_offers'" />
														<check_value value="kEMissions.$IsSWIExists" />
													</check_all>
												</check_any>
												<check_any>
													<check_value value="not $Cue_Mission.hasmission" />
													<check_value value="$Objective_Step == $Objective_Step_complete" />
												</check_any>
											</check_all>
											<check_all>
												<event_mission_aborted cue="$Cue_Mission" />
												<check_value value="not $Cue_Mission.hasmission" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.param: ' + event.param + ' $Cue_Mission.hasmissionoffer: ' + @$Cue_Mission.hasmissionoffer + ' $Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="@Mission_Hunt_Beacons_CleanUp.state == cuestate.waiting">
											<signal_cue_instantly cue="Mission_Hunt_Beacons_CleanUp" />
										</do_if>
										<do_if value="@$MissionTarget.pilot.isoperational">
											<remove_value name="$MissionTarget.pilot.$kEMissions_missions.{$Faction}" />
										</do_if>
										<remove_from_list name="Missions_Hunts.$missions_active" exact="$Cue_Mission" />
										<remove_value name="Missions_Hunts.$missionHunts_shipsByMissionOffers.{$Cue_Mission}" />
										<remove_value name="Missions_Hunts.$missionHunts_lastKnownTimesByMissionOffers.{$Cue_Mission}" />
										<remove_offer cue="$Cue_Mission" />
										<remove_mission cue="$Cue_Mission" />
										<do_if value="not @player.entity.hascontext.{$MissionContact_Container}">
											<do_if value="@$MissionContact_NPC.isoperational">
												<debug_text text="$Cue_Mission.$MissionId + ' destroy_object: ' + $MissionContact_NPC + ' isoperational: ' + $MissionContact_NPC.isoperational" chance="UserSettings.$debugChance_missionHunt" />
												<destroy_object object="$MissionContact_NPC" />
											</do_if>
											<do_if value="@$MissionContact_Interior.isoperational">
												<debug_text text="$Cue_Mission.$MissionId + ' destroy_object: ' + $MissionContact_Interior + ' isoperational: ' + $MissionContact_Interior.isoperational" chance="UserSettings.$debugChance_missionHunt" />
												<destroy_object object="$MissionContact_Interior" />
											</do_if>
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
										<run_actions ref="DamageCalculator_CleanData">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<clear_group group="$EnemyTargets" />
									</actions>
									<cues>
										<cue name="Mission_Hunt_CleanUp2">
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' destroy_object (post destroy): ' + $MissionContact_NPC + ' isoperational: ' + @$MissionContact_NPC.isoperational" chance="UserSettings.$debugChance_missionHunt" />
												<debug_text text="$Cue_Mission.$MissionId + ' destroy_object (post destroy): ' + $MissionContact_Interior + ' isoperational: ' + @$MissionContact_Interior.isoperational" chance="UserSettings.$debugChance_missionHunt" />
												<cancel_cue cue="$Cue_Mission" />
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_Accept">
									<conditions>
										<!-- event_offer_accepted doesn't work -->
										<!-- <event_offer_accepted cue="namespace" /> -->
										<!-- but menu_map.lua and menu_missionbriefing.lua sends the signal "accept" to the actor -->
										<event_object_signalled object="$Client" param="'accept'" param2="$Cue_Mission" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.param: ' + event.param + ' $Cue_Mission.hasmissionoffer: ' + @$Cue_Mission.hasmissionoffer + ' $Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" chance="UserSettings.$debugChance_missionHunt" />
										<signal_cue_instantly cue="Mission_Hunt_MissionContact_Generate" />
									</actions>
									<cues>
										<cue name="Mission_Hunt_Accept2">
											<actions>
												<append_to_list name="Missions_Hunts.$missionTimes" exact="player.age" />
												<cancel_cue cue="this" />
												<reset_cue cue="parent" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_CreateMission">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' create_mission'" chance="UserSettings.$debugChance_missionHunt" />
										<run_actions ref="Mission_Hunt_GetLast3KnownData" result="$LastKnownDatas">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<run_actions ref="Mission_Hunt_GetMissionTexts" result="$MissionTexts">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<set_value name="$mission_description" exact="$MissionTexts.$description" />
										<create_mission cue="$Cue_Mission" type="missiontype.fight" actor="$Client" name="$mission_name"
											description="$mission_description" faction="$Faction" difficulty="$Difficulty" distance="0"
											rewardtext="$RewardText" group="$MissionGroup">
											<briefing>
												<objective step="$Objective_Step_brief" action="objective.talkto" object="$MissionContact_NPC" />
												<objective step="$Objective_Step_find" action="objective.find" object="$LastKnownDatas.$lastKnowns.{1}.$sector" offset="$LastKnownDatas.$lastKnowns.{1}.$position" text="$MissionTarget.knownname" />
												<objective step="$Objective_Step_identify" action="objective.scan" object="$MissionTarget" />
												<objective step="$Objective_Step_destroy" action="objective.destroy" object="$MissionTarget" />
												<objective step="$Objective_Step_debrief" action="objective.talkto" object="$MissionContact_NPC" />
											</briefing>
										</create_mission>
										<set_value name="stat.missions_accepted" operation="add" />
										<debug_text text="$Cue_Mission.$MissionId + ' remove_offer $Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" chance="UserSettings.$debugChance_missionHunt" />
										<remove_offer cue="$Cue_Mission" />
										<do_if value="@md.kuertee_professions.kProfs.exists">
											<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionRML" param="table[
												$cue = $Cue_Mission,
												$action = md.kuertee_professions.kProfs.$event_player_killed_object
											]" />
											<signal_cue_instantly cue="md.kuertee_professions.RegisterMissionTargets" param="table[
												$missionLib = $kProfs_missionLib,
												$target = $MissionTarget
											]" />
										</do_if>
										<append_to_list name="Missions_Hunts.$missions_active" exact="$Cue_Mission" />
										<signal_cue cue="Missions_Hunts_MapMenu_MissionOffers" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_Resolve">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<event_mission_aborted cue="$Cue_Mission" />
												<check_value value="$Cue_Mission.hasmission" />
											</check_all>
										</check_any>
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_find_success: ' + $Objective_Step_find_success" chance="UserSettings.$debugChance_missionHunt" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_identify_success: ' + $Objective_Step_identify_success" chance="UserSettings.$debugChance_missionHunt" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_destroy_success: ' + $Objective_Step_destroy_success" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="event.name == 'event_mission_aborted'">
											<set_value name="$Result" exact="$Result_aborted" />
										</do_if>
										<do_elseif value="not $Objective_Step_find_success">
											<set_value name="$Result" exact="$Result_fail" />
										</do_elseif>
										<do_elseif value="not $Objective_Step_identify_success">
											<set_value name="$Result" exact="$Result_fail" />
										</do_elseif>
										<do_elseif value="not $Objective_Step_destroy_success">
											<set_value name="$Result" exact="$Result_fail" />
										</do_elseif>
										<do_else>
											<set_value name="$Result" exact="$Result_success" />
										</do_else>
										<do_if value="$Result == $Result_aborted">
											<signal_cue cue="Mission_Hunt_CleanUp" />
										</do_if>
										<do_else>
											<debug_text text="$Cue_Mission.$MissionId + ' $Result: ' + $Result" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Result_success: ' + $Result_success" chance="UserSettings.$debugChance_missionHunt" />
											<do_if value="$Result == $Result_success">
												<run_actions ref="DamageCalculator_GetDamageAndKillsList" result="$DamageAndKillsList">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
												<run_actions ref="Reward_CalculateForKills" result="$PlayerDamageAndKillsData">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="DamageAndKillsList" value="$DamageAndKillsList" />
												</run_actions>
												<do_if value="not $PlayerDamageAndKillsData.$reward">
													<set_value name="$Result" exact="$Result_fail" />
													<debug_text text="$Cue_Mission.$MissionId + ' $Result (no damage): ' + $Result" chance="UserSettings.$debugChance_missionHunt" />
												</do_if>
											</do_if>
											<do_if value="$Result == $Result_success">
												<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTargetKills: ' + $BaseRewardData.$reward_forTargetKills" chance="UserSettings.$debugChance_missionHunt" />
												<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTarget: ' + $BaseRewardData.$reward_forTarget" chance="UserSettings.$debugChance_missionHunt" />
												<debug_text text="$Cue_Mission.$MissionId + ' $PlayerDamageAndKillsData.$reward: ' + $PlayerDamageAndKillsData.$reward" chance="UserSettings.$debugChance_missionHunt" />
												<set_value name="$BaseRewardData.$reward_forTarget" exact="$PlayerDamageAndKillsData.$reward" />
												<set_value name="$RewardCr" exact="(($BaseRewardData.$reward_forTargetKills)f + ($PlayerDamageAndKillsData.$reward)f) * 1ct" />
												<run_actions ref="Mission_Complete">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
												<!-- add relationship data -->
												<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Notoriety" param="[$Cue_Mission, $Difficulty, 1, $Faction]" />
												<set_value name="$RewardNotoriety" exact="$Reward_Notoriety__Result" />
												<add_faction_relation faction="faction.player" otherfaction="$Faction" value="$RewardNotoriety" reason="relationchangereason.missioncompleted" />
												<set_value name="stat.missions_completed" operation="add" />
											</do_if>
											<do_else>
												<set_value name="$RewardCr" exact="0" />
												<run_actions ref="Mission_Fail">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
											</do_else>
											<run_actions ref="Mission_Hunt_GetMissionTexts" result="$MissionTexts">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="IsWriteToLog" value="true" />
											</run_actions>
											<set_value name="$mission_description" exact="$MissionTexts.$description" />
											<update_mission cue="$Cue_Mission" description="$MissionTexts.$description" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_EnemyTargets2">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<cues>
										<cue name="Mission_Hunt_EnemyTargets3" ref="EnemyTargets">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="EnemyTargets" value="$EnemyTargets" />
											<param name="IsFindNewEnemyTargets" value="false" />
											<param name="IsForgetEnemyTargetOnNewSector" value="false" />
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_BriefingCutscene" ref="BriefingCutscene">
									<param name="Cue_Mission" value="$Cue_Mission" />
								</cue>
								<!-- sector hunt specifics -->
								<cue name="Mission_Hunt_UpdateMissionDescription" version="2">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<event_ui_triggered screen="'MapMenu'" />
												<check_value value="player.isinfullscreenmenu" />
											</check_all>
										</check_any>
									</conditions>
									<patch sinceversion="2" state="waiting">
										<debug_text text="'patch sinceversion 2, ' + this.state" />
										<debug_text text="'Mission_Hunt_Beacons.state: ' + Mission_Hunt_Beacons.state" />
										<do_if value="$Cue_Mission.hasmission and $Objective_Step == $Objective_Step_find">
											<do_if value="@Mission_Hunt_Beacons.state == cuestate.waiting">
												<signal_cue cue="Mission_Hunt_Beacons" />
											</do_if>
										</do_if>
									</patch>
									<actions>
										<debug_text text="'event.name: ' + event.name + ' event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance_missionHunt" />
										<run_actions ref="Mission_Hunt_GetLast3KnownData" result="$LastKnownDatas">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<run_actions ref="Mission_Hunt_GetMissionTexts" result="$MissionTexts">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<set_value name="$mission_description" exact="$MissionTexts.$description" />
										<do_if value="$Cue_Mission.hasmissionoffer">
											<update_offer cue="$Cue_Mission" description="$MissionTexts.$description" />
										</do_if>
										<do_elseif value="$Cue_Mission.hasmission">
											<!-- <debug_text text="'$MissionTexts.$description: ' + $MissionTexts.$description" chance="UserSettings.$debugChance_missionHunt" /> -->
											<update_mission cue="$Cue_Mission" description="$MissionTexts.$description" />
										</do_elseif>
										<do_if value="event.name == 'event_cue_signalled'">
											<!-- <debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Beacons.state: ' + Mission_Hunt_Beacons.state" chance="UserSettings.$debugChance_missionHunt" /> -->
											<do_if value="@Mission_Hunt_Beacons_CleanUp.state == cuestate.waiting">
												<signal_cue cue="Mission_Hunt_Beacons_CleanUp" />
											</do_if>
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
										<do_if value="@$LastKnownDatas.$lastKnowns.{1}">
											<set_value name="Missions_Hunts.$missionHunts_lastKnownTimesByMissionOffers.{$Cue_Mission}" exact="$LastKnownDatas.$lastKnowns.{1}.$time" />
										</do_if>
									</actions>
									<cues>
										<cue name="Mission_Hunt_UpdateMissionDescription2" checktime="player.age + 1s">
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step + ' $Objective_Step_find: ' + $Objective_Step_find" chance="UserSettings.$debugChance_missionHunt" />
												<do_if value="$Cue_Mission.hasmission and $Objective_Step lt $Objective_Step_destroy">
													<debug_text text="$Cue_Mission.$MissionId + ' Mission_Hunt_Beacons.state: ' + Mission_Hunt_Beacons.state" chance="UserSettings.$debugChance_missionHunt" />
													<do_if value="@Mission_Hunt_Beacons.state == cuestate.waiting">
														<signal_cue cue="Mission_Hunt_Beacons" />
													</do_if>
												</do_if>
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_Activated">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_guidance_enabled cue="$Cue_Mission" />
											<event_guidance_disabled cue="$Cue_Mission" />
										</check_any>
										<check_value value="false" />
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="event.name == 'event_guidance_enabled'">
											<do_if value="$Objective_Step == $Objective_Step_find">
												<do_if value="Mission_Hunt_Beacons.state == cuestate.waiting">
													<signal_cue cue="Mission_Hunt_Beacons" />
												</do_if>
											</do_if>
										</do_if>
										<do_else>
											<do_if value="@Mission_Hunt_Beacons_CleanUp.state == cuestate.waiting">
												<signal_cue_instantly cue="Mission_Hunt_Beacons_CleanUp" />
											</do_if>
										</do_else>
										<signal_cue cue="Mission_Hunt_CheckMissionContact" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_ObjectiveBrief">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Objective_Step != $Objective_Step_brief" />
									</conditions>
									<actions>
										<do_if value="$MissionContact_NPC.exists">
											<set_value name="$Objective_Step" exact="$Objective_Step_brief" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
											<set_objective_from_briefing cue="$Cue_Mission" step="$Objective_Step" />
											<reset_cue cue="this" />
										</do_if>
										<do_else>
											<signal_cue_instantly cue="Mission_Hunt_CheckMissionContact" param="table[$callbackOnCreate = Mission_Hunt_ObjectiveBrief]" />
										</do_else>
									</actions>
								</cue>
								<cue name="Mission_Hunt_ObjectiveFind" version="3">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
												<check_value value="event.param3.$text == 'debug em hunt start find'" />
											</check_all>
										</check_any>
										<check_value value="$Objective_Step != $Objective_Step_find" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
										<signal_cue_instantly cue="Mission_Hunt_StartHunting" />
										<set_value name="$Objective_Step" exact="$Objective_Step_find" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
										<set_objective cue="$Cue_Mission" step="$Objective_Step" action="objective.find" group="$beacons_lastKnown" endtime="$timer_find_end" text="$MissionTarget.knownname" />
										<signal_cue cue="Mission_Hunt_CheckMissionContact" />
										<reset_cue cue="this" />
									</actions>
									<patch sinceversion="3" state="waiting">
										<debug_text text="'patch sinceversion 3, state: ' + this.state" />
										<set_objective cue="$Cue_Mission" step="$Objective_Step" action="objective.find" group="$beacons_lastKnown" endtime="$timer_find_end" text="$MissionTarget.knownname" />
									</patch>
								</cue>
								<cue name="Mission_Hunt_ObjectiveIdentify">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Objective_Step_identify" />
										<check_value value="$Objective_Step != $Objective_Step_identify" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
										<signal_cue_instantly cue="Mission_Hunt_StopHunting" />
										<set_value name="$Objective_Step" exact="$Objective_Step_identify" />
										<set_value name="$Objective_Step_identify_success" exact="false" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
										<set_objective_from_briefing cue="$Cue_Mission" step="$Objective_Step" />
										<signal_cue cue="Mission_Hunt_CheckMissionContact" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_ObjectiveDestroy">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Objective_Step != $Objective_Step_destroy" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
										<signal_cue_instantly cue="Mission_Hunt_StopHunting" />
										<run_actions ref="Mission_Hunt_GetBaseRewardData" result="$BaseRewardData">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTargetKills: ' + $BaseRewardData.$reward_forTargetKills" chance="UserSettings.$debugChance_missionHunt" />
										<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTarget: ' + $BaseRewardData.$reward_forTarget" chance="UserSettings.$debugChance_missionHunt" />
										<set_value name="$Objective_Step" exact="$Objective_Step_destroy" />
										<set_value name="$Objective_Step_identify_success" exact="true" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
										<set_objective_from_briefing cue="$Cue_Mission" step="$Objective_Step" />
										<do_if value="Mission_Hunt_EnemyTargets2.state == cuestate.waiting">
											<signal_cue cue="Mission_Hunt_EnemyTargets2" />
										</do_if>
										<signal_cue cue="Mission_Hunt_CheckMissionContact" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_ObjectiveDebrief">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Objective_Step != $Objective_Step_debrief" />
									</conditions>
									<actions>
										<do_if value="$MissionContact_NPC.exists">
											<signal_cue_instantly cue="Mission_Hunt_StopHunting" />
											<set_value name="$Objective_Step" exact="$Objective_Step_debrief" />
											<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
											<set_objective_from_briefing cue="$Cue_Mission" step="$Objective_Step" />
										</do_if>
										<do_else>
											<signal_cue_instantly cue="Mission_Hunt_CheckMissionContact" param="table[$callbackOnCreate = Mission_Hunt_ObjectiveDebrief]" />
										</do_else>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_ObjectiveComplete">
									<conditions>
										<event_cue_signalled />
										<check_value value="$Objective_Step != $Objective_Step_complete" />
									</conditions>
									<actions>
										<signal_cue cue="Mission_Hunt_StopHunting" />
										<set_value name="$Objective_Step" exact="$Objective_Step_complete" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
										<signal_cue cue="Mission_Hunt_Resolve" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_StartHunting">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<do_if value="not $timer_find_end">
											<set_value name="$timer_find_end" exact="player.age + 3h" />
										</do_if>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $timer_find_end: ' + $timer_find_end" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="Mission_Hunt_Beacons.state == cuestate.waiting">
											<signal_cue cue="Mission_Hunt_Beacons" />
										</do_if>
										<!-- <do_if value="Mission_Hunt_TargetFound.state == cuestate.waiting">
											<signal_cue cue="Mission_Hunt_TargetFound" />
										</do_if> -->
										<do_if value="Mission_Hunt_TimeoutStart.state == cuestate.waiting">
											<signal_cue cue="Mission_Hunt_TimeoutStart" />
										</do_if>
										<reset_cue cue="Mission_Hunt_StopHunting" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_StopHunting">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<do_if value="@Mission_Hunt_Beacons_CleanUp.state == cuestate.waiting">
											<signal_cue_instantly cue="Mission_Hunt_Beacons_CleanUp" />
										</do_if>
										<do_if value="Mission_Hunt_TargetFound_20220119.state != cuestate.waiting and @$Mission_Hunt_TargetFound_20220119.exists">
											<reset_cue cue="Mission_Hunt_TargetFound_20220119" />
										</do_if>
										<reset_cue cue="Mission_Hunt_TimeoutStart" />
										<reset_cue cue="Mission_Hunt_StartHunting" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Mission_Hunt_Beacons">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $kEM_lastKnownLocation: ' + $Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$Faction}" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
										<clear_group group="$beacons_lastKnown" />
										<run_actions ref="Mission_Hunt_GetLast3KnownData" result="$LastKnownDatas">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<run_actions ref="Mission_Hunt_GetIdCode" result="$idCode">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $idCode: ' + $idCode" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
										<set_value name="$i" exact="1" />
										<do_for_each name="$lastKnownData_inList" in="$LastKnownDatas.$lastKnowns">
											<create_object name="$beacon" sector="$lastKnownData_inList.$sector" macro="macro.env_deco_nav_beacon_t1_macro" owner="faction.player">
												<position value="$lastKnownData_inList.$position" />
											</create_object>
											<!-- <t id="533">\(Report of %s(idcode), %s(time) ago\)</t> -->
											<set_value name="$name" exact="{11513, 533}.[$idCode, $LastKnownDatas.$lastKnownTexts.{$i}.$time_text]" />
											<set_object_name object="$beacon" page="1001" line="1328" name="$name" />
											<debug_text text="$Cue_Mission.$MissionId + ' $beacon: ' + $beacon + ' (' + $beacon.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
											<add_to_group groupname="$beacons_lastKnown" object="$beacon" />
											<do_if value="$beacons_lastKnown.count == 3">
												<break />
											</do_if>
											<set_value name="$i" exact="$i + 1" />
										</do_for_each>
										<set_value name="$isFromUpdate" exact="false" />
										<debug_text text="$Cue_Mission.$MissionId + ' $LastKnown_Update: ' + $LastKnown_Update" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="$LastKnown_Update">
											<set_value name="$isFromUpdate" exact="true" />
											<!-- <t id="542">(mission notification)Update: New position in %s(sector) %s(time) ago.</t> -->
											<!-- $LastKnown_Update is updated from the mission or from a new reported sighting -->
											<!-- AND LastKnownDatas.$lastKnowns.{1} IS ALWAYS the updated data of $LastKnown_Update -->
											<set_value name="$updateText" exact="{11513, 542}.[$LastKnownDatas.$lastKnowns.{1}.$sector.knownname, $LastKnownDatas.$lastKnownTexts.{1}.$time_text]" />
											<do_if value="$Cue_Mission.$Objective_Step gt $Cue_Mission.$Objective_Step_brief">
												<set_objective cue="$Cue_Mission" step="$Objective_Step" action="objective.custom" customaction="$updateText" group="$beacons_lastKnown" endtime="$timer_find_end" />
											</do_if>
											<do_if value="not $Cue_Mission.hasguidance">
												<show_notification text="$updateText" />
											</do_if>
										</do_if>
										<do_else>
											<set_objective cue="$Cue_Mission" step="$Objective_Step" action="objective.find" group="$beacons_lastKnown" endtime="$timer_find_end" text="$MissionTarget.knownname" />
										</do_else>
										<do_if value="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt">
											<add_to_group groupname="$beacons_lastKnown" object="$MissionTarget" />
										</do_if>
									</actions>
									<cues>
										<cue name="Mission_Hunt_Beacons_CleanUp">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="UserSettings.$debugChance_missionHunt" />
												<do_for_each name="$beacon" in="@$Cue_Mission.$beacons_lastKnown">
													<do_if value="not $beacon.isclass.ship">
														<destroy_object object="$beacon" />
													</do_if>
												</do_for_each>
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Hunt_Beacons_UpdateNames" checktime="player.age + 1min" checkinterval="1min" instantiate="true">
											<actions>
												<debug_text text="''" chance="@md.$kuertee_interval" />
												<run_actions ref="Mission_Hunt_GetLast3KnownData" result="$LastKnownDatas">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
												<run_actions ref="Mission_Hunt_GetIdCode" result="$idCode">
													<param name="Cue_Mission" value="$Cue_Mission" />
												</run_actions>
												<set_value name="$i" exact="1" />
												<do_for_each name="$beacon" in="@$Cue_Mission.$beacons_lastKnown">
													<do_if value="@$LastKnownDatas.$lastKnownTexts.{$i}">
														<!-- <t id="533">\(Report of %s(idcode), %s(time) ago\)</t> -->
														<set_value name="$name" exact="{11513, 533}.[$idCode, $LastKnownDatas.$lastKnownTexts.{$i}.$time_text]" />
														<set_object_name object="$beacon" page="1001" line="1328" name="$name" />
													</do_if>
													<set_value name="$i" exact="$i + 1" />
												</do_for_each>
												<do_if value="$isFromUpdate">
													<set_value name="$isFromUpdate" exact="false" />
													<do_if value="$Objective_Step == $Objective_Step_find">
														<set_objective cue="$Cue_Mission" step="$Objective_Step" action="objective.find" group="$beacons_lastKnown" endtime="$timer_find_end" text="$MissionTarget.knownname" />
													</do_if>
												</do_if>
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_TargetManager">
									<cues>
										<cue name="Mission_Hunt_TargetFound_20220119">
											<conditions>
												<check_any>
													<!-- Event for when an object is pinged by a long range scan. (object = scanned object, param = true iff the result was 'identified') -->
													<event_long_range_scan_ping object="$MissionTarget" />
													<check_all>
														<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
														<event_object_changed_attention object="$MissionTarget" />
														<check_value value="kEMissions.$attentionInZoneAndNearer.indexof.{event.param}" />
														<check_value value="not kEMissions.$attentionInZoneAndNearer.indexof.{event.param2}" />
													</check_all>
													<check_all>
														<!-- Event for the specified object finding an enemy on its Gravidar scanner (object = scanning object, param = enemy) -->
														<event_object_enemy_found group="global.$PlayerOccupiedShipGroup" />
														<check_value value="event.param == $MissionTarget" />
													</check_all>
												</check_any>
												<check_any>
													<check_value value="$Objective_Step == $Objective_Step_find" />
													<check_value value="$Objective_Step == $Objective_Step_destroy" />
												</check_any>
												<check_value value="$Cue_Mission.hasmission" />
											</conditions>
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.object: ' + @event.object + ' (' + @event.object.knownname + ', ' + @event.object.idcode + ') event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance_missionHunt" />
												<set_value name="$Objective_Step_find_success" exact="true" />
												<do_if value="$Objective_Step lt $Objective_Step_destroy">
													<do_if value="@md.kuertee_professions.kProfs">
														<do_if value="$Cue_Mission.hasmission">
															<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
																$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
																$type = md.kuertee_professions.kProfs.$activity_target_found,
																$missionLib = $Cue_Mission.$kProfs_missionLib,
																$faction = $Cue_Mission.$Faction,
															]" />
														</do_if>
													</do_if>
													<do_if value="@md.kuertee_npc_bridge_crew.PlayerStartCaptaincy.state != cuestate.waiting">
														<signal_cue_instantly cue="md.kuertee_npc_bridge_crew.RadarContact" param="table[
															$enemy = $MissionTarget
														]" />
													</do_if>
												</do_if>
												<set_value name="$timer_find_end" exact="player.age + 3h" />
												<set_value name="$IsDisguised" exact="$MissionTarget.coverowner and $MissionTarget.coverowner != $MissionTarget.trueowner" />
												<do_if value="$IsDisguised">
													<signal_cue cue="Mission_Hunt_ObjectiveIdentify" />
												</do_if>
												<do_else>
													<signal_cue cue="Mission_Hunt_ObjectiveDestroy" />
												</do_else>
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Hunt_TargetManager_Scanned">
											<conditions>
												<event_scan_finished scanned="$MissionTarget"/>
												<check_value value="$Objective_Step_identify" />
												<check_value value="$Objective_Step == $Objective_Step_identify" />
											</conditions>
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.object: ' + @event.object + ' (' + @event.object.knownname + ', ' + @event.object.idcode + ') event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance_missionHunt" />
												<do_if value="@md.kuertee_professions.kProfs">
													<do_if value="$Cue_Mission.hasmission">
														<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
															$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
															$type = md.kuertee_professions.kProfs.$activity_target_scanned,
															$missionLib = $Cue_Mission.$kProfs_missionLib,
															$faction = $Cue_Mission.$Faction,
														]" />
													</do_if>
												</do_if>
												<set_cover_owner object="$MissionTarget" faction="null" />
												<set_value name="$OpposingFaction" exact="$MissionTarget.trueowner" />
												<signal_cue cue="Mission_Hunt_ObjectiveDestroy" />
												<!-- <reset_cue cue="this" /> -->
											</actions>
											<cues>
												<cue name="Mission_Hunt_TargetManager_Scanned_GetActiveMission">
													<conditions>
														<event_ui_triggered screen="'kEM'" />
														<check_value value="event.param2 == 'get_active_mission'" />
													</conditions>
													<actions>
														<set_value name="$activeMission" exact="event.param3" />
														<do_if value="$activeMission == @md.kuertee_ship_scanner.ShipScanningSession">
															<signal_cue cue="md.kuertee_ship_scanner.RemoveShipScnrMission" />
															<activate_mission cue="$Cue_Mission" />
														</do_if>
														<do_else>
															<reset_cue cue="parent" />
															<reset_cue cue="this" />
														</do_else>
													</actions>
													<cues>
														<cue name="Mission_Hunt_TargetManager_Scanned_GetActiveMission_SetTarget">
															<actions>
																<raise_lua_event name="'kEM_set_target'" param="$MissionTarget" />
																<reset_cue cue="Mission_Hunt_TargetManager_Scanned" />
																<reset_cue cue="parent" />
																<cancel_cue cue="this" />
															</actions>
														</cue>
													</cues>
												</cue>
												<cue name="Mission_Hunt_TargetManager_Scanned_RunOnce" checktime="player.age + 0.125s">
													<actions>
														<raise_lua_event name="'kEM_get_active_mission'" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
										<cue name="Mission_Hunt_LongRangeScan">
											<conditions>
												<event_long_range_scan_sent group="global.$PlayerOccupiedShipGroup" />
												<check_value value="$Cue_Mission.hasmission" />
											</conditions>
											<actions>
												<do_for_each name="$beacon" in="@$Cue_Mission.$beacons_lastKnown">
													<!-- <do_if value="player.occupiedship.distanceto.{$beacon} lt 100km"> -->
													<do_if value="$beacon.sector == player.sector">
														<do_if value="@md.kuertee_professions.kProfs">
															<do_if value="$Cue_Mission.hasmission">
																<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
																	$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
																	$type = md.kuertee_professions.kProfs.$activity_location_investigated,
																	$missionLib = $Cue_Mission.$kProfs_missionLib,
																	$faction = $Cue_Mission.$Faction,
																]" />
															</do_if>
															<break />
														</do_if>
													</do_if>
												</do_for_each>
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Hunt_TargetManager_UpdateLastKnownFromReport">
											<conditions>
												<check_any>
													<check_all>
														<event_object_signalled object="$MissionTarget.pilot" param="'kEM_Bounties_UpdateLastKnown'" />
														<check_value value="event.param2.$faction == $Faction" />
													</check_all>
													<check_all>
														<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
														<check_value value="event.param3.$text == 'debug em hunt update texts'" />
													</check_all>
												</check_any>
											</conditions>
											<actions>
												<!-- <debug_text text="event.param3.$text" /> -->
												<set_value name="$isLastKnwonNew" exact="true" />
												<set_value name="$LastKnown_Update" exact="$MissionTarget.pilot.$kEM_lastKnownLocation.{$Faction}.{1}" />
												<signal_cue cue="Mission_Hunt_UpdateMissionDescription" />
												<do_if value="$Cue_Mission.hasguidance and UserSettings.$debugChance_missionHunt">
													<!-- <open_menu menu="OptionsMenu" param="'profile_load'"/> -->
													<open_menu menu="OptionsMenu" />
												</do_if>
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Hunt_TargetManager_Attacked" instantiate="true">
											<conditions>
												<!-- Event for the specified object being attacked (object = attacked object, param = attacker, param2 = kill method, param3 = attacked component) -->
												<event_object_attacked object="$MissionTarget" />
												<check_value value="$Cue_Mission.hasmission" />
											</conditions>
											<actions>
												<do_if value="$Cue_Mission.hasmission">
													<do_if value="event.param.isplayerowned">
														<set_value name="$isTargetAttackedByPlayer" exact="true" />
														<do_if value="not @$Cue_Mission.$isAlreadyAttacked">
															<set_value name="$Cue_Mission.$isAlreadyAttacked" exact="true" />
															<do_if value="@md.kuertee_professions.kProfs">
																<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
																	$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
																	$type = md.kuertee_professions.kProfs.$activity_target_attacked,
																	$missionLib = $Cue_Mission.$kProfs_missionLib,
																	$faction = $Cue_Mission.$Faction,
																]" />
															</do_if>
														</do_if>
													</do_if>
												</do_if>
												<cancel_cue cue="this" />
											</actions>
										</cue>
										<cue name="Mission_Hunt_TargetManager_Destroyed">
											<conditions>
												<check_any>
													<event_object_destroyed object="$MissionTarget" />
													<!-- Event for the specified object being abandoned by its NPCs (object = abandoned object) -->
													<event_object_abandoned object="$MissionTarget" />
												</check_any>
											</conditions>
											<actions>
												<!-- unnecessary. uses mission completion to tag this activity instead. -->
												<!-- <do_if value="@md.kuertee_professions.kProfs">
													<do_if value="$Cue_Mission.hasmission">
														<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
															$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
															$type = md.kuertee_professions.kProfs.$activity_target_destroyed,
															$missionLib = $Cue_Mission.$kProfs_missionLib,
															$faction = $Cue_Mission.$Faction,
														]" />
													</do_if>
												</do_if> -->
												<do_if value="not $Cue_Mission.hasmission">
													<signal_cue cue="Mission_Hunt_CleanUp" />
												</do_if>
												<do_elseif value="not $isTargetAttackedByPlayer">
													<signal_cue cue="Mission_Hunt_ObjectiveComplete" />
													<signal_cue cue="Mission_Hunt_CleanUp" />
												</do_elseif>
												<do_elseif value="$Objective_Step le $Objective_Step_brief">
													<signal_cue cue="Mission_Hunt_ObjectiveComplete" />
													<signal_cue cue="Mission_Hunt_CleanUp" />
												</do_elseif>
												<do_else>
													<set_value name="$Objective_Step_destroy_success" exact="true" />
													<signal_cue cue="Mission_Hunt_ObjectiveDebrief" />
												</do_else>
												<cancel_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_TimeoutStart">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age + ' $timer_find_end: ' + $timer_find_end" chance="UserSettings.$debugChance_missionHunt" />
									</actions>
									<cues>
										<cue name="Mission_Hunt_Timeout" checktime="$timer_find_end">
											<actions>
												<debug_text text="$Cue_Mission.$MissionId + ' player.age: ' + player.age" chance="UserSettings.$debugChance_missionHunt" />
												<signal_cue cue="Mission_Hunt_ObjectiveComplete" />
												<signal_cue cue="Mission_Hunt_CleanUp" />
												<cancel_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_MissionContact_OnCreate">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$MissionContact_NPC" exact="event.param.$actor" />
										<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_NPC: ' + $MissionContact_NPC + ' (' + $MissionContact_NPC.knownname + ')'" chance="UserSettings.$debugChance_missionHunt" />
										<set_value name="$MissionContact_Container" exact="event.param.$container" />
										<set_value name="$MissionContact_Interior" exact="event.param.$interior" />
										<do_if value="(not $Cue_Mission.hasmission) and $Cue_Mission.$Objective_Step lt $Objective_Step_complete">
											<signal_cue_instantly cue="Mission_Hunt_CreateMission" />
											<do_if value="kEMissions.$IsSWIExists">
												<signal_cue_instantly cue="Mission_Hunt_ObjectiveFind" />
											</do_if>
											<do_else>
												<signal_cue_instantly cue="Mission_Hunt_ObjectiveBrief" />
											</do_else>
											<reset_cue cue="Mission_Hunt_Convo_Start" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
									<cues>
										<cue name="Mission_Hunt_MissionContact_OnCreate2">
											<actions>
												<signal_cue cue="Mission_Hunt_Convo_Start" />
												<do_if value="@$MissionContact_OnCreateCallback">
													<signal_cue cue="$MissionContact_OnCreateCallback" />
													<set_value name="$MissionContact_OnCreateCallback" exact="null" />
												</do_if>
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_MissionContact_TryAgain">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$MissionContact_Tries" exact="$MissionContact_Tries + 1" />
										<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_Tries: ' + $MissionContact_Tries" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="$MissionContact_Tries lt 3">
											<reset_cue cue="Mission_Hunt_MissionContact_Generate" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
									<cues>
										<cue name="Mission_Hunt_MissionContact_TryAgain2">
											<actions>
												<signal_cue cue="Mission_Hunt_MissionContact_Generate" />
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_MissionContact_Generate">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param" chance="UserSettings.$debugChance_missionHunt" />
									</actions>
									<cues>
										<cue name="Mission_Hunt_MissionContact_20220121" ref="MissionNPC">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Ship" value="$MissionOffer_Station" />
											<param name="Actor" value="$MissionContact_NPC" />
											<param name="Cue_OnCreate" value="Mission_Hunt_MissionContact_OnCreate" />
											<param name="Cue_OnDestroy" value="Mission_Hunt_MissionContact_TryAgain" />
											<param name="Cue_OnFail" value="Mission_Hunt_MissionContact_TryAgain" />
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_Convo_Start">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param" chance="UserSettings.$debugChance_missionHunt" />
									</actions>
									<cues>
										<cue name="Mission_Hunt_Convo_v2">
											<conditions>
												<check_any>
													<event_cue_signalled />
													<event_conversation_started actor="$MissionContact_NPC" />
												</check_any>
												<check_value value="$Cue_Mission.hasmission" />
											</conditions>
											<actions>
												<set_value name="$cue_convoSelected" exact="null" />
												<do_if value="event.name == 'event_cue_signalled' or (not @md.ExtendedConversationMenu.Main.exists)">
													<add_player_choice text="$mission_name" section="kEMissions_hunt" choiceparam="$Cue_Mission" />
												</do_if>
												<do_elseif value="@md.ExtendedConversationMenu.Main.exists">
													<!-- <set_value name="md.ExtendedConversationMenu.Main.$convOptions.$kProfs_guildMember" exact="table[
														$signalCue = Guilds_ConvoStart,
														$params = table[$npc = $npc]
													]" /> -->
													<set_value
														name="md.ExtendedConversationMenu.Main.$convOptions.{'$' + $MissionId}"
														exact="table[$signalCue = Mission_Hunt_Convo_v2]
													" />
													<reset_cue cue="this" />
												</do_elseif>
											</actions>
											<cues>
												<cue name="Mission_Hunt_ConvoNextSection_v2">
													<conditions>
														<!-- Event for when the next section in a conversation is triggered (object = actor (entity or list containing context and template), param = section name, param2 = choice parameter) -->
														<event_conversation_next_section section="kEMissions_hunt" />
														<check_value value="event.param2 == $Cue_Mission" />
													</conditions>
													<actions>
														<debug_text text="$Cue_Mission.$MissionId + ' event.param: ' + event.param" chance="UserSettings.$debugChance_missionHunt" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param2: ' + event.param2" chance="UserSettings.$debugChance_missionHunt" />
														<debug_text text="$Cue_Mission.$MissionId + ' event.param == $Cue_Mission? ' + (event.param == $Cue_Mission) + ' event.param2 == $Cue_Mission? ' + (event.param2 == $Cue_Mission)" chance="UserSettings.$debugChance_missionHunt" />
														<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + $Objective_Step" chance="UserSettings.$debugChance_missionHunt" />
														<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_brief: ' + $Objective_Step_brief" chance="UserSettings.$debugChance_missionHunt" />
														<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step_debrief: ' + $Objective_Step_debrief" chance="UserSettings.$debugChance_missionHunt" />
														<do_if value="$Objective_Step == $Objective_Step_brief">
															<signal_cue cue="Mission_Hunt_ObjectiveFind" />
														</do_if>
														<do_elseif value="$Objective_Step == $Objective_Step_debrief">
															<signal_cue cue="Mission_Hunt_ObjectiveComplete" />
														</do_elseif>
													</actions>
													<cues>
														<cue name="Mission_Hunt_ConvoNextSection2_v2">
															<actions>
																<set_value name="$cue_convoSelected" exact="$Cue_Mission" />
																<open_conversation_menu menu="MissionBriefingMenu" param="[0, 0, $Cue_Mission, false]" />
																<reset_cue cue="parent" />
																<cancel_cue cue="this" />
															</actions>
														</cue>
													</cues>
												</cue>
												<cue name="Mission_Hunt_BriefingClose_v2">
													<conditions>
														<!-- Event for when a conversation is finished (object = actor (entity or list containing context and template), param = outcome, param2 = outcome parameter) -->
														<event_conversation_finished />
													</conditions>
													<actions>
														<debug_text text="$Cue_Mission.$MissionId + ' event.param == $Cue_Mission? ' + (event.param == $Cue_Mission) + ' event.param2 == $Cue_Mission? ' + (event.param2 == $Cue_Mission)" chance="UserSettings.$debugChance_missionHunt" />
														<do_if value="$cue_convoSelected == $Cue_Mission">
															<do_if value="$Objective_Step == $Objective_Step_complete">
																<signal_cue cue="Mission_Hunt_CleanUp" />
															</do_if>
														</do_if>
														<reset_cue cue="parent" />
														<reset_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_CheckMissionContact">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_game_loaded />
										</check_any>
										<check_value value="$Cue_Mission.hasmission" />
									</conditions>
									<actions>
										<!-- <debug_text text="'$Cue_Mission.hasmissionoffer: ' + @$Cue_Mission.hasmissionoffer" /> -->
										<!-- <debug_text text="'$Cue_Mission.hasmission: ' + @$Cue_Mission.hasmission" /> -->
										<!-- <debug_text text="'$Mission_Hunt_MissionContact_20220121.state: ' + @$Mission_Hunt_MissionContact_20220121.state" /> -->
										<!-- <debug_text text="'$MissionContact_NPC: ' + @$MissionContact_NPC + ' ' + @$MissionContact_NPC.name" /> -->
										<!-- <debug_text text="'$MissionContact_NPC.room: ' + @$MissionContact_NPC.room + ' ' + @$MissionContact_NPC.room.name" /> -->
										<do_if value="
											(not $MissionContact_NPC.exists) or
											(not $MissionContact_NPC.room)
										">
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionContact_NPC: ' + @$MissionContact_NPC.name + ' exists: '  + @$MissionContact_NPC.exists + ' room: '  + @$MissionContact_NPC.room" />
											<do_if value="event.name == 'event_game_loaded'">
												<set_value name="kEMissions.$debugChance_missionHunt" exact="100" />
											</do_if>
											<do_if value="@event.param.$callbackOnCreate">
												<set_value name="$MissionContact_OnCreateCallback" exact="@event.param.$callbackOnCreate" />
											</do_if>
											<do_elseif value="$Objective_Step == $Objective_Step_brief">
												<set_value name="$MissionContact_OnCreateCallback" exact="Mission_Hunt_ObjectiveBrief" />
											</do_elseif>
											<do_elseif value="$Objective_Step == $Objective_Step_debrief">
												<set_value name="$MissionContact_OnCreateCallback" exact="Mission_Hunt_ObjectiveDebrief" />
											</do_elseif>
											<do_else>
												<set_value name="$MissionContact_OnCreateCallback" exact="null" />
											</do_else>
											<set_value name="$MissionContact_Tries" exact="0" />
											<signal_cue cue="Mission_Hunt_MissionContact_TryAgain" />
										</do_if>
										<do_elseif value="@event.param.$callbackOnCreate">
											<signal_cue cue="event.param.$callbackOnCreate" />
											<reset_cue cue="this" />
										</do_elseif>
									</actions>
									<cues>
										<cue name="Mission_Hunt_CheckMissionContact2" checktime="10s">
											<actions>
												<set_value name="kEMissions.$debugChance_missionHunt" exact="0" />
												<reset_cue cue="parent" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Mission_Hunt_UpdateLastKnownsFromOtherMission">
									<conditions>
										<event_ui_triggered screen="'kEM'" />
										<check_value value="event.param2 == 'update_data_from_missionid'" />
										<check_value value="$Cue_Mission.hasmission" />
										<check_value value="@event.param3.$MissionTarget == $MissionTarget" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.object: ' + @event.object + ' (' + @event.object.knownname + ', ' + @event.object.idcode + ') event.param: ' + @event.param + ' event.param2: ' + @event.param2" chance="UserSettings.$debugChance_missionHunt" />
										<set_value name="$cue_updateFrom" exact="null" />
										<set_value name="$faction_updateFrom" exact="null" />
										<do_if value="event.name == 'event_ui_triggered' and event.param2 == 'update_data_from_missionid'">
											<set_value name="$cue_updateFrom" exact="event.param3" />
										</do_if>
										<do_if value="$cue_updateFrom">
											<debug_text text="$Cue_Mission.$MissionId + ' $cue_updateFrom.$MissionId: ' + $cue_updateFrom.$MissionId" chance="UserSettings.$debugChance_missionHunt" />
											<set_value name="$faction_updateFrom" exact="$cue_updateFrom.$Faction" />
										</do_if>
										<do_if value="$faction_updateFrom">
											<debug_text text="$Cue_Mission.$MissionId + ' $faction_updateFrom: ' + $faction_updateFrom" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $MissionTarget: ' + $MissionTarget" chance="UserSettings.$debugChance_missionHunt" />
											<debug_text text="$Cue_Mission.$MissionId + ' $cue_updateFrom.$MissionTarget: ' + $cue_updateFrom.$MissionTarget" chance="UserSettings.$debugChance_missionHunt" />
											<set_value name="$time_best" exact="$LastKnownDatas.$lastKnowns.{1}.$time" />
											<debug_text text="$Cue_Mission.$MissionId + ' $time_best: ' + $time_best" chance="UserSettings.$debugChance_missionHunt" />
											<do_if value="$MissionTarget == $cue_updateFrom.$MissionTarget">
												<do_if value="@md.kuertee_professions.kProfs">
													<do_if value="$Cue_Mission.hasmission">
														<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
															$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
															$type = md.kuertee_professions.kProfs.$activity_location_investigated,
															$missionLib = $Cue_Mission.$kProfs_missionLib,
															$faction = $Cue_Mission.$Faction,
														]" />
													</do_if>
												</do_if>
												<do_if value="$Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$faction_updateFrom}">
													<do_for_each name="$lastKnownData" in="$Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$faction_updateFrom}">
														<debug_text text="$Cue_Mission.$MissionId + ' $lastKnownData.$time: ' + $lastKnownData.$time" chance="UserSettings.$debugChance_missionHunt" />
														<do_if value="$lastKnownData.$time gt $time_best">
															<set_value name="$LastKnown_Update" exact="$lastKnownData" />
															<debug_text text="$Cue_Mission.$MissionId + ' $LastKnown_Update: ' + $LastKnown_Update" chance="UserSettings.$debugChance_missionHunt" />
															<break />
														</do_if>
													</do_for_each>
												</do_if>
												<signal_cue cue="Mission_Hunt_UpdateMissionDescription" />
												<raise_lua_event name="'kEM_update_data_from_other_mission_done'" />
											</do_if>
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="Missions_Hunts_DebugChance">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_value value="event.param3.$text == 'debug em hunt limiter'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="event.param3" />
								<do_if value="event.param3.$text == 'debug em hunt limiter'">
									<debug_text text="Missions_Hunts.$missionTimes" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<library name="Mission_Hunt_GetBaseRewardData" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$reward_forTargetKills" exact="0" />
								<do_if value="@$Cue_Mission.$MissionTarget.pilot.$kEM_kills.{$Cue_Mission.$Faction}.keys.list">
									<do_for_each name="$class" in="@$Cue_Mission.$MissionTarget.pilot.$kEM_kills.{$Cue_Mission.$Faction}.keys.list">
										<set_value name="$kills" exact="$Cue_Mission.$MissionTarget.pilot.$kEM_kills.{$Cue_Mission.$Faction}.{$class}" />
										<do_if value="$kills">
											<run_actions ref="GetRewardDataForClassKill" result="$rewardDataForClassKill">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="Faction" value="$Cue_Mission.$Faction" />
												<param name="Class" value="$class" />
											</run_actions>
											<debug_text text="$Cue_Mission.$MissionId + ' $class: ' + $class + ' $kills: ' + $kills + ' $reward_forTargetKills: ' + $rewardDataForClassKill.$reward" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
											<set_value name="$reward_forTargetKills" exact="($reward_forTargetKills)f + ($rewardDataForClassKill.$reward)f * $kills" />
										</do_if>
									</do_for_each>
									<set_value name="$reward_forTargetKills" exact="(($reward_forTargetKills)f * 0.5)ct" />
								</do_if>
								<do_else>
									<set_value name="$reward_forTargetKills" exact="($Cue_Mission.$BaseRewardData.$reward_forTargetKills)f * 1ct" />
								</do_else>
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTargetKills: ' + $reward_forTargetKills" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
								<set_value name="$class_target" exact="class.ship_s" />
								<do_if value="$Cue_Mission.$MissionTarget.isclass.[class.ship_xs, class.ship_s]">
									<set_value name="$class_target" exact="class.ship_s" />
								</do_if>
								<do_elseif value="$Cue_Mission.$MissionTarget.isclass.ship_m">
									<set_value name="$class_target" exact="class.ship_m" />
								</do_elseif>
								<do_elseif value="$Cue_Mission.$MissionTarget.isclass.ship_l">
									<set_value name="$class_target" exact="class.ship_l" />
								</do_elseif>
								<do_elseif value="$Cue_Mission.$MissionTarget.isclass.ship_xl">
									<set_value name="$class_target" exact="class.ship_xl" />
								</do_elseif>
								<run_actions ref="GetRewardDataForClassKill" result="$rewardDataForClassKill">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Faction" value="$Cue_Mission.$Faction" />
									<param name="Class" value="$class_target" />
								</run_actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $class_target: ' + $class_target + ' $reward: ' + $rewardDataForClassKill.$reward" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
								<set_value name="$reward_forTarget" exact="($rewardDataForClassKill.$reward)f * 1ct" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_forTargetKills: ' + $reward_forTargetKills + ' $reward_forTarget: ' + $reward_forTarget" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
								<return value="table[
									$reward_forTargetKills = $reward_forTargetKills,
									$reward_forTarget = $reward_forTarget
								]" />
							</actions>
						</library>
						<library name="Mission_Hunt_GetMissionTexts" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="IsWriteToLog" default="false" />
							</params>
							<actions>
								<set_value name="$LastKnownDatas" exact="@$Cue_Mission.$LastKnownDatas" />
								<set_value name="$LastKnown_Update" exact="@$Cue_Mission.$LastKnown_Update" />
								<set_value name="$TargetKillsDescription" exact="@$Cue_Mission.$TargetKillsDescription" />
								<set_value name="$BaseRewardData" exact="@$Cue_Mission.$BaseRewardData" />
								<set_value name="$PlayerDamageAndKillsData" exact="@$Cue_Mission.$PlayerDamageAndKillsData" />
								<set_value name="$RewardCr" exact="@$Cue_Mission.$RewardCr" />
								<!-- <t id="496">Total reward: %s.</t> -->
								<!-- <t id="501">(title)Search And Destroy \(%s(ship)\)</t>
								<t id="502">(description)Search for then destroy %s(ship).</t>
								<t id="511">To complete the mission, ensure that %s(ship) is destroyed.</t>
								<t id="512">Note that %s(faction) will not retaliate against your attacks on %s(ship).</t>
								<t id="521">You will be rewarded %s(base reward) and for the amount of damage you inflict on %s(ship).</t>
								<t id="531">%s(ship) was last reported at %s(position) in %s(sector) %s(time) ago. We will update you of new reports.</t>
								<t id="532">%s(ship)'s kills are: %s(kill list)</t>
								<t id="533">\(Report of %s(idcode), %s(time) ago\)</t>
								<t id="541">Update: New position: %s(position) in %s(sector) %s(time) ago.</t>
								<t id="529">Search And Destroy</t>
								<t id="571">You contributed no damage to the destruction of %s(ship).</t>
								<t id="572">%s(ship) is still operational.</t>
								<t id="573">Reward for %s(ship) kills: %s(reward).</t>
								<t id="574">Reward %s(ship) destruction: %s(reward).</t> -->
								<!-- <t id="575">You failed to find %s(ship).</t>
								<t id="576">You failed to confirm the identity of %s(ship).</t> -->
								<!-- <t id="491">Operation results:</t> -->
								<!-- <t id="577">You failed to damage %s(ship).</t> -->
								<set_value name="$name" exact="{11513, 501}.[$Cue_Mission.$MissionTarget_name]" />
								<set_value name="$name_short" exact="{11513, 529}" />
								<set_value name="$lines" exact="[]" />
								<set_value name="$lines_logBook" exact="[]" />
								<append_to_list name="$lines" exact="{11513, 502}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
								<do_if value="$Cue_Mission.$Objective_Step lt $Cue_Mission.$Objective_Step_complete">
									<!-- mission offer, and briefing -->
									<append_to_list name="$lines" exact="{11513, 511}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
									<do_if value="@$LastKnownDatas.$lastKnowns.count">
										<debug_text text="$Cue_Mission.$MissionId + ' $LastKnownDatas.$lastKnowns.{1}: ' + @$LastKnownDatas.$lastKnowns.{1}" chance="UserSettings.$debugChance_missionHunt" />
										<debug_text text="$Cue_Mission.$MissionId + ' $LastKnown_Update: ' + @$LastKnown_Update" chance="UserSettings.$debugChance_missionHunt" />
										<set_value name="$isUpdated" exact="@$LastKnownDatas.$lastKnowns.{1}.$time == @$LastKnown_Update.$time" />
										<debug_text text="$Cue_Mission.$MissionId + ' $isUpdated: ' + $isUpdated" chance="UserSettings.$debugChance_missionHunt" />
										<do_if value="$isUpdated and $LastKnownDatas.$lastKnowns.count gt 1">
											<append_to_list name="$lines" exact="{11513, 541}.[$LastKnownDatas.$lastKnowns.{1}.$position_text, $LastKnownDatas.$lastKnowns.{1}.$sector.knownname, $LastKnownDatas.$lastKnownTexts.{1}.$time_text] + '\n\n'" />
											<append_to_list name="$lines" exact="{11513, 531}.[$Cue_Mission.$MissionTarget_name, $LastKnownDatas.$lastKnowns.{2}.$position_text, $LastKnownDatas.$lastKnowns.{2}.$sector.knownname, $LastKnownDatas.$lastKnownTexts.{2}.$time_text] + '\n\n'" />
										</do_if>
										<do_else>
											<append_to_list name="$lines" exact="{11513, 531}.[$Cue_Mission.$MissionTarget_name, $LastKnownDatas.$lastKnowns.{1}.$position_text, $LastKnownDatas.$lastKnowns.{1}.$sector.knownname, $LastKnownDatas.$lastKnownTexts.{1}.$time_text] + '\n\n'" />
										</do_else>
									</do_if>
									<append_to_list name="$lines" exact="{11513, 532}.[$Cue_Mission.$MissionTarget_name, $TargetKillsDescription] + '\n\n'" />
									<append_to_list name="$lines" exact="{11513, 521}.[$BaseRewardData.$reward_forTargetKills.formatted.{'%.s %Cr'}, $Cue_Mission.$MissionTarget_name, $BaseRewardData.$reward_forTarget.formatted.{'%.s %Cr'}] + '\n\n'" />
									<do_if value="@$Cue_Mission.$MissionTarget.assignedaipilot.$kProfs_isSanctioned_partial or @$Cue_Mission.$MissionTarget.assignedaipilot.$kProfs_isSanctioned_full">
										<append_to_list name="$lines" exact="{11513, 512}.[$Cue_Mission.$MissionTarget.owner, $Cue_Mission.$MissionTarget_name]" />
									</do_if>
								</do_if>
								<do_else>
									<!-- mission end -->
									<append_to_list name="$lines" exact="{11513, 532}.[$Cue_Mission.$MissionTarget_name, $TargetKillsDescription] + '\n'" />
									<append_to_list name="$lines" exact="{11513, 491}.[$Cue_Mission.$MissionTarget_name] + '\n'" />
									<do_if value="$Cue_Mission.$Result == $Cue_Mission.$Result_success">
										<append_to_list name="$lines" exact="$PlayerDamageAndKillsData.$description_damageAndKillsByMacro + '\n\n'" />
										<append_to_list name="$lines" exact="{11513, 573}.[$Cue_Mission.$MissionTarget_name, $Cue_Mission.$BaseRewardData.$reward_forTargetKills.formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines" exact="{11513, 574}.[$Cue_Mission.$MissionTarget_name, $Cue_Mission.$BaseRewardData.$reward_forTarget.formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines" exact="{11513, 496}.[$RewardCr.formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines_logBook" exact="{11513, 573}.[$Cue_Mission.$MissionTarget_name, $Cue_Mission.$BaseRewardData.$reward_forTargetKills.formatted.{'%.s %Cr'}]" />
										<append_to_list name="$lines_logBook" exact="$PlayerDamageAndKillsData.$description_damageAndKillsByClass" />
										<append_to_list name="$lines_logBook" exact="{11513, 574}.[$Cue_Mission.$MissionTarget_name, $Cue_Mission.$BaseRewardData.$reward_forTarget.formatted.{'%.s %Cr'}]" />
										<append_to_list name="$lines_logBook" exact="{11513, 496}.[$RewardCr.formatted.{'%.s %Cr'}]" />
									</do_if>
									<do_elseif value="not @$Cue_Mission.$Objective_Step_find_success">
										<append_to_list name="$lines" exact="{11513, 575}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
										<append_to_list name="$lines" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines_logBook" exact="{11513, 575}.[$Cue_Mission.$MissionTarget_name]" />
										<append_to_list name="$lines_logBook" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}]" />
									</do_elseif>
									<do_elseif value="not @$Cue_Mission.$Objective_Step_identify_success">
										<append_to_list name="$lines" exact="{11513, 576}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
										<append_to_list name="$lines" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines_logBook" exact="{11513, 576}.[$Cue_Mission.$MissionTarget_name]" />
										<append_to_list name="$lines_logBook" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}]" />
									</do_elseif>
									<do_elseif value="not @$Cue_Mission.$Objective_Step_destroy_success">
										<append_to_list name="$lines" exact="{11513, 572}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
										<append_to_list name="$lines" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines_logBook" exact="{11513, 572}.[$Cue_Mission.$MissionTarget_name]" />
										<append_to_list name="$lines_logBook" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}]" />
									</do_elseif>
									<do_else>
										<append_to_list name="$lines" exact="$PlayerDamageAndKillsData.$description_damageAndKillsByMacro + '\n'" />
										<append_to_list name="$lines" exact="{11513, 577}.[$Cue_Mission.$MissionTarget_name] + '\n\n'" />
										<append_to_list name="$lines" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}] + '\n'" />
										<append_to_list name="$lines_logBook" exact="{11513, 577}.[$Cue_Mission.$MissionTarget_name]" />
										<append_to_list name="$lines_logBook" exact="{11513, 496}.[(0ct).formatted.{'%.s %Cr'}]" />
									</do_else>
								</do_else>
								<set_value name="$description" exact="''" />
								<run_actions ref="ConcactenateItems" result="$description">
									<param name="List" value="$lines" />
									<param name="Delimiter" value="''" />
								</run_actions>
								<do_if value="$IsWriteToLog">
									<run_actions ref="WriteToLogBook">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="Lines" value="$lines_logBook" />
									</run_actions>
								</do_if>
								<!-- <t id="503">(reward text)Reward: %s(base) + upto %s(bonus)</t> -->
								<set_value name="$rewardText" exact="{11513, 503}.[$BaseRewardData.$reward_forTargetKills.formatted.{'%.s %Cr'}, $BaseRewardData.$reward_forTarget.formatted.{'%.s %Cr'}]" />
								<do_if value="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt">
									<set_value name="$description" exact="$Cue_Mission.$MissionId + '\n\n' + $description" />
								</do_if>
								<return value="table[
									$name = $name,
									$name_short = $name_short,
									$description = $description,
									$rewardText = $rewardText
								]" />
							</actions>
						</library>
						<library name="Mission_Hunt_GetLast3KnownData" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$lastKnownDatas" exact="[]" />
								<set_value name="$lastKnownTexts" exact="[]" />
								<set_value name="$lastKnownList" exact="[]" />
								<do_for_each name="$faction_inList" in="[faction.player, $Cue_Mission.$Faction]">
									<set_value name="$count" exact="0" />
									<do_if value="@$Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$faction_inList}">
										<do_for_each name="$lastKnownData" in="$Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$faction_inList}">
											<run_actions ref="Mission_Hunt_SetLastKnownTexts" result="$texts">
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="LastKnownData" value="$lastKnownData" />
											</run_actions>
											<debug_text text="$Cue_Mission.$MissionId + ' $texts: ' + $texts" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
											<!-- <append_to_list name="$lastKnownDatas" exact="$lastKnownData" />
											<append_to_list name="$lastKnownTexts" exact="$texts" /> -->
											<append_to_list name="$lastKnownList" exact="table[$time = $lastKnownData.$time, $lastKnownData = $lastKnownData, $lastKnownTexts = $texts]" />
											<set_value name="$count" exact="$count + 1" />
											<do_if value="$count ge 3">
												<break />
											</do_if>
										</do_for_each>
										<do_if value="$count lt 3">
											<set_value name="$lastKnownDataPrimary" exact="$Cue_Mission.$MissionTarget.pilot.$kEM_lastKnownLocation.{$faction_inList}.{1}" />
											<do_for_each name="$lastKnownData" in="$lastKnownDataPrimary.$otherPosInArea">
												<run_actions ref="Mission_Hunt_SetLastKnownTexts" result="$texts">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="LastKnownData" value="$lastKnownData" />
												</run_actions>
												<debug_text text="$Cue_Mission.$MissionId + ' $texts: ' + $texts" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
												<!-- <append_to_list name="$lastKnownDatas" exact="$lastKnownData" />
												<append_to_list name="$lastKnownTexts" exact="$texts" /> -->
												<append_to_list name="$lastKnownList" exact="table[$time = $lastKnownData.$time, $lastKnownData = $lastKnownData, $lastKnownTexts = $texts]" />
												<set_value name="$count" exact="$count + 1" />
												<do_if value="$count ge 3">
													<break />
												</do_if>
											</do_for_each>
										</do_if>
									</do_if>
								</do_for_each>
								<do_if value="@$Cue_Mission.$LastKnown_Update">
									<run_actions ref="Mission_Hunt_SetLastKnownTexts" result="$texts">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="LastKnownData" value="$Cue_Mission.$LastKnown_Update" />
									</run_actions>
									<debug_text text="$Cue_Mission.$MissionId + ' $texts: ' + $texts" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
									<append_to_list name="$lastKnownList" exact="table[$time = $Cue_Mission.$LastKnown_Update.$time, $lastKnownData = $Cue_Mission.$LastKnown_Update, $lastKnownTexts = $texts]" />
								</do_if>
								<sort_list list="$lastKnownList" sortbyvalue="loop.element.$time" sortdescending="true" />
								<!-- start: nav near each other -->
								<set_value name="$lastKnownList_oks" exact="[]" />
								<set_value name="$lastKnownItem_previousItem" exact="null" />
								<do_for_each name="$lastKnownItem" in="$lastKnownList">
									<do_if value="not $lastKnownList_oks.count">
										<set_value name="$lastKnownItem_previousItem" exact="$lastKnownItem" />
										<append_to_list name="$lastKnownList_oks" exact="$lastKnownItem" />
									</do_if>
									<do_else>
										<create_position name="$pos_previousItem" space="$lastKnownItem_previousItem.$lastKnownData.$sector" value="$lastKnownItem_previousItem.$lastKnownData.$position" />
										<create_position name="$pos_thisItem" space="$lastKnownItem.$lastKnownData.$sector" value="$lastKnownItem.$lastKnownData.$position" />
										<do_if value="$pos_previousItem.distanceto.{$pos_thisItem} gt 10km">
											<set_value name="$lastKnownItem_previousItem" exact="$lastKnownItem" />
											<append_to_list name="$lastKnownList_oks" exact="$lastKnownItem" />
										</do_if>
									</do_else>
								</do_for_each>
								<!-- end: remove too close -->
								<do_if value="$lastKnownList_oks.count gt 3">
									<resize_list list="$lastKnownList_oks" count="3" />
								</do_if>
								<do_for_each name="$lastKnownItem" in="$lastKnownList_oks">
									<append_to_list name="$lastKnownDatas" exact="$lastKnownItem.$lastKnownData" />
									<append_to_list name="$lastKnownTexts" exact="$lastKnownItem.$lastKnownTexts" />
								</do_for_each>
								<return value="table[
									$lastKnowns = $lastKnownDatas,
									$lastKnownTexts = $lastKnownTexts
								]" />
							</actions>
						</library>
						<library name="Mission_Hunt_SetLastKnownTexts" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="LastKnownData" />
							</params>
							<actions>
								<set_value name="$position" exact="$LastKnownData.$position" />
								<set_value name="$coordinates" exact="[]" />
								<append_to_list name="$coordinates" exact="$position.x" />
								<append_to_list name="$coordinates" exact="$position.y" />
								<append_to_list name="$coordinates" exact="$position.z" />
								<run_actions ref="ConcactenateItems" result="$position_text">
									<param name="List" value="$coordinates" />
									<param name="Delimiter" value="', '" />
								</run_actions>
								<set_value name="$lastKnown_time" exact="$LastKnownData.$time" />
								<run_actions ref="GetTimeText" result="$lastKnown_timeText">
									<param name="Time" value="$lastKnown_time" />
									<param name="IsSince" value="true" />
								</run_actions>
								<set_value name="$LastKnownData.$position_text" exact="$position_text" />
								<set_value name="$LastKnownData.$lastKnown_timeText" exact="$lastKnown_timeText" />
								<return value="table[
									$position_text = $position_text,
									$time_text = $lastKnown_timeText,
								]" />
							</actions>
						</library>
						<library name="Mission_Hunt_GetKillsText" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<!-- <set_value name="$Pilot.$kEM_kills" exact="table[]" /> -->
								<!--
									table[
										{faction} = table[
											{class.ship_xs} = 0,
											{class.ship_s} = 0,
											{class.ship_m} = 0,
											{class.ship_l} = 0,
											{class.ship_xl} = 0,
											{class.station} = 0
										],
										{faction} = table[], ...
									]
								-->
								<set_value name="$killsData" exact="@$Cue_Mission.$MissionTarget.pilot.$kEM_kills.{$Cue_Mission.$Faction}" />
								<!-- <debug_text text="$Cue_Mission.$MissionId + ' $killsData: ' + $killsData" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" /> -->
								<set_value name="$classNames" exact="table[
									{class.ship_xs} = table[$singular = {11513, 265}, $plural = {11513, 266}],
									{class.ship_s}  = table[$singular = {11513, 255}, $plural = {11513, 265}],
									{class.ship_m}  = table[$singular = {11513, 254}, $plural = {11513, 264}],
									{class.ship_l}  = table[$singular = {11513, 253}, $plural = {11513, 263}],
									{class.ship_xl} = table[$singular = {11513, 252}, $plural = {11513, 262}],
									{class.station} = table[$singular = {11513, 251}, $plural = {11513, 261}]
								]" />
								<set_value name="$lines" exact="[]" />
								<!-- <t id="246">%1(count) x %2(class name)</t> -->
								<do_if value="@$killsData.keys.count">
									<do_for_each name="$class" in="$killsData.keys.list">
										<do_if value="$killsData.{$class} == 1">
											<append_to_list name="$lines" exact="{11513, 246}.[$killsData.{$class}, $classNames.{$class}.$singular]" />
										</do_if>
										<do_elseif value="$killsData.{$class} gt 1">
											<append_to_list name="$lines" exact="{11513, 246}.[$killsData.{$class}, $classNames.{$class}.$plural]" />
										</do_elseif>
									</do_for_each>
									<!-- <debug_text text="$Cue_Mission.$MissionId + ' $lines: ' + $lines" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" /> -->
									<run_actions ref="ConcactenateItems" result="$linesText">
										<param name="List" value="$lines" />
										<param name="Delimiter" value="', '" />
									</run_actions>
								</do_if>
								<return value="$linesText" />
							</actions>
						</library>
						<library name="Mission_Hunt_GetIdCode" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$idCode" exact="$Cue_Mission.$MissionTarget.idcode" />
								<debug_text text="$Cue_Mission.$MissionId + ' owner: ' + $Cue_Mission.$MissionTarget.owner + ' trueowner: ' + $Cue_Mission.$MissionTarget.trueowner + ' $Objective_Step: ' + $Cue_Mission.$Objective_Step + ' $Objective_Step_identify: ' + $Cue_Mission.$Objective_Step_identify" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt" />
								<do_if value="
									$Cue_Mission.$MissionTarget.owner != $Cue_Mission.$MissionTarget.trueowner
									or
									$Cue_Mission.$Objective_Step ==  $Cue_Mission.$Objective_Step_identify
								">
									<do_if value="not @$Cue_Mission.$MissionTarget.pilot.$kEM_idCode_fake">
										<find_ship name="$ship_random" space="player.galaxy" />
										<set_value name="$idCode" exact="$ship_random.idcode" />
										<set_value name="$Cue_Mission.$MissionTarget.pilot.$kEM_idCode_fake" exact="$idCode" />
									</do_if>
									<do_else>
										<set_value name="$idCode" exact="$Cue_Mission.$MissionTarget.pilot.$kEM_idCode_fake" />
									</do_else>
								</do_if>
								<return value="$idCode" />
							</actions>
						</library>
					</cues>
				</cue>
				<!--
					
					88 88 88
					88 "" 88
					88    88
					88 88 88,dPPYba,  ,adPPYba,
					88 88 88P'    "8a I8[    ""
					88 88 88       d8  `"Y8ba,
					88 88 88b,   ,a8" aa    ]8I
					88 88 8Y"Ybbd8"'  `"YbbdP"'
					
					
				 -->
				<library name="GetName" purpose="run_actions">
					<params>
						<param name="Component" />
						<param name="IsShort" default="false" />
					</params>
					<actions>
						<set_value name="$name" exact="''" />
						<do_if value="@$Component.idcode and (not $IsShort)">
							<do_if value="
								@$Component.pilot.isoperational and
								(not @$Component.pilot.$kEM_idCode_fake)
							">
								<find_ship name="$ship_random" space="player.galaxy" />
								<set_value name="$Component.pilot.$kEM_idCode_fake" exact="$ship_random.idcode" />
							</do_if>
							<do_if value="$Component.owner != $Component.trueowner">
								<set_value name="$name" exact="$Component.knownname + ' (' + @$Component.pilot.$kEM_idCode_fake + ')'" />
							</do_if>
							<do_else>
								<set_value name="$name" exact="$Component.knownname + ' (' + $Component.idcode + ')'" />
							</do_else>
						</do_if>
						<do_else>
							<set_value name="$name" exact="@$Component.knownname" />
						</do_else>
						<return value="$name" />
					</actions>
				</library>
				<library name="Mission_Complete" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
					</params>
					<actions>
						<debug_text text="'reward_player: ' + $Cue_Mission.$RewardCr" chance="UserSettings.$debugChance" />
						<reward_player money="$Cue_Mission.$RewardCr" />
						<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$RewardCr: ' + $Cue_Mission.$RewardCr" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
						<do_if value="@md.kuertee_professions.kProfs.exists">
							<do_if value="$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_hunt">
								<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
									$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
									$type = md.kuertee_professions.kProfs.$activity_mission_success,
									$missionLib = $Cue_Mission.$kProfs_missionLib,
									$faction = $Cue_Mission.$Faction,
								]" />
							</do_if>
							<signal_cue_instantly cue="md.kuertee_professions.DefendMission_Complete" param="table[
								$missionStatus = md.kuertee_professions.kProfs.$activity_mission_success,
								$missionLib = $Cue_Mission.$kProfs_missionLib
							]" />
							<signal_cue_instantly cue="md.kuertee_professions.GMMissionEnd" param="table[
								$profRepu = md.kuertee_professions.kProfs.$repu_Defender,
								$activityId = md.kuertee_professions.kProfs.$activity_full_mission_success,
								$missionLib = $Cue_Mission.$kProfs_missionLib,
								$rewardCr = $Cue_Mission.$RewardCr
							]" />
						</do_if>
					</actions>
				</library>
				<library name="Reward_CalculateForKills" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
						<param name="DamageAndKillsList" />
						<param name="IsForPlayer" default="true" />
					</params>
					<actions>
						<set_value name="$reward" exact="0f" />
						<set_value name="$difficulty_max" exact="level.veryeasy" />
						<!-- <set_value name="$DamageAndKillsList" exact="table[
							$enemy = $EnemyTarget,
							$idCode = @$EnemyTarget.idcode,
							$name = $name_enemyTarget,
							$class = $EnemyTarget.class,
							$size = $EnemyTarget.size,
							$macro = $EnemyTarget.macro,
							$faction = $EnemyTarget.owner,
							$hull = $EnemyTarget.hullpercentage,
							$damage_total = 0,
							$isPlayerKilled = false,
							$killer = null
						]" /> -->
						<set_value name="$damageAndKillDataByMacro" exact="table[]" />
						<set_value name="$damageAndKillDataByClass" exact="table[
							{class.station} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 251}, $plural = {11513, 261}],
							{class.ship_xl} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 252}, $plural = {11513, 262}],
							{class.ship_l} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 253}, $plural = {11513, 263}],
							{class.ship_m} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 254}, $plural = {11513, 264}],
							{class.ship_s} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 255}, $plural = {11513, 265}],
							{class.ship_xs} = table[$damage = 0, $kills = 0, $max = 0, $name = {11513, 256}, $plural = {11513, 266}]
						]" />
						<!-- <do_for_each name="$key" in="$DamageAndKillsList.keys.list">
							<set_value name="$damageAndKillData" exact="$DamageAndKillsList.{$key}" /> -->
						<do_for_each name="$damageAndKillData" in="$DamageAndKillsList">
							<!-- data by macro -->
							<do_if value="@$damageAndKillData.$macro">
								<do_if value="not @$damageAndKillDataByMacro.{$damageAndKillData.$macro}">
									<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}" exact="table[$number = 0, $kills = 0, $playerKills = 0, $playerDamage = 0, $reward = 0]" />
								</do_if>
								<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}.$number" operation="add" exact="1" />
								<do_if value="@$damageAndKillData.$killer">
									<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}.$kills" operation="add" exact="1" />
									<do_if value="$damageAndKillData.$isPlayerKilled">
										<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}.$playerKills" operation="add" exact="1" />
									</do_if>
								</do_if>
								<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}.$playerDamage" operation="add" exact="$damageAndKillData.$damage_total" />
							</do_if>
							<!-- data by class, and calc reward -->
							<set_value name="$damageAndKillDataByClass.{$damageAndKillData.$class}.$max" operation="add" exact="1" />
							<run_actions ref="GetRewardDataForClassKill" result="$rewardDataForClassKill">
								<param name="Cue_Mission" value="$Cue_Mission" />
								<param name="Faction" value="$Cue_Mission.$Faction" />
								<param name="Class" value="$damageAndKillData.$class" />
							</run_actions>
							<set_value name="$Difficulty" exact="$rewardDataForClassKill.$difficulty" />
							<set_value name="$Level" exact="$rewardDataForClassKill.$level" />
							<set_value name="$reward_thisEnemy_max" exact="$rewardDataForClassKill.$reward" />
							<do_if value="kEMissions.$difficultyValues.{$Difficulty} gt kEMissions.$difficultyValues.{$difficulty_max}">
								<set_value name="$difficulty_max" exact="$Difficulty" />
							</do_if>
							<set_value name="$damage" exact="100" />
							<do_if value="$IsForPlayer or @$damageAndKillData.$isPlayerKilled">
								<set_value name="$damage" exact="[100, $damageAndKillData.$damage_total].min" />
							</do_if>
							<set_value name="$damageAndKillDataByClass.{$damageAndKillData.$class}.$damage" operation="add" exact="$damage" />
							<set_value name="$reward_thisEnemy" exact="($damage / 100.0 * ($reward_thisEnemy_max)f)ct" />
							<do_if value="UserSettings.$debugChance_enemyTargets">
								<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$name: ' + $damageAndKillData.$name + ' (' + $damageAndKillData.$idCode + ')'" />
								<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$class: ' + $damageAndKillData.$class" />
								<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$damage_total: ' + $damageAndKillData.$damage_total" />
								<debug_text text="$Cue_Mission.$MissionId + ' $damageAndKillData.$isPlayerKilled: ' + $damageAndKillData.$isPlayerKilled" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_thisEnemy_max: ' + $reward_thisEnemy_max + ' $Difficulty: ' + $Difficulty + ' $Level: ' + $Level" />
								<debug_text text="$Cue_Mission.$MissionId + ' $reward_thisEnemy (pre kill bonus): ' + $reward_thisEnemy" />
							</do_if>
							<do_if value="@$damageAndKillData.$isPlayerKilled">
								<set_value name="$allowedClasses" exact="[class.ship_s, class.ship_m, class.ship_l, class.ship_xl, class.station]" />
								<do_if value="not @md.kuertee_emergent_missions.kEMissions.$IsSWIExists">
									<append_to_list name="$allowedClasses" exact="class.ship_xs" />
								</do_if>
								<do_if value="$allowedClasses.indexof.{$damageAndKillData.$class}">
									<set_value name="$damageAndKillDataByClass.{$damageAndKillData.$class}.$kills" operation="add" exact="1" />
									<set_value name="$reward_thisEnemy" exact="(($reward_thisEnemy)f * 1.25)ct" />
									<debug_text text="$Cue_Mission.$MissionId + ' $reward_thisEnemy (post kill bonus): ' + $reward_thisEnemy" chance="UserSettings.$debugChance_enemyTargets" />
								</do_if>
							</do_if>
							<!-- data by macro -->
							<do_if value="@$damageAndKillData.$macro">
								<set_value name="$damageAndKillDataByMacro.{$damageAndKillData.$macro}.$reward" operation="add" exact="$reward_thisEnemy" />
							</do_if>
							<set_value name="$reward" exact="(($reward)f + ($reward_thisEnemy)f)ct" />
						</do_for_each>
						<!-- get description by macro -->
						<!-- <t id="491">Operation results:</t>
						<t id="492">%1(number) killed / %2(total) x %3(enemy macro)</t>
						<t id="493">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your kills: %4(number)\033X: %5(reward)</t>
						<t id="494">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your damage: %4(number)\033X / %5(total hull): %6(reward)</t>
						<t id="495">%1(number) killed / %2(total) x %3(enemy macro): \033#FF00FF00#your kills: %4(number), your damage: %5(number)\033X / %6(total hull): %7(reward)</t>
						<t id="496">Total reward: %s</t> -->
						<set_value name="$lines_byMacro" exact="[]" />
						<set_value name="$lines_byMacro_player" exact="[]" />
						<set_value name="$description_damageAndKillsByMacro" exact="''" />
						<set_value name="$description_damageAndKillsByMacro_player" exact="''" />
						<do_for_each name="$macro" in="$damageAndKillDataByMacro.keys.list">
							<set_value name="$data" exact="$damageAndKillDataByMacro.{$macro}" />
							<!-- apply usersettings reward mult only on description because it will be applied when the total reward is given -->
							<set_value name="$reward_text" exact="((($data.$reward)f * (md.kuertee_emergent_missions.UserSettings.$rewardMult / 100f))ct).formatted.{'%.s %Cr'}" />
							<do_if value="($data.$reward)f">
								<do_if value="$data.$playerKills and $data.$playerDamage">
									<append_to_list name="$lines_byMacro_player" exact="{11513, 495}.[
										$data.$kills, $data.$number, $macro.name, $data.$playerKills, $data.$playerDamage, (100 * $data.$number), $reward_text
									]" />
								</do_if>
								<do_elseif value="$data.$playerKills and not $data.$playerDamage">
									<append_to_list name="$lines_byMacro_player" exact="{11513, 495}.[
										$data.$kills, $data.$number, $macro.name, $data.$playerKills, $data.$playerDamage, (100 * $data.$number), $reward_text
									]" />
								</do_elseif>
								<do_elseif value="$data.$playerDamage">
									<append_to_list name="$lines_byMacro_player" exact="{11513, 494}.[
										$data.$kills, $data.$number, $macro.name, $data.$playerDamage, (100 * $data.$number), $reward_text
									]" />
								</do_elseif>
							</do_if>
							<do_else>
								<append_to_list name="$lines_byMacro" exact="{11513, 492}.[
									$data.$kills, $data.$number, $macro.name
								]" />
							</do_else>
						</do_for_each>
						<run_actions ref="ConcactenateItems" result="$description_damageAndKillsByMacro">
							<param name="List" value="$lines_byMacro" />
							<param name="Delimiter" value="'\n'" />
						</run_actions>
						<run_actions ref="ConcactenateItems" result="$description_damageAndKillsByMacro_player">
							<param name="List" value="$lines_byMacro_player" />
							<param name="Delimiter" value="'\n'" />
						</run_actions>
						<do_if value="$description_damageAndKillsByMacro_player != ''">
							<do_if value="$description_damageAndKillsByMacro != ''">
								<set_value name="$description_damageAndKillsByMacro" exact="$description_damageAndKillsByMacro + '\n' + $description_damageAndKillsByMacro_player" />
							</do_if>
							<do_else>
								<set_value name="$description_damageAndKillsByMacro" exact="$description_damageAndKillsByMacro_player" />
							</do_else>
						</do_if>
						<!-- get description by class -->
						<set_value name="$lines" exact="[]" />
						<do_for_each name="$class" in="$damageAndKillDataByClass.keys.list">
							<set_value name="$data" exact="$damageAndKillDataByClass.{$class}" />
							<debug_text text="$Cue_Mission.$MissionId + ' $class: ' + $class + ', $data.$max: ' + $data.$max + ', $data.$kills: ' + $data.$kills + ', $data.$damage: ' + $data.$damage" chance="UserSettings.$debugChance_enemyTargets" />
							<do_if value="$data.$damage or $data.$kills">
								<do_if value="$data.$max gt 1">
									<set_value name="$className" exact="$data.$plural" />
								</do_if>
								<do_else>
									<set_value name="$className" exact="$data.$name" />
								</do_else>
								<do_if value="$data.$kills == $data.$max">
									<set_value name="$line" exact="{11513, 243}.[$data.$max, $className, $data.$kills]" />
								</do_if>
								<do_elseif value="$data.$kills">
									<set_value name="$line" exact="{11513, 244}.[$data.$max, $className, $data.$kills, (($data.$damage * 100)i / 100), ($data.$max * 100)]" />
								</do_elseif>
								<do_else>
									<set_value name="$line" exact="{11513, 245}.[$data.$max, $className, (($data.$damage * 100)i / 100), ($data.$max * 100)]" />
								</do_else>
								<append_to_list name="$lines" exact="$line" />
							</do_if>
						</do_for_each>
						<do_if value="$lines.count">
							<run_actions ref="ConcactenateItems" result="$description_damageAndKillsByClass">
								<param name="List" value="$lines" />
								<param name="Delimiter" value="', '" />
							</run_actions>
							<set_value name="$description_damageAndKillsByClass" exact="{11513, 242}.[$description_damageAndKillsByClass]" />
						</do_if>
						<do_else>
							<set_value name="$description_damageAndKillsByClass" exact="null" />
						</do_else>
						<return value="table[
							$description_damageAndKillsByClass = $description_damageAndKillsByClass,
							$description_damageAndKillsByMacro = $description_damageAndKillsByMacro,
							$reward         = ($reward)ct,
							$difficulty_max = $difficulty_max
						]" />
					</actions>
				</library>
				<library name="GetRewardDataForClassKill" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
						<param name="Faction" />
						<param name="Class" />
					</params>
					<actions>
						<set_value name="$Level" exact="1" />
						<do_if value="[class.station].indexof.{$Class}">
							<set_value name="$Difficulty" exact="level.hard" />
							<set_value name="$Level" exact="10" />
						</do_if>
						<do_elseif value="[class.ship_xl].indexof.{$Class}">
							<set_value name="$Difficulty" exact="level.hard" />
							<set_value name="$Level" exact="5" />
						</do_elseif>
						<do_elseif value="[class.ship_l].indexof.{$Class}">
							<set_value name="$Difficulty" exact="level.hard" />
						</do_elseif>
						<do_elseif value="[class.ship_m].indexof.{$Class}">
							<set_value name="$Difficulty" exact="level.medium" />
						</do_elseif>
						<do_elseif value="[class.ship_s].indexof.{$Class}">
							<set_value name="$Difficulty" exact="level.easy" />
							<set_value name="$Level" exact="10" />
						</do_elseif>
						<do_else>
							<set_value name="$Difficulty" exact="level.easy" />
						</do_else>
						<run_actions ref="GetRewardForLevel" result="$reward">
							<param name="Cue_Mission" value="$Cue_Mission" />
							<param name="Faction" value="$Faction" />
							<param name="Difficulty" value="$Difficulty" />
							<param name="Level" value="$Level" />
						</run_actions>
						<return value="table[
							$difficulty = $Difficulty,
							$level = $Level,
							$reward = $reward
						]" />
					</actions>
				</library>
				<library name="GetRewardForLevel" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
						<param name="Faction" />
						<param name="Difficulty" />
						<param name="Level" />
					</params>
					<actions>
						<set_value name="$reward" exact="0" />
						<set_value name="$MissionThread" exact="null" />
						<set_value name="$OfferType" exact="null" />
						<do_if value="@$Cue_Mission.$MissionId">
							<debug_text text="$Cue_Mission.$MissionId + ' this: ' + this" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						</do_if>
						<do_else>
							<debug_text text="$Cue_Mission.$MissionId + ' this: ' + this" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						</do_else>
						<signal_cue_instantly cue="md.LIB_Reward_Balancing.Reward_Money" param="[this, $Difficulty, $Level, $Faction]" comment="basic reward credits" />
						<include_actions ref="md.LIB_Reward_Balancing.Apply_RewardMultiplier" comment="signal leak and mission thread bonus" />
						<set_value name="$reward" exact="$Reward_Money__Result_Multiplied" />
						<!-- <debug_text text="$Cue_Mission.$MissionId + ' $reward: ' + $reward" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<set_value name="$reward" exact="(($reward)f * (UserSettings.$rewardMult / 100f))ct" />
						<debug_text text="$Cue_Mission.$MissionId + ' $reward (after $rewardMult): ' + $reward" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" /> -->
						<return value="$reward" />
					</actions>
				</library>
				<library name="Mission_Incomplete" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
					</params>
					<actions>
						<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission: ' + $Cue_Mission" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
					</actions>
				</library>
				<library name="Mission_Fail" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
					</params>
					<actions>
						<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission: ' + $Cue_Mission" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
						<do_if value="@md.kuertee_professions.kProfs.exists">
							<do_if value="$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_hunt">
								<signal_cue_instantly cue="md.kuertee_professions.BountyHunter_Event" param="table[
									$prof = md.kuertee_professions.kProfs.$prof_BountyHunter,
									$type = md.kuertee_professions.kProfs.$activity_mission_failure,
									$missionLib = $Cue_Mission.$kProfs_missionLib,
									$faction = $Cue_Mission.$Faction
								]" />
							</do_if>
							<signal_cue_instantly cue="md.kuertee_professions.DefendMission_Complete" param="table[
								$missionStatus = md.kuertee_professions.kProfs.$activity_mission_failure,
								$missionLib = $Cue_Mission.$kProfs_missionLib
							]" />
							<signal_cue_instantly cue="md.kuertee_professions.GMMissionEnd" param="table[
								$profRepu = md.kuertee_professions.kProfs.$repu_Defender,
								$activityId = md.kuertee_professions.kProfs.$activity_full_mission_failure,
								$missionLib = $Cue_Mission.$kProfs_missionLib
							]" />
						</do_if>
					</actions>
				</library>
				<library name="WriteToLogBook" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
						<param name="Lines" />
					</params>
					<actions>
						<run_actions ref="ConcactenateItems" result="$missionLog">
							<param name="List" value="$Lines" />
							<param name="Delimiter" value="' '" />
						</run_actions>
						<set_value name="$object" exact="$Cue_Mission.$Ship" />
						<set_value name="$interact" exact="'showonmap'" />
						<!-- <do_if value="$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_hunt">
							<set_value name="$object" exact="null" />
							<set_value name="$interact" exact="null" />
						</do_if> -->
						<do_if value="$Cue_Mission.$RewardCr">
							<write_to_logbook category="missions" title="$Cue_Mission.$mission_name" text="$missionLog" object="$object" interaction="$interact" money="$Cue_Mission.$RewardCr" />
						</do_if>
						<do_else>
							<write_to_logbook category="missions" title="$Cue_Mission.$mission_name" text="$missionLog" object="$object" interaction="$interact" />
						</do_else>
					</actions>
				</library>
				<library name="ConcactenateItems" purpose="run_actions">
					<params>
						<param name="List" />
						<param name="Delimiter" default="' '" />
						<param name="ExcludeList" default="null" />
					</params>
					<actions>
						<set_value name="$string" exact="''" />
						<set_value name="$list_final" exact="[]" />
						<do_all counter="$i" exact="$List.count">
							<set_value name="$isOk" exact="true" />
							<do_if value="$ExcludeList">
								<do_for_each name="$exclude" in="$ExcludeList">
									<do_if value="$List.{$i} == $exclude">
										<set_value name="$isOk" exact="false" />
										<break />
									</do_if>
								</do_for_each>
							</do_if>
							<do_if value="$isOk">
								<append_to_list name="$list_final" exact="$List.{$i}" />
							</do_if>
						</do_all>
						<do_all counter="$i" exact="$list_final.count">
							<set_value name="$item" exact="$list_final.{$i}" />
							<do_if value="$i != $list_final.count">
								<do_if value="@$item.knownname and @$item.idcode">
									<set_value name="$string" exact="$string + $item.knownname + ' (' + $item.idcode + ')' + $Delimiter" />
								</do_if>
								<do_elseif value="@$item.knownname">
									<set_value name="$string" exact="$string + $item.knownname + $Delimiter" />
								</do_elseif>
								<do_elseif value="@$item.name">
									<set_value name="$string" exact="$string + $item.name + $Delimiter" />
								</do_elseif>
								<do_elseif value="$item and $item != ''">
									<set_value name="$string" exact="$string + $item + $Delimiter" />
								</do_elseif>
							</do_if>
							<do_else>
								<do_if value="@$item.knownname and @$item.idcode">
									<set_value name="$string" exact="$string + $item.knownname + ' (' + $item.idcode + ')'" />
								</do_if>
								<do_elseif value="@$item.knownname">
									<set_value name="$string" exact="$string + $item.knownname" />
								</do_elseif>
								<do_elseif value="@$item.name">
									<set_value name="$string" exact="$string + $item.name" />
								</do_elseif>
								<do_elseif value="$item and $item != ''">
									<set_value name="$string" exact="$string + $item" />
								</do_elseif>
							</do_else>
						</do_all>
						<return value="$string" />
					</actions>
				</library>
				<library name="RegisterMissionNPC" purpose="run_actions">
					<params>
						<param name="Ship" />
						<param name="Actor" />
					</params>
					<actions>
						<set_value name="md.kuertee_emergent_missions.kEMissions.$missionNPCByShip.{$Ship}" exact="$Actor" />
					</actions>
				</library>
				<library name="GetMissionNPCByShip" purpose="run_actions">
					<params>
						<param name="Ship" />
					</params>
					<actions>
						<set_value name="$npc" exact="@md.kuertee_emergent_missions.kEMissions.$missionNPCByShip.{$Ship}" />
						<debug_text text="$Ship + ' $npc (pre-check): ' + $npc + ' (' + @$npc.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<set_value name="$dbId" exact="'' + $npc" />
						<debug_text text="$Ship + ' $dbId: ' + $dbId" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<do_if value="$dbId == '0x0'">
							<set_value name="$npc" exact="null" />
						</do_if>
						<debug_text text="$Ship + ' $npc (post-check): ' + $npc + ' (' + @$npc.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<return value="$npc" />
					</actions>
				</library>
				<library name="UnregisterMissionNPC" purpose="run_actions">
					<params>
						<param name="Ship" />
					</params>
					<actions>
						<remove_value name="md.kuertee_emergent_missions.kEMissions.$missionNPCByShip.{$Ship}" />
					</actions>
				</library>
				<cue name="Comms">
					<cues>
						<library name="Comm_Greeting">
							<params>
								<param name="Cue_Mission" />
							</params>
							<cues>
								<cue name="Comm_Greeting_Init">
									<actions>
										<set_value name="$isWelcomed" exact="false" />
										<do_if value="$Cue_Mission.hasguidance">
											<do_if value="kEMissions.$attentionInZoneAndNearer.indexof.{$Cue_Mission.$Ship.attention}">
												<set_value name="$isWelcomed" exact="true" />
												<run_actions ref="[Comm_Welcome, Comm_FollowMe].random">
													<param name="Cue_Mission" value="$Cue_Mission" />
													<param name="IsInCombat" value="($Cue_Mission + '') == 'Mission_Mayday'" />
												</run_actions>
											</do_if>
										</do_if>
									</actions>
								</cue>
								<cue name="Comm_Greeting_AttentionChange">
									<conditions>
										<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
										<!-- <event_object_changed_attention object="$Cue_Mission.$Ship" /> -->
										<event_object_changed_attention group="$Cue_Mission.$GroupOfOne_Ship" />
										<check_value value="$Cue_Mission.hasguidance" />
										<check_value value="not $isWelcomed" />
										<check_value value="md.kuertee_emergent_missions.kEMissions.$attentionInZoneAndNearer.indexof.{event.param}" />
										<check_value value="not md.kuertee_emergent_missions.kEMissions.$attentionInZoneAndNearer.indexof.{event.param2}" />
									</conditions>
									<actions>
										<set_value name="$isWelcomed" exact="true" />
										<run_actions ref="[Comm_Welcome, Comm_FollowMe].random">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="IsInCombat" value="($Cue_Mission + '') == 'Mission_Mayday'" />
										</run_actions>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</library>
						<library name="Comm_Welcome" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="IsInCombat" default="false" />
							</params>
							<actions>
								<set_value name="$actor" exact="$Cue_Mission.$Ship.pilot" />
								<set_value name="$lines" exact="[]" />
								<do_if value="not $IsInCombat">
									<!-- 2001, 2002, 2005, 2012, 3003 - hello there. hello. comms channel open. welcome. captain. -->
									<append_to_list name="$lines" exact="2001" />
									<append_to_list name="$lines" exact="2002" />
									<append_to_list name="$lines" exact="2005" />
									<append_to_list name="$lines" exact="2012" />
								</do_if>
								<do_else>
									<!-- 3103 = captain! -->
									<append_to_list name="$lines" exact="3103" />
								</do_else>
								<!-- <append_to_list name="$lines" exact="3003" /> -->
								<speak actor="$actor" line="$lines.random" broadcast="true" />
							</actions>
						</library>
						<library name="Comm_FollowMe" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="IsInCombat" default="false" />
							</params>
							<actions>
								<set_value name="$actor" exact="$Cue_Mission.$Ship.pilot" />
								<set_value name="$lines" exact="[]" />
								<do_if value="not $IsInCombat">
									<!-- 4002, 4005, 5030, 5031 - follow me. follow my lead. be prepared for combat encounters. keep an eye on sensors. -->
									<append_to_list name="$lines" exact="4002" />
									<append_to_list name="$lines" exact="4005" />
									<append_to_list name="$lines" exact="5030" />
									<append_to_list name="$lines" exact="5031" />
								</do_if>
								<do_else>
									<!-- 3103 = captain! -->
									<append_to_list name="$lines" exact="3103" />
								</do_else>
								<speak actor="$actor" line="$lines.random" broadcast="true" />
							</actions>
						</library>
						<library name="Comm_Engage" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$actor" exact="$Cue_Mission.$Ship.pilot" />
								<set_value name="$lines" exact="[]" />
								<!-- 4009, 4012, 10001, 10509 - open fire. engage. enemy spotted. you are free to engage. -->
								<append_to_list name="$lines" exact="4009" />
								<append_to_list name="$lines" exact="4012" />
								<append_to_list name="$lines" exact="10001" />
								<append_to_list name="$lines" exact="10509" />
								<speak actor="$actor" line="$lines.random" broadcast="true" />
							</actions>
						</library>
						<library name="Comm_ThankYou" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$actor" exact="$Cue_Mission.$Ship.pilot" />
								<do_if value="$actor.exists">
									<set_value name="$lines" exact="[]" />
									<!-- 2110, 2111 = thank you. thanks for your help. -->
									<append_to_list name="$lines" exact="2110" />
									<append_to_list name="$lines" exact="2111" />
									<speak actor="$actor" line="$lines.random" broadcast="true" />
								</do_if>
							</actions>
						</library>
						<library name="Comm_DamageReport">
							<params>
								<param name="Cue_Mission" />
							</params>
							<cues>
								<cue name="Comm_DamageReport_Init">
									<actions>
										<!-- set these to 100 so that the appropriate comms play regardless of what these were previously -->
										<!-- 10006 - we're taking hits.
										10007, 10008 - taking serious damage. damage is getting serious.
										10016, 5015 - help! get us out of here! -->
										<!-- 10056, 10055, 11506 - shields hit. taking shield damage. shields are down. -->
										<set_value name="$states" exact="table[
											$depleted = table[$percentage = 25, $lines_hull = [10016, 5015], $lines_shield = [11506]],
											$majorDamage = table[$percentage = 50, $lines_hull = [10007, 10008], $lines_shield = [10055]],
											$minorDamage = table[$percentage = 75, $lines_hull = [10006], $lines_shield = [10056]],
											$ok = table[$percentage = 100]
										]" />
										<set_value name="$hull_last" exact="100" />
										<set_value name="$hull_state" exact="$states.keys.{4}" />
										<set_value name="$shield_last" exact="100" />
										<set_value name="$shield_state" exact="$states.keys.{4}" />
										<set_value name="$time_lastReport" exact="0" />
									</actions>
								</cue>
								<cue name="Comm_DamageReport_ShipAttacked">
									<conditions>
										<!-- <event_object_attacked object="$Cue_Mission.$Ship" /> -->
										<event_object_attacked group="$Cue_Mission.$GroupOfOne_Ship" />
										<check_value value="$Cue_Mission.hasguidance" />
									</conditions>
									<actions>
										<set_value name="$lines" exact="[]" />
										<set_value name="$hull" exact="$Cue_Mission.$Ship.hullpercentage" />
										<set_value name="$shield" exact="$Cue_Mission.$Ship.shieldpercentage" />
										<do_if value="$hull != $hull_last">
											<set_value name="$hull" exact="$hull_last" />
											<do_for_each name="$key" in="$states.keys.list">
												<set_value name="$state" exact="$states.{$key}" />
												<do_if value="$hull le $state.$percentage">
													<do_if value="$hull_state != $key">
														<debug_text text="$Cue_Mission.$MissionId + ' $hull_state: ' + $hull_state + ' $key: ' + $key" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
														<set_value name="$hull_state" exact="$key" />
														<set_value name="$lines" exact="@$state.$lines_hull" />
													</do_if>
													<break />
												</do_if>
											</do_for_each>
										</do_if>
										<do_elseif value="$shield != $shield_last">
											<set_value name="$shield_last" exact="$shield" />
											<do_for_each name="$key" in="$states.keys.list">
												<set_value name="$state" exact="$states.{$key}" />
												<do_if value="$shield le $state.$percentage">
													<do_if value="$shield_state != $key">
														<debug_text text="$Cue_Mission.$MissionId + ' $shield: ' + $shield + ' $state.$percentage: ' + $state.$percentage" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
														<debug_text text="$Cue_Mission.$MissionId + ' $shield_state: ' + $shield_state + ' $key: ' + $key" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
														<set_value name="$shield_state" exact="$key" />
														<set_value name="$lines" exact="@$state.$lines_shield" />
													</do_if>
													<break />
												</do_if>
											</do_for_each>
										</do_elseif>
										<do_if value="$lines and @$lines.count">
											<!-- <do_if value="(not $time_lastReport) or player.age - $time_lastReport gt 5s"> -->
												<set_value name="$time_lastReport" exact="player.age" />
												<debug_text text="$Cue_Mission.$MissionId + ' $lines: ' + $lines" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
												<speak actor="$Cue_Mission.$Ship.pilot" line="$lines.random" broadcast="true" />
											<!-- </do_if> -->
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</library>
					</cues>
				</cue>
				<library name="GetSectorClass" purpose="run_actions">
					<params>
						<param name="Sector" />
						<param name="Faction" />
					</params>
					<actions>
						<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_foreignTerritory" />
						<set_value name="$isFrontier" exact="false" />
						<do_if value="$Sector.exists">
							<find_sector_in_range distances="$sectors_adjacent" object="$Sector" maxdistance="1" multiple="true"/>
							<do_for_each name="$sector_inList" in="$sectors_adjacent">
								<do_if value="$sector_inList != $Sector">
									<do_if value="$sector_inList.owner.hasrelation.enemy.{$Faction}">
										<set_value name="$isFrontier" exact="true" />
									</do_if>
									<do_elseif value="$sector_inList.iscontested">
										<do_for_each name="$faction_inList" in="$sector_inList.contestingfactions">
											<do_if value="$faction_inList.hasrelation.enemy.{$Faction}">
												<set_value name="$isFrontier" exact="true" />
												<break />
											</do_if>
										</do_for_each>
									</do_elseif>
								</do_if>
								<do_if value="$isFrontier">
									<break />
								</do_if>
							</do_for_each>
							<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_free" />
							<do_if value="@$Faction.headquarters.sector == $Sector">
								<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_home" />
							</do_if>
							<do_elseif value="$Sector.iscontestedby.{$Faction}">
								<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_frontier" />
								<set_value name="$isFrontier" exact="true" />
							</do_elseif>
							<do_elseif value="$Faction == $Sector.owner">
								<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_territory" />
							</do_elseif>
							<do_else>
								<do_if value="@$Sector.owner.headquarters.sector == $Sector">
									<do_if value="$Sector.owner.hasrelation.enemy.{$Faction}">
										<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_enemyHome" />
									</do_if>
									<do_else>
										<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_foreignHome" />
									</do_else>
								</do_if>
								<do_elseif value="$Sector.owner != faction.ownerless">
									<do_if value="$Sector.owner.hasrelation.enemy.{$Faction}">
										<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_enemyTerritory" />
									</do_if>
									<do_else>
										<set_value name="$class" exact="md.kuertee_emergent_missions.kEMissions.$sector_foreignTerritory" />
									</do_else>
								</do_elseif>
							</do_else>
						</do_if>
						<return value="table[$class = $class, $isFrontier = $isFrontier]" />
					</actions>
				</library>
				<!--
					                                                            mm                                       mm
					                                                            MM                                       MM
					 .gP"Ya `7MMpMMMb.  .gP"Ya `7MMpMMMb.pMMMb.`7M'   `MF'    mmMMmm  ,6"Yb.  `7Mb,od8 .P"Ybmmm .gP"Ya mmMMmm ,pP"Ybd
					,M'   Yb  MM    MM ,M'   Yb  MM    MM    MM  VA   ,V        MM   8)   MM    MM' "':MI  I8  ,M'   Yb  MM   8I   `"
					8M""""""  MM    MM 8M""""""  MM    MM    MM   VA ,V         MM    ,pm9MM    MM     WmmmP"  8M""""""  MM   `YMMMa.
					YM.    ,  MM    MM YM.    ,  MM    MM    MM    VVV          MM   8M   MM    MM    8M       YM.    ,  MM   L.   I8
					 `Mbmmd'.JMML  JMML.`Mbmmd'.JMML  JMML  JMML.  ,V           `Mbmo`Moo9^Yo..JMML.   YMMMMMb  `Mbmmd'  `MbmoM9mmmP'
					                                              ,V                                  6'     dP
					                                           OOb"                                   Ybmmmd'
				 -->
				<library name="EnemyTargets" version="7">
					<params>
						<param name="Cue_Mission" />
						<param name="Cue_EnemyFound" default="null" />
						<param name="Cue_NoEnemiesFound" default="null" />
						<param name="Cue_NoEnemiesNearby" default="null" />
						<param name="Cue_PlayerKill" default="null" />
						<param name="Cue_NewEnemyFaction" default="null" />
						<param name="EnemyTargets" />
						<param name="IsAllowStationTargets" default="false" />
						<param name="IsLimitEnemiesToAttackerFactions" default="false" />
						<param name="IsFindEnemiesOutOfRadarRange" default="false" />
						<param name="IsFindNewEnemyTargets" default="true" />
						<param name="IsForgetEnemyTargetOnNewSector" default="true" />
					</params>
					<actions>
						<create_group groupname="$Ships" />
						<add_to_group groupname="$Ships" object="$Cue_Mission.$Ship" />
						<do_if value="@$Cue_Mission.$Cue_FactionAI.$Ships.count">
							<do_for_each name="$ship_inFactionAI" in="$Cue_Mission.$Cue_FactionAI.$Ships">
								<add_to_group groupname="$Ships" object="$ship_inFactionAI" />
							</do_for_each>
						</do_if>
						<debug_text text="$Cue_Mission.$MissionId + ' $EnemyTargets: ' + $EnemyTargets" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<set_value name="$removes" exact="[]" />
						<do_for_each name="$enemy_inList" in="$EnemyTargets">
							<do_if value="not $Cue_Mission.$Ship.hasrelation.enemy.{$enemy_inList}">
								<append_to_list name="$removes" exact="$enemy_inList" />
							</do_if>
						</do_for_each>
						<do_for_each name="$ship_inList" in="$removes">
							<debug_text text="$Cue_Mission.$MissionId + ' remove_from_group $ship_inList: ' + $ship_inList + ' (' + @$ship_inList.knownname + ', ' + @$ship_inList.idcode + ')'" />
							<remove_from_group group="$EnemyTargets" object="$ship_inList" />
						</do_for_each>
						<debug_text text="$Cue_Mission.$MissionId + ' $EnemyTargets: ' + $EnemyTargets" />
						<set_value name="$removes" exact="[]" />
						<do_for_each name="$faction_inList" in="$Cue_Mission.$EnemyFactions">
							<do_if value="not $Cue_Mission.$Ship.hasrelation.enemy.{$faction_inList}">
								<append_to_list name="$removes" exact="$faction_inList" />
							</do_if>
						</do_for_each>
						<do_for_each name="$faction_inList" in="$removes">
							<debug_text text="$Cue_Mission.$MissionId + ' remove_from_group $faction_inList: ' + $faction_inList + ' (' + $faction_inList.knownname + ')'" />
							<remove_from_list name="$Cue_Mission.$EnemyFactions" exact="$faction_inList" multiple="true" />
						</do_for_each>
						<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$EnemyFactions: ' + $Cue_Mission.$EnemyFactions" />
					</patch>
					<patch sinceversion="4">
						<debug_text text="'patch sinceversion 4, state: ' + this.state" />
						<set_value name="$IsFindNewEnemyTargets" exact="true" />
						<set_value name="$IsForgetEnemyTargetOnNewSector" exact="true" />
					</patch>
					<patch sinceversion="7">
						<debug_text text="'patch sinceversion 7, state: ' + this.state" />
						<set_value name="$Cue_Mission.$Cue_EnemyTargets_FindInterval_Start" exact="EnemyTargets_FindInterval_Start" />
						<set_value name="$Cue_Mission.$Cue_EnemyTargets_FindInterval_Stop" exact="EnemyTargets_FindInterval_Stop" />
					</patch>
					<cues>
						<cue name="EnemyTargets_Init">
							<actions>
								<do_for_each name="$enemyTarget_inList" in="$EnemyTargets">
									<run_actions ref="DamageCalculator_AddTarget">
										<param name="EnemyTarget" value="$enemyTarget_inList" />
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="Cue_PlayerKill" value="$Cue_PlayerKill" />
										<param name="Cue_From" value="EnemyTargets_Init" />
									</run_actions>
									<do_if value="not $Cue_Mission.$EnemyFactions.indexof.{$enemyTarget_inList.owner}">
										<do_if value="$enemyTarget_inList.owner != faction.criminal">
											<append_to_list name="$Cue_Mission.$EnemyFactions" exact="$enemyTarget_inList.owner" />
											<do_if value="$Cue_NewEnemyFaction.exists">
												<signal_cue_instantly cue="$Cue_NewEnemyFaction" param="table[$faction = $enemyTarget_inList.owner]" />
											</do_if>
										</do_if>
									</do_if>
									<set_value name="$isStronger" exact="@md.$DefaultShipStrengthTable.{@$enemyTarget_inList.class} gt @md.$DefaultShipStrengthTable.{@$Cue_Mission.$attacker_largest.class}" />
									<do_if value="$isStronger">
										<set_value name="$Cue_Mission.$attacker_largest" exact="$enemyTarget_inList" />
										<set_value name="$Cue_Mission.$attacker_largestClass" exact="$enemyTarget_inList.class" />
									</do_if>
								</do_for_each>
								<do_if value="$EnemyTargets.count">
									<run_actions ref="EnemyTargets_SetPlayerTarget">
										<param name="Cue_Mission" value="$Cue_Mission" />
									</run_actions>
								</do_if>
							</actions>
						</cue>
						<cue name="EnemyTargets_Accumulate" instantiate="true">
							<conditions>
								<check_any>
									<check_all>
										<check_any>
											<!-- Event for the specified object being attacked (object = attacked object, param = attacker, param2 = kill method, param3 = attacked component) -->
											<event_object_attacked group="$Ships" />
											<!-- Event for when the specified object attacks an object (object = attacker, param = attacked object, param2 = kill method, param3 = [attacked component, weapon]) -->
											<event_object_attacked_object group="$Ships" />
											<!-- Event for the specified object being signalled (object = signalled object, param = custom, usually to specify type of signal, param2 = custom, param3 = custom) -->
											<event_object_signalled group="$Cue_Mission.$GroupOfOne_Ship" param2="'kEMission_move_seekenemies_attack'" />
											<check_all>
												<check_any>
													<event_object_attacked object="player.container" />
													<event_object_attacked_object object="player.container" />
												</check_any>
												<check_value value="player.container.isplayerowned" />
												<check_value value="player.container.isclass.ship" />
												<check_value value="[@$Cue_Mission.$Ship.sector, @$Cue_Mission.$TargetSector].indexof.{player.entity.sector}" />
												<check_value value="$Cue_Mission.$EnemyFactions.indexof.{event.param.owner} or event.param.owner == faction.criminal" />
											</check_all>
										</check_any>
										<check_value value="event.param.isclass.[class.ship, class.station, class.module] and (not @event.param.islasertower)" />
										<check_value value="event.object.hasrelation.enemy.{event.param}" />
										<check_value value="not [faction.player, faction.civilian].indexof.{event.param.owner}" />
									</check_all>
									<check_all>
										<check_any>
											<event_object_signalled object="player.galaxy" param="'K_ObjectAttacks_AttackerInit'" />
											<event_object_signalled object="player.galaxy" param="'K_ObjectAttacks_AttackerNewVictim'" />
										</check_any>
										<check_value value="
										[
											md.kuertee_emergent_missions.kEMissions.$missionType_raid,
											md.kuertee_emergent_missions.kEMissions.$missionType_patrol
										].indexof.{$Cue_Mission.$kEMissionType}
										" />
										<check_value value="@event.param2.$victim.owner == $Cue_Mission.$Faction" />
										<check_value value="[@$Cue_Mission.$Ship.sector, @$Cue_Mission.$TargetSector].indexof.{@event.param2.$victim.sector}" />
										<check_value value="event.param2.$attacker.isclass.[class.ship, class.station] and (not @event.param2.$attacker.islasertower)" />
										<check_value value="event.param2.$victim.hasrelation.enemy.{event.param2.$attacker}" />
										<check_value value="not [faction.player, faction.civilian].indexof.{event.param2.$attacker.owner}" />
									</check_all>
								</check_any>
								<check_value value="$IsFindNewEnemyTargets" />
								<check_value value="$Cue_Mission.$kEMissionType != md.kuertee_emergent_missions.kEMissions.$missionType_hunt" />
								<check_value value="$Cue_Mission.hasmission" />
							</conditions>
							<actions>
								<set_value name="$friend" exact="event.object" />
								<do_if value="['event_object_attacked', 'event_object_attacked_object'].indexof.{event.name}">
									<set_value name="$enemy_attacking" exact="event.param" />
									<set_value name="$victim_attacked" exact="event.object" />
								</do_if>
								<do_elseif value="event.name == 'event_object_signalled' and event.param2 == 'kEMission_move_seekenemies_attack'">
									<set_value name="$enemy_attacking" exact="event.param" />
									<set_value name="$victim_attacked" exact="event.object" />
								</do_elseif>
								<do_elseif value="event.name == 'event_object_signalled' and ['K_ObjectAttacks_AttackerInit', 'K_ObjectAttacks_AttackerNewVictim'].indexof.{event.param}">
									<set_value name="$enemy_attacking" exact="event.param2.$attacker" />
									<set_value name="$victim_attacked" exact="event.param2.$victim" />
								</do_elseif>
								<do_if value="
									@$enemy_attacking.isclass.container
									and
									(
										(@$Cue_Mission.$TargetSector.exists and $victim_attacked.hascontext.{$Cue_Mission.$TargetSector})
										or
										((not @$Cue_Mission.$TargetSector.exists) and @$Cue_Mission.$Ship.isoperational and @$victim_attacked.hascontext.{$Cue_Mission.$Ship.sector})
										or
										((not @$Cue_Mission.$TargetSector.exists) and @$Cue_Mission.$Ship.exists and @$victim_attacked.hascontext.{$Cue_Mission.$Ship.sector})
									)
								">
									<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $enemy_attacking: ' + $enemy_attacking + ' (' + $enemy_attacking.knownname + ', ' + $enemy_attacking.class + ', ' + $enemy_attacking.idcode + ', ' + $enemy_attacking.owner + ') $IsAllowStationTargets: ' + $IsAllowStationTargets" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' $victim_attacked: ' + $victim_attacked + ' (' + $victim_attacked.knownname + ', ' + $victim_attacked.class + ', ' + $victim_attacked.idcode + ', ' + $victim_attacked.owner + ') $IsAllowStationTargets: ' + $IsAllowStationTargets" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
									<do_if value="(not $enemy_attacking.isclass.station) or $IsAllowStationTargets">
										<debug_text text="$Cue_Mission.$MissionId + ' $EnemyTargets.indexof.{$enemy_attacking}: ' + $EnemyTargets.indexof.{$enemy_attacking}" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<set_value name="$idCodes" exact="md.kuertee_emergent_missions.DamageCalculator.$idCodes" />
										<set_value name="$idx" exact="$idCodes.indexof.{$enemy_attacking.idcode}" />
										<debug_text text="$Cue_Mission.$MissionId + ' $idx: ' + $idx + ' indexof: ' + $EnemyTargets.indexof.{$enemy_attacking}" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<do_if value="(not $idx) or (not $EnemyTargets.indexof.{$enemy_attacking})">
											<add_to_group groupname="$EnemyTargets" object="$enemy_attacking" />
											<run_actions ref="DamageCalculator_AddTarget">
												<param name="EnemyTarget" value="$enemy_attacking" />
												<param name="Cue_Mission" value="$Cue_Mission" />
												<param name="Cue_PlayerKill" value="$Cue_PlayerKill" />
												<param name="Attacker" value="$friend" />
												<param name="Cue_From" value="EnemyTargets_Accumulate" />
											</run_actions>
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$EnemyFactions.indexof.{$enemy_attacking.owner}: ' + $Cue_Mission.$EnemyFactions.indexof.{$enemy_attacking.owner}" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<do_if value="not $Cue_Mission.$EnemyFactions.indexof.{$enemy_attacking.owner}">
												<do_if value="$enemy_attacking.owner != faction.criminal">
													<append_to_list name="$Cue_Mission.$EnemyFactions" exact="$enemy_attacking.owner" />
													<do_if value="$Cue_NewEnemyFaction.exists">
														<signal_cue_instantly cue="$Cue_NewEnemyFaction" param="table[$faction = $enemy_attacking.owner]" />
													</do_if>
												</do_if>
											</do_if>
										</do_if>
										<run_actions ref="EnemyTargets_SetPlayerTarget">
											<param name="Cue_Mission" value="$Cue_Mission" />
										</run_actions>
										<debug_text text="$Cue_Mission.$MissionId + ' $Cue_EnemyFound: ' + $Cue_EnemyFound" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<do_if value="$Cue_EnemyFound">
											<signal_cue_instantly cue="$Cue_EnemyFound" param="table[$enemyTarget = $enemy_attacking]" /> 
										</do_if>
										<set_value name="$isAttackingStronger" exact="@md.$DefaultShipStrengthTable.{@$enemy_attacking.class} gt @md.$DefaultShipStrengthTable.{@$Cue_Mission.$attacker_largest.class}" />
										<do_if value="$Cue_Mission.hasguidance and md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets">
											<debug_text text="$Cue_Mission.$MissionId + ' md.$DefaultShipStrengthTable.{@$enemy_attacking.class}: ' + @md.$DefaultShipStrengthTable.{@$enemy_attacking.class}" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<debug_text text="$Cue_Mission.$MissionId + ' md.$DefaultShipStrengthTable.{@$Cue_Mission.$attacker_largest.class}: ' + @md.$DefaultShipStrengthTable.{@$Cue_Mission.$attacker_largest.class}" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<debug_text text="$Cue_Mission.$MissionId + ' $isAttackingStronger: ' + $isAttackingStronger" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										</do_if>
										<do_if value="$isAttackingStronger">
											<set_value name="$Cue_Mission.$attacker_largest" exact="$enemy_attacking" />
											<set_value name="$Cue_Mission.$attacker_largestClass" exact="$enemy_attacking.class" />
										</do_if>
									</do_if>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="EnemyTargets_FindInterval_Start">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
							</actions>
							<cues>
								<cue name="EnemyTargets_FindInterval" instantiate="true" checktime="player.age + 5s" checkinterval="5s">
									<conditions>
										<check_any>
											<check_value value="$Cue_Mission.hasmissionoffer" />
											<check_value value="$Cue_Mission.hasmission" />
										</check_any>
									</conditions>
									<actions>
										<debug_text text="''" chance="@md.$kuertee_interval" />
										<debug_text text="$Cue_Mission.$MissionId + ' $Objective_Step: ' + @$Cue_Mission.$Objective_Step" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<do_if value="
											$Cue_Mission.hasmission
											and
											(
												(
													(
														@$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_mayday
														or
														@$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_escort
														or
														@$Cue_Mission.$kEMissionType == md.kuertee_emergent_missions.kEMissions.$missionType_defendPirate
													)
													and
													@$Cue_Mission.$isEscortNearby
												)
												or
												(
													[md.kuertee_emergent_missions.kEMissions.$missionType_patrol,
													md.kuertee_emergent_missions.kEMissions.$missionType_raid].indexof.{@$Cue_Mission.$kEMissionType}
												)
											)
										">
											<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$Ship.sector: ' + $Cue_Mission.$Ship.sector" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<do_if value="@$Cue_Mission.$Ship.sector">
												<set_value name="$enemy_found" exact="null" />
												<set_value name="$enemies_found" exact="[]" />
												<do_if value="not @$Cue_Mission.$TargetSector">
													<find_ship name="$enemies_found" space="$Cue_Mission.$Ship.sector" sortbydistanceto="$Cue_Mission.$Ship" multiple="true">
														<match owner="faction.player" negate="true" />
														<match owner="faction.criminal" negate="true" />
														<match_relation_of faction="$Cue_Mission.$Ship.owner" comparison="lt" relation="neutral" />
													</find_ship>
													<do_if value="@$Cue_Mission.$EnemyFactions.count">
														<do_for_each name="$faction_inList" in="$Cue_Mission.$EnemyFactions">
															<find_station name="$enemies_found" space="$Cue_Mission.$Ship.sector" owner="$faction_inList" multiple="true" append="true" />
														</do_for_each>
													</do_if>
												</do_if>
												<do_elseif value="@player.occupiedship.sector == @$Cue_Mission.$TargetSector">
													<find_ship name="$enemies_found" space="$Cue_Mission.$TargetSector" sortbydistanceto="$Cue_Mission.$TargetSector" multiple="true">
													<!-- <find_ship name="$enemies_found" space="$Cue_Mission.$TargetSector" sortbydistanceto="player.occupiedship" multiple="true"> -->
														<match owner="faction.player" negate="true" />
														<match owner="faction.criminal" negate="true" />
														<match_relation_of faction="$Cue_Mission.$Ship.owner" comparison="lt" relation="neutral" />
													</find_ship>
													<do_if value="@$Cue_Mission.$EnemyFactions.count">
														<do_for_each name="$faction_inList" in="$Cue_Mission.$EnemyFactions">
															<find_station name="$enemies_found" space="$Cue_Mission.$TargetSector" owner="$faction_inList" multiple="true" append="true" />
														</do_for_each>
													</do_if>
												</do_elseif>
												<!-- find first enemy that is within radar range of faction or player faction -->
												<debug_text text="$Cue_Mission.$MissionId + ' $EnemyFactions: ' + $Cue_Mission.$EnemyFactions" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
												<debug_text text="$Cue_Mission.$MissionId + ' $enemies_found.count: ' + $enemies_found.count" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
												<do_for_each name="$enemy_inList" in="$enemies_found">
													<do_if value="
														(
															(not $IsLimitEnemiesToAttackerFactions) or
															$Cue_Mission.$EnemyFactions.indexof.{$enemy_inList.owner}
														) and
														(not @$enemy_inList.islasertower) and 
														(not @$enemy_inList.isunit) and
														(not $EnemyTargets.indexof.{$enemy_inList})
													">
														<do_if value="@$Cue_Mission.$Cue_FactionAI.$Ships.count">
															<do_if value="player.occupiedship and player.occupiedship.distanceto.{$enemy_inList} le player.occupiedship.maxradarrange">
																<set_value name="$enemy_found" exact="$enemy_inList" />
																<break />
															</do_if>
															<do_else>
																<do_for_each name="$ship_inFleet" in="$Cue_Mission.$Cue_FactionAI.$Ships">
																	<do_if value="$ship_inFleet.distanceto.{$enemy_inList} le $ship_inFleet.maxradarrange">
																		<set_value name="$enemy_found" exact="$enemy_inList" />
																		<break />
																	</do_if>
																</do_for_each>
															</do_else>
														</do_if>
														<do_else>
															<do_if value="$Cue_Mission.$Ship.distanceto.{$enemy_inList} le $Cue_Mission.$Ship.maxradarrange">
																<set_value name="$enemy_found" exact="$enemy_inList" />
																<break />
															</do_if>
														</do_else>
														<do_if value="(not $enemy_found) and @$Cue_Mission.$TargetSector.exists">
															<find_object name="$station_radar" class="class.station" space="$Cue_Mission.$TargetSector" owner="$Cue_Mission.$Faction" sortbydistanceto="$enemy_inList" />
															<do_if value="@$station_radar.exists and $station_radar.distanceto.{$enemy_inList} le $station_radar.maxradarrange">
																<set_value name="$enemy_found" exact="$enemy_inList" />
																<break />
															</do_if>
														</do_if>
													</do_if>
												</do_for_each>
												<debug_text text="$Cue_Mission.$MissionId + ' $enemy_found: ' + @$enemy_found + ' (' + @$enemy_found.knownname + ', ' + @$enemy_found.idcode + ', ' + @$enemy_found.owner + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
												<do_if value="@$enemy_found.isoperational">
													<do_if value="not $IsLimitEnemiesToAttackerFactions">
														<do_if value="not $Cue_Mission.$EnemyFactions.indexof.{$enemy_found.owner}">
															<do_if value="$enemy_found.owner != faction.criminal">
																<append_to_list name="$Cue_Mission.$EnemyFactions" exact="$enemy_found.owner" />
																<do_if value="$Cue_NewEnemyFaction.exists">
																	<signal_cue_instantly cue="$Cue_NewEnemyFaction" param="table[$faction = $enemy_found.owner]" />
																</do_if>
															</do_if>
														</do_if>
													</do_if>
													<do_if value="not $EnemyTargets.indexof.{$enemy_found}">
														<add_to_group groupname="$EnemyTargets" object="$enemy_found" />
														<run_actions ref="DamageCalculator_AddTarget">
															<param name="EnemyTarget" value="$enemy_found" />
															<param name="Cue_Mission" value="$Cue_Mission" />
															<param name="Cue_PlayerKill" value="$Cue_PlayerKill" />
															<param name="Cue_From" value="EnemyTargets_FindInterval_Start" />
														</run_actions>
													</do_if>
													<set_value name="$enemy_distance" exact="$enemy_found.distanceto.{$Cue_Mission.$Ship}" />
													<debug_text text="$Cue_Mission.$MissionId + ' $enemy_distance: ' + $enemy_distance" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
													<do_if value="(not $IsFindEnemiesOutOfRadarRange) and $enemy_distance gt 20km">
														<debug_text text="$Cue_Mission.$MissionId + ' $enemy_found (none nearby): ' + $enemy_found + ' (' + $enemy_found.knownname + ', ' + @$enemy_found.idcode + ', hasrelation.enemy:' + $enemy_found.hasrelation.enemy.{$Cue_Mission.$Ship.owner} + ') distance: ' + $enemy_distance" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
														<do_if value="$Cue_NoEnemiesNearby">
															<signal_cue cue="$Cue_NoEnemiesNearby" />
														</do_if>
													</do_if>
													<do_else>
														<debug_text text="$Cue_Mission.$MissionId + ' $enemy_found: ' + $enemy_found + ' (' + $enemy_found.knownname + ', ' + @$enemy_found.idcode + ', hasrelation.enemy:' + $enemy_found.hasrelation.enemy.{$Cue_Mission.$Ship.owner} + ') distance: ' + $enemy_distance" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
														<run_actions ref="EnemyTargets_SetPlayerTarget">
															<param name="Cue_Mission" value="$Cue_Mission" />
														</run_actions>
														<do_if value="$Cue_EnemyFound">
															<signal_cue_instantly cue="$Cue_EnemyFound" param="table[$enemyTarget = $enemy_found]" /> 
														</do_if>
													</do_else>
												</do_if>
												<do_else>
													<do_for_each name="$enemy_inList" in="$EnemyTargets" reverse="true">
														<do_if value="
															(
																@$Cue_Mission.$TargetSector and
																$enemy_inList.sector != $Cue_Mission.$TargetSector
															) or
															(
																(not @$Cue_Mission.$TargetSector) and
																$enemy_inList.sector != $Cue_Mission.$Ship.sector
															)
														">
															<remove_from_group group="$EnemyTargets" object="$enemy_inList" />
														</do_if>
													</do_for_each>
													<set_value name="$isMoreEnemies" exact="$EnemyTargets.count gt 0" />
													<debug_text text="$Cue_Mission.$MissionId + ' $isMoreEnemies: ' + $isMoreEnemies" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
													<do_if value="not $isMoreEnemies">
														<debug_text text="$Cue_Mission.$MissionId + ' $Cue_NoEnemiesFound: ' + $Cue_NoEnemiesFound" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
														<do_if value="$Cue_NoEnemiesFound">
															<signal_cue cue="$Cue_NoEnemiesFound" />
														</do_if>
													</do_if>
													<do_else>
														<run_actions ref="EnemyTargets_SetPlayerTarget">
															<param name="Cue_Mission" value="$Cue_Mission" />
														</run_actions>
													</do_else>
												</do_else>
											</do_if>
										</do_if>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="EnemyTargets_FindInterval_Stop">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<reset_cue cue="parent" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="EnemyTargets_ChangeSector" instantiate="true">
							<conditions>
								<check_any>
									<event_object_changed_sector group="global.$PlayerContainerGroup" />
									<event_object_changed_sector group="$EnemyTargets" />
								</check_any>
								<!-- <check_value value="$IsForgetEnemyTargetOnNewSector" /> -->
							</conditions>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' event.object: ' + event.object + ' (' + event.object.knownname + ', ' + @event.object.idcode + ', hasrelation.enemy:' + @event.object.hasrelation.enemy.{$Cue_Mission.$Ship.owner} + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
								<do_if value="@player.target.exists and event.object == player.target">
									<debug_text text="$Cue_Mission.$MissionId + ' player.target: ' + player.target + ' (' + player.target.knownname + ', ' + @player.target.idcode" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
									<raise_lua_event name="'kEM_set_target'" param="null" />
								</do_if>
								<do_if value="$IsForgetEnemyTargetOnNewSector">
									<remove_from_group group="$EnemyTargets" object="event.object" />
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<library name="EnemyTargets_SetPlayerTarget" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
							</params>
							<actions>
								<set_value name="$EnemyFactions" exact="$Cue_Mission.$EnemyFactions" />
								<set_value name="$EnemyTargets" exact="$Cue_Mission.$EnemyTargets" />
								<do_if value="@$Cue_Mission.$isOkToAssignTargets">
									<do_if value="
										player.occupiedship
										and
										(not player.ship.isclass.spacesuit)
										and
										(
											((not @player.target.isoperational) and (not @player.target.hullpercentage))
											or
											(
												@player.target.isclass.station
												and
												(not @player.occupiedship.isclass.[class.ship_l, class.ship_xl])
											)
											or
											(not @player.target.hascontext.{player.entity.sector})
										)
										and
										$Cue_Mission.hasguidance
										and
										(
											player.sector == @$Cue_Mission.$Ship.sector or
											player.sector == @$Cue_Mission.$TargetSector
										)
										and
										(not @$Cue_Mission.$time_missionEnd)
									">
										<set_value name="$enemy_best" exact="null" />
										<run_actions ref="EnemyTargets_FindBestTarget" result="$enemy_best">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Ship_playerOwned" value="player.ship" />
											<param name="EnemyFactions" value="$EnemyFactions" />
											<param name="EnemyTargets" value="$EnemyTargets" />
										</run_actions>
										<do_if value="@$enemy_best.isoperational and @$enemy_best.owner != faction.criminal">
											<debug_text text="$Cue_Mission.$MissionId + ' $enemy_best (to player): ' + $enemy_best + ' (' + $enemy_best.knownname + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<set_value name="$Cue_Mission.$isEnemyTargetGivenToPlayer" exact="true" />
											<raise_lua_event name="'kEM_set_target'" param="$enemy_best" />
											<!-- <run_actions ref="Comm_Engage">
												<param name="Cue_Mission" value="$Cue_Mission" />
											</run_actions> -->
										</do_if>
									</do_if>
									<!-- $Cue_Mission.$GrouOfOne_aiDefendersTarget is set at AIPilotOrders_ProtectShip_AttackTarget -->
									<debug_text text="$Cue_Mission.$MissionId + ' $GrouOfOne_aiDefendersTarget.{1}: ' + @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1} + ' (' + @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1}.knownname + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
									<debug_text text="$Cue_Mission.$MissionId + ' $Ships_aiDefenders.{1}: ' + @$Cue_Mission.$Ships_aiDefenders.{1} + ' (' + @$Cue_Mission.$Ships_aiDefenders.{1}.knownname + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
									<!-- <do_if value="(not $Cue_Mission.$GrouOfOne_aiDefendersTarget.count) and $Cue_Mission.$Ships_aiDefenders.count"> -->
								</do_if>
								<do_if value="@$Cue_Mission.$Ships_aiDefenders.count">
									<set_value name="$aiShip_largest" exact="null" />
									<set_value name="$size_largest" exact="0" />
									<do_for_each name="$ship_inList" in="$Cue_Mission.$Ships_aiDefenders">
										<do_if value="@$Cue_Mission.$TargetSector.exists">
											<do_if value="$ship_inList.size gt $size_largest and $ship_inList.hascontext.{$Cue_Mission.$TargetSector}">
												<set_value name="$size_largest" exact="$ship_inList.size" />
												<set_value name="$aiShip_largest" exact="$ship_inList" />
											</do_if>
										</do_if>
										<do_else>
											<do_if value="$ship_inList.size gt $size_largest and $ship_inList.hascontext.{$Cue_Mission.$Ship.sector}">
												<set_value name="$size_largest" exact="$ship_inList.size" />
												<set_value name="$aiShip_largest" exact="$ship_inList" />
											</do_if>
										</do_else>
									</do_for_each>
									<do_if value="$aiShip_largest and $aiShip_largest != player.occupiedship">
										<debug_text text="$Cue_Mission.$MissionId + ' $aiShip_largest: ' + $aiShip_largest + ' (' + $aiShip_largest.knownname + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
										<set_value name="$enemy_best" exact="null" />
										<run_actions ref="EnemyTargets_FindBestTarget" result="$enemy_best">
											<param name="Cue_Mission" value="$Cue_Mission" />
											<param name="Ship_playerOwned" value="$aiShip_largest" />
											<param name="EnemyFactions" value="$EnemyFactions" />
											<param name="EnemyTargets" value="$EnemyTargets" />
										</run_actions>
										<do_if value="@$enemy_best.isoperational and @$enemy_best.owner != faction.criminal">
											<debug_text text="$Cue_Mission.$MissionId + ' $enemy_best (to ai defender): ' + $enemy_best + ' (' + $enemy_best.knownname + ')'" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<set_value name="$isGiveTarget" exact="
												$aiShip_largest.isclass.[class.ship_l, class.ship_xl]
												or
												$enemy_best.size lt $aiShip_largest.size * 1.25
												or
												(
													(@$aiShip_largest.commander.subordinates.count + @$aiShip_largest.subordinates.count)
													ge
													(@$enemy_best.turrets.operational.count + @$enemy_best.turrets.operational.count) * 0.75
												)
											" />
											<do_if value="$isGiveTarget and @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1}.isoperational and @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1}.isoperational">
												<set_value name="$sizeDiff_new" exact="[$aiShip_largest.size - $enemy_best.size, $enemy_best.size - $aiShip_largest.size].max" />
												<set_value name="$sizeDiff_old" exact="[$aiShip_largest.size - @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1}.size, @$Cue_Mission.$GrouOfOne_aiDefendersTarget.{1}.size - $aiShip_largest.size].max" />
												<debug_text text="$Cue_Mission.$MissionId + ' $sizeDiff_new: ' + $sizeDiff_new + ' $sizeDiff_old: ' + $sizeDiff_old" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
												<do_if value="$sizeDiff_new lt $sizeDiff_old">
													<set_value name="$isGiveTarget" exact="false" />
												</do_if>
											</do_if>
											<debug_text text="$Cue_Mission.$MissionId + ' $isGiveTarget: ' + $isGiveTarget" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets else 0" />
											<do_if value="$isGiveTarget">
												<set_value name="$Cue_Mission.$isEnemyTargetGivenToPlayer" exact="true" />
												<signal_objects object="player.galaxy" param="'kEMission_protect_ship_attack_target'" param2="$Cue_Mission" param3="table[$enemy_best = $enemy_best, $enemies_all = $EnemyTargets]" />
											</do_if>
										</do_if>
									</do_if>
								</do_if>
							</actions>
						</library>
						<library name="EnemyTargets_FindBestTarget" purpose="run_actions">
							<params>
								<param name="Cue_Mission" />
								<param name="Ship_playerOwned" />
								<param name="EnemyFactions" />
								<param name="EnemyTargets" />
							</params>
							<actions>
								<set_value name="$enemy_best" exact="null" />
								<set_value name="$weight_faction" exact="$Ship_playerOwned.size * 100" />
								<set_value name="$weight_fighter" exact="$Ship_playerOwned.size * 50" />
								<set_value name="$weight_size" exact="1" />
								<do_if value="$Cue_Mission.hasguidance and md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets and player.occupiedship">
									<debug_text text="'pre sort'" />
									<do_for_each name="$enemy_inList" in="$EnemyTargets">
										<debug_text text="$enemy_inList.name + ', ' + $enemy_inList.idcode + ', ' + $enemy_inList.distanceto.{player.occupiedship}" />
									</do_for_each>
								</do_if>
								<sort_group group="$EnemyTargets" sortbyvalue="
									(
										$weight_faction * $EnemyFactions.indexof.{loop.element.owner}
										+ $weight_fighter * (loop.element.primarypurpose == purpose.fight)
										+ $weight_size * (($Ship_playerOwned.size + 1) / ([$Ship_playerOwned.size - loop.element.size, loop.element.size - $Ship_playerOwned.size].max + 1))
									)
									*
									(
										loop.element.distanceto.{$Ship_playerOwned} / $Ship_playerOwned.maxradarrange
										*
										(
											(
												$Ship_playerOwned.isclass.[class.ship_l, class.ship_xl]
												and
												(not loop.element.isclass.[class.ship_xs, class.ship_s, class.ship_m])
											)
											+
											(
												$Ship_playerOwned.isclass.[class.ship_s, class.ship_m]
												and
												(not loop.element.isclass.[class.ship_l, class.ship_xl, class.station])
											)
										)
										+
										$Ship_playerOwned.maxradarrange / loop.element.distanceto.{$Ship_playerOwned}
									)
								" sortdescending="true" />
								<do_if value="$Cue_Mission.hasguidance and md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets and player.occupiedship">
									<debug_text text="'post sort'" />
									<do_for_each name="$enemy_inList" in="$EnemyTargets">
										<debug_text text="$enemy_inList.name + ', ' + $enemy_inList.idcode + ', ' + $enemy_inList.distanceto.{player.occupiedship}" />
									</do_for_each>
								</do_if>
								<do_if value="$Ship_playerOwned.hascontext.{$EnemyTargets.{1}.sector}">
									<set_value name="$enemy_best" exact="$EnemyTargets.{1}" />
								</do_if>
								<return value="$enemy_best" />
							</actions>
						</library>
						<cue name="EnemyTargets_UpdateIfRequired">
							<actions>
								<do_if value="@$Cue_Mission.$DamageAndKillsList">
									<debug_text text="'$Cue_Mission.$DamageAndKillsList (pre): ' + $Cue_Mission.$DamageAndKillsList" />
									<run_actions ref="EnemyTargets_UpdateDamageAndKillsList">
										<param name="Cue_Mission" value="$Cue_Mission" />
										<param name="Cue_PlayerKill" value="$Cue_PlayerKill" />
									</run_actions>
									<remove_value name="$Cue_Mission.$DamageAndKillsList" />
									<debug_text text="'$Cue_Mission.$DamageAndKillsList (post): ' + @$Cue_Mission.$DamageAndKillsList" />
								</do_if>
							</actions>
						</cue>
						<cue name="EnemyTargets_RunOnce">
							<actions>
								<set_value name="$Cue_Mission.$Cue_EnemyTargets_FindInterval_Start" exact="EnemyTargets_FindInterval_Start" />
								<set_value name="$Cue_Mission.$Cue_EnemyTargets_FindInterval_Stop" exact="EnemyTargets_FindInterval_Stop" />
								<do_if value="not [
									md.kuertee_emergent_missions.kEMissions.$missionType_raid,
									md.kuertee_emergent_missions.kEMissions.$missionType_patrol,
									md.kuertee_emergent_missions.kEMissions.$missionType_hunt,
								].indexof.{$Cue_Mission.$kEMissionType}">
									<signal_cue cue="EnemyTargets_FindInterval_Start" />
								</do_if>
							</actions>
						</cue>
						<cue name="EnemyTargets_DebugChat">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_all>
										<check_any>
											<check_value value="event.param3.$text == 'debug em mission targets'" />
											<check_value value="event.param3.$text == 'debug em mission targets ships'" />
										</check_any>
										<check_value value="$Cue_Mission.hasguidance" />
									</check_all>
									<check_value value="event.param3.$text == 'debug em mayday cues'" />
									<check_value value="event.param3.$text == 'debug em raid cues'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="event.param3" />
								<do_if value="event.param3.$text == 'debug em mission targets'">
									<debug_text text="'$Cue_Mission.$MissionId: ' + $Cue_Mission.$MissionId + ' $Cue_Mission.$isEscortNearby: ' + $Cue_Mission.$isEscortNearby" />
									<debug_text text="'EnemyTargets_Accumulate.state: ' + EnemyTargets_Accumulate.state + ' EnemyTargets_Accumulate.time: ' + EnemyTargets_Accumulate.time" />
									<debug_text text="'EnemyTargets_FindInterval_Start.state: ' + EnemyTargets_FindInterval_Start.state + ' EnemyTargets_FindInterval_Start.time: ' + EnemyTargets_FindInterval_Start.time + ' (elapsed: ' + (player.age - EnemyTargets_FindInterval_Start.time) + ')'" />
									<debug_text text="'EnemyTargets_FindInterval.state: ' + EnemyTargets_FindInterval.state + ' EnemyTargets_FindInterval.time: ' + EnemyTargets_FindInterval.time + ' (next: ' + (player.age - EnemyTargets_FindInterval.time) + ')'" />
									<debug_text text="'EnemyTargets_FindInterval_Stop.state: ' + EnemyTargets_FindInterval_Stop.state + ' EnemyTargets_FindInterval_Stop.time: ' + EnemyTargets_FindInterval_Stop.time + ' (next: ' + (player.age - EnemyTargets_FindInterval_Stop.time) + ')'" />
									<debug_text text="'$EnemyTargets.count: ' + $EnemyTargets.count" />
									<do_for_each name="$enemy_inList" in="$EnemyTargets">
										<debug_text text="'    $enemy_inList: ' + $enemy_inList + ' (' + $enemy_inList.knownname + ', ' + $enemy_inList.idcode + ')'" />
									</do_for_each>
								</do_if>
								<do_elseif value="event.param3.$text == 'debug em mission targets ships'">
									<debug_text text="$Ships" />
								</do_elseif>
								<do_elseif value="['debug em mayday cues', 'debug em raid cues'].indexof.{event.param3.$text}">
									<debug_text text="$Cue_Mission.$MissionId + ' $Faction: ' + @$Cue_Mission.$Faction + ' $TargetSector: ' + @$Cue_Mission.$TargetSector.knownname + ' $OpposingFaction: ' + @$Cue_Mission.$OpposingFaction" />
									<debug_text text="'    EnemyTargets_FindInterval_Start.state: ' + EnemyTargets_FindInterval_Start.state" />
								</do_elseif>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</library>
				<library name="EnemyTargets_UpdateDamageAndKillsList" purpose="run_actions">
					<params>
						<param name="Cue_Mission" />
						<param name="Cue_PlayerKill" />
					</params>
					<actions>
						<debug_text text="$Cue_Mission.$MissionId + ' hasmissionoffer: ' + $Cue_Mission.hasmissionoffer + ' hasmission: ' + $Cue_Mission.hasmission" />
						<debug_text text="$Cue_Mission.$MissionId + ' $DamageAndKillsList (pre update): ' + $Cue_Mission.$DamageAndKillsList" />
						<do_if value="$Cue_Mission.$DamageAndKillsList.keys.list.count">
							<set_value name="$DamageAndKillsData" exact="DamageCalculator.$DamageAndKillsData" />
							<do_for_each name="$enemy_inList" in="$Cue_Mission.$DamageAndKillsList.keys.list">
								<do_if value="not @$DamageAndKillsData.{$enemy_inList}">
									<set_value name="$DamageAndKillsData.{$enemy_inList}" exact="table[
										$enemy = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$enemy,
										$idCode = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$idCode,
										$cues = [],
										$cues_playerKill = [],
										$name = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$name,
										$class = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$class,
										$size = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$size,
										$macro = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$macro,
										$faction = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$faction,
										$hull = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$hull,
										$damage_total = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$damage_total,
										$isPlayerKilled = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$isPlayerKilled,
										$killer = $Cue_Mission.$DamageAndKillsList.{$enemy_inList}.$killer
									]" />
								</do_if>
								<append_to_list name="$DamageAndKillsData.{$enemy_inList}.$cues" exact="$Cue_Mission" />
								<append_to_list name="$DamageAndKillsData.{$enemy_inList}.$cues_playerKill" exact="$Cue_PlayerKill" />
								<do_if value="$enemy_inList.isoperational">
									<add_to_group groupname="DamageCalculator.$EnemyTargets" object="$enemy_inList" />
								</do_if>
							</do_for_each>
						</do_if>
						<debug_text text="$Cue_Mission.$MissionId + ' $DamageAndKillsList (post update): ' + $Cue_Mission.$DamageAndKillsList" />
					</actions>
				</library>
				<!--
					
					       ,,                                                            ,,                  ,,    ,,    ,,
					     `7MM                                                          `7MM      `7MM        db  `7MM  `7MM
					       MM                                                            MM        MM              MM    MM
					  ,M""bMM  `7MMpMMMb.pMMMb.  .P"Ybmmm      ,6"Yb.  `7MMpMMMb.   ,M""bMM        MM  ,MP'`7MM    MM    MM  ,pP"Ybd
					,AP    MM    MM    MM    MM :MI  I8       8)   MM    MM    MM ,AP    MM        MM ;Y     MM    MM    MM  8I   `"
					8MI    MM    MM    MM    MM  WmmmP"        ,pm9MM    MM    MM 8MI    MM        MM;Mm     MM    MM    MM  `YMMMa.
					`Mb    MM    MM    MM    MM 8M            8M   MM    MM    MM `Mb    MM        MM `Mb.   MM    MM    MM  L.   I8
					 `Wbmd"MML..JMML  JMML  JMML.YMMMMMb      `Moo9^Yo..JMML  JMML.`Wbmd"MML.    .JMML. YA..JMML..JMML..JMML.M9mmmP'
					                            6'     dP
					                            Ybmmmd'
				 -->
				<cue name="DamageCalculator" namespace="this" version="5">
					<actions>
						<!-- <set_value name="$DamageAndKillsData" exact="table[]" /> -->
						<create_group groupname="$EnemyTargets" />
						<set_value name="$idCodes" exact="[]" />
						<set_value name="$dmgAndKillsData" exact="[]" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<debug_text text="'$EnemyTargets.count: ' + $EnemyTargets.count" />
						<do_for_each name="$enemy_inList" in="$EnemyTargets" reverse="true">
							<debug_text text="'$enemy_inList: ' + $enemy_inList + ' (' + @$enemy_inList.knownname + ', ' + @$enemy_inList.idcode + ', ' + @$enemy_inList.sector + ')'" />
							<do_if value="@$DamageAndKillsData.{$enemy_inList}">
								<set_value name="$cues" exact="$DamageAndKillsData.{$enemy_inList}.$cues" />
								<debug_text text="'    $cues.count: ' + $cues.count" />
								<do_for_each name="$cue_inList" in="$cues" reverse="true">
									<do_if value="(not $cue_inList.exists) or (not @$cue_inList.hasmission)">
										<remove_from_list name="$cues" exact="$cue_inList" />
										<debug_text text="'        remove (invalid cue): ' + $cue_inList + ' $MissionId: ' + @$cue_inList.$MissionId" />
									</do_if>
								</do_for_each>
								<do_if value="not $cues.count">
									<remove_value name="$DamageAndKillsData.{$enemy_inList}" />
									<remove_from_group group="$EnemyTargets" object="$enemy_inList" />
									<debug_text text="'    remove (no cues): ' + $enemy_inList" />
								</do_if>
							</do_if>
							<do_else>
								<remove_from_group group="$EnemyTargets" object="$enemy_inList" />
								<debug_text text="'    remove (no data): ' + $enemy_inList" />
							</do_else>
						</do_for_each>
						<debug_text text="'$EnemyTargets.count: ' + $EnemyTargets.count" />
						<debug_text text="'$DamageAndKillsData.keys.list.count: ' + $DamageAndKillsData.keys.list.count" />
						<do_for_each name="$enemy_inList" in="$DamageAndKillsData.keys.list" reverse="true">
							<debug_text text="'$enemy_inList: ' + $enemy_inList + ' (' + @$enemy_inList.knownname + ', ' + @$enemy_inList.idcode + ', ' + @$enemy_inList.sector + ')'" />
							<set_value name="$cues" exact="$DamageAndKillsData.{$enemy_inList}.$cues" />
							<debug_text text="'    $cues.count: ' + $cues.count" />
							<do_for_each name="$cue_inList" in="$cues" reverse="true">
								<do_if value="(not $cue_inList.exists) or (not @$cue_inList.hasmission)">
									<remove_from_list name="$cues" exact="$cue_inList" />
									<debug_text text="'        remove (invalid cue): ' + $cue_inList + ' $MissionId: ' + @$cue_inList.$MissionId" />
								</do_if>
							</do_for_each>
							<do_if value="not $cues.count">
								<remove_value name="$DamageAndKillsData.{$enemy_inList}" />
								<remove_from_group group="$EnemyTargets" object="$enemy_inList" />
								<debug_text text="'    remove (no cues): ' + $enemy_inList" />
							</do_if>
							<do_elseif value="not $EnemyTargets.indexof.{$enemy_inList}">
								<add_to_group groupname="$EnemyTargets" object="$enemy_inList" />
								<debug_text text="'    add to group (has data): ' + $enemy_inList" />
							</do_elseif>
						</do_for_each>
						<debug_text text="'$DamageAndKillsData.keys.list.count: ' + $DamageAndKillsData.keys.list.count" />
						<debug_text text="'$EnemyTargets.count: ' + $EnemyTargets.count" />
					</patch>
					<patch sinceversion="3">
						<debug_text text="'patch sinceversion 3, state: ' + this.state" />
						<set_value name="$idCodes" exact="[]" />
						<set_value name="$dmgAndKillsData" exact="[]" />
						<do_for_each name="$nme_inList" in="$EnemyTargets">
							<append_to_list name="$idCodes" exact="$nme_inList.idcode" />
							<append_to_list name="$dmgAndKillsData" exact="$DamageAndKillsData.{$nme_inList}" /> 
						</do_for_each>
						<remove_value name="$DamageAndKillsData" />
					</patch>
					<patch sinceversion="4">
						<debug_text text="'patch sinceversion 4, state: ' + this.state" />
						<do_for_each name="$nme_inList" in="$EnemyTargets">
							<do_if value="@$nme_inList.pilot.exists">
								<do_if value="@$nme_inList.pilot.$kEM_lastAttack">
									<set_value name="$nme_inList.pilot.$kEM_lastAttack" exact="[$nme_inList.pilot.$kEM_lastAttack.$attacker]" />
								</do_if>
							</do_if>
							<do_elseif value="@$nme_inList.defencenpc.exists">
								<do_if value="$nme_inList.defencenpc.$kEM_lastAttack">
									<set_value name="$nme_inList.defencenpc.$kEM_lastAttack" exact="[$nme_inList.defencenpc.$kEM_lastAttack.$attacker]" />
								</do_if>
							</do_elseif>
						</do_for_each>
					</patch>
					<patch sinceversion="5">
						<debug_text text="'patch sinceversion 5, state: ' + this.state" />
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" exact="100" />
						<run_actions ref="DamageCalculator_CleanData">
							<param name="Cue_Mission" value="$Cue_Mission" />
						</run_actions>
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" exact="0" />
					</patch>
					<cues>
						<!-- <library name="GetDamageAndKillsData" purpose="run_actions">
							<params>
								<param name="EnemyTarget" />
							</params>
							<actions>
							</actions>
						</library> -->
						<library name="DamageCalculator_AddTarget" purpose="run_actions">
							<params>
								<param name="EnemyTarget" />
								<param name="Cue_Mission" />
								<param name="Cue_PlayerKill" default="null" />
								<param name="Attacker" default="null" />
								<param name="Cue_From" default="null" />
							</params>
							<actions>
								<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
								<set_value name="$dmgAndKillsData" exact="DamageCalculator.$dmgAndKillsData" />
								<set_value name="$isNew" exact="false" />
								<set_value name="$idx" exact="$idCodes.indexof.{$EnemyTarget.idcode}" />
								<do_if value="not $idx">
									<set_value name="$isNew" exact="true" />
									<append_to_list name="$idCodes" exact="$EnemyTarget.idcode" />
									<run_actions ref="GetName" result="$name_enemyTarget"><param name="Component" value="$EnemyTarget" /></run_actions>
									<append_to_list name="$dmgAndKillsData" exact="table[
										$enemy = $EnemyTarget,
										$idCode = @$EnemyTarget.idcode,
										$cues = [],
										$cues_playerKill = [],
										$name = $name_enemyTarget,
										$class = $EnemyTarget.class,
										$size = $EnemyTarget.size,
										$macro = $EnemyTarget.macro,
										$faction = $EnemyTarget.owner,
										$hull = $EnemyTarget.hullpercentage,
										$damage_total = 0,
										$isPlayerKilled = false,
										$killer = null
									]" />
									<set_value name="$idx" exact="$idCodes.count" />
								</do_if>
								<do_if value="$dmgAndKillsData.{$idx}.$idCode != $EnemyTarget.idcode or $idCodes.count != $dmgAndKillsData.count">
									<!-- clean first -->
									<run_actions ref="DamageCalculator_CleanData">
										<param name="Cue_Mission" value="$Cue_Mission" />
									</run_actions>
								</do_if>
								<set_value name="$damageData" exact="$dmgAndKillsData.{$idx}" />
								<do_if value="$isNew">
									<do_if value="@$Attacker.isplayerowned">
										<do_if value="not $EnemyTarget.hullpercentage">
											<!-- one-shot kill? -->
											<set_value name="$damageData.$damage_total" exact="100" />
										</do_if>
										<do_elseif value="$EnemyTarget.hullpercentage lt 100">
											<!-- first attack? -->
											<set_value name="$damageData.$damage_total" exact="100 - $EnemyTarget.hullpercentage" />
										</do_elseif>
									</do_if>
								</do_if>
								<do_if value="not $damageData.$cues.indexof.{$Cue_Mission}">
									<append_to_list name="$damageData.$cues" exact="$Cue_Mission" />
								</do_if>
								<do_if value="@$Cue_PlayerKill.exists and (not $damageData.$cues_playerKill.indexof.{$Cue_PlayerKill})">
									<append_to_list name="$damageData.$cues_playerKill" exact="$Cue_PlayerKill" />
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_From: ' + $Cue_From + ' $EnemyTarget: ' + $EnemyTarget + ' (' + $EnemyTarget.knownname + ', ' + $EnemyTarget.idcode + ') $damageData: ' + $damageData" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" />
								<add_to_group groupname="DamageCalculator.$EnemyTargets" object="$EnemyTarget" />
								<return value="$damageData" />
							</actions>
						</library>
						<library name="DamageCalculator_CleanData" purpose="run_actions">
							<params>
								<param name="Cue_Mission" default="null" />
							</params>
							<actions>
								<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
								<set_value name="$dmgAndKillsData" exact="DamageCalculator.$dmgAndKillsData" />
								<clear_group group="DamageCalculator.$EnemyTargets" />
								<do_all counter="$i" exact="$dmgAndKillsData.count" reverse="true">
									<debug_text text="$i + ': ' + $dmgAndKillsData.{$i}.$idCode" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" />
									<set_value name="$cues_count" exact="0" />
									<do_if value="$Cue_Mission">
										<remove_from_list name="$dmgAndKillsData.{$i}.$cues" exact="$Cue_Mission" />
									</do_if>
									<do_for_each name="$cue" in="$dmgAndKillsData.{$i}.$cues">
										<do_if value="@$cue.exists">
											<debug_text text="'    ' + $cue.$MissionId" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" />
											<set_value name="$cues_count" exact="1" operation="add" />
										</do_if>
									</do_for_each>
									<do_if value="not $cues_count">
										<debug_text text="'removing: ' + $i" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" />
										<do_if value="@$dmgAndKillsData.{$i}.$enemy.exists">
											<remove_from_group group="DamageCalculator.$EnemyTargets" object="$dmgAndKillsData.{$i}.$enemy" />
										</do_if>
										<remove_value name="$idCodes.{$i}" />
										<remove_value name="$dmgAndKillsData.{$i}" />
									</do_if>
									<do_else>
										<set_value name="$idCodes.{$i}" exact="$dmgAndKillsData.{$i}.$idCode" />
										<do_if value="$dmgAndKillsData.{$i}.$enemy.isoperational">
											<add_to_group groupname="DamageCalculator.$EnemyTargets" object="$dmgAndKillsData.{$i}.$enemy" />
										</do_if>
									</do_else>
								</do_all>
								<do_if value="$idCodes.count != $dmgAndKillsData.count">
									<debug_text text="'resize_list $idCodes from: ' + $idCodes.count + ' to ' + $dmgAndKillsData.count" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets" />
									<resize_list list="$idCodes" count="$dmgAndKillsData.count" />
								</do_if>
							</actions>
						</library>
						<library name="DamageCalculator_GetDamageAndKillsList" purpose="run_actions">
							<params>
								<param name="Cue_Mission" default="null" />
							</params>
							<actions>
								<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
								<set_value name="$dmgAndKillsData" exact="DamageCalculator.$dmgAndKillsData" />
								<set_value name="$data" exact="[]" />
								<do_all counter="$i" exact="$dmgAndKillsData.count" reverse="true">
									<do_if value="$Cue_Mission == null or $dmgAndKillsData.{$i}.$cues.indexof.{$Cue_Mission}">
										<set_value name="$dmgAndKillsData.{$i}.$idx" exact="$i" />
										<append_to_list name="$data" exact="$dmgAndKillsData.{$i}" />
									</do_if>
								</do_all>
								<return value="$data" />
							</actions>
						</library>
						<cue name="DamageCalculator_Kill" namespace="this" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<!-- Event for the specified object being destroyed (object = destroyed object, param = killer, param2 = kill method, param3 = was parent killed) -->
									<event_object_destroyed group="parent.$EnemyTargets" />
								</check_any>
							</conditions>
							<actions>
								<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
								<set_value name="$dmgAndKillsData" exact="DamageCalculator.$dmgAndKillsData" />
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$enemy_killed" exact="event.param.$victim" />
									<set_value name="$killer" exact="event.param.$attacker" />
								</do_if>
								<do_elseif value="event.name == 'event_object_destroyed'">
									<set_value name="$enemy_killed" exact="event.object" />
									<set_value name="$killer" exact="event.param" />
								</do_elseif>
								<do_if value="$killer">
									<set_value name="$idx" exact="$idCodes.indexof.{$enemy_killed.idcode}" />
									<set_value name="$damageData" exact="$dmgAndKillsData.{$idx}" />
									<set_value name="$damage_thisAttack" exact="$damageData.$hull" />
									<do_if value="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets and $killer.owner == faction.player">
										<debug_text text="'event.name: ' + event.name" />
										<debug_text text="'$killer: ' + $killer + ' (' + $killer.knownname + ' ' + $killer.idcode + ' ' + $killer.owner + ')'" />
										<debug_text text="'$enemy_killed: ' + $enemy_killed + ' (' + $damageData.$name + ' ' + $damageData.$idCode + ')'" />
										<debug_text text="'$enemy_killed.hullpercentage: ' + $enemy_killed.hullpercentage" />
										<debug_text text="'$damageData.$hull: ' + $damageData.$hull" />
										<debug_text text="'$damage_thisAttack: ' + $damage_thisAttack" />
										<debug_text text="'$damage_total: ' + $damageData.$damage_total" />
									</do_if>
									<set_value name="$damageData.$hull" exact="@$enemy_killed.hullpercentage" /><!-- no point in recording this, because its destroyed -->
									<do_if value="
										(
											(not $enemy_killed.isclass.[class.ship_l, class.ship_xl, class.station])
											and
											@$killer.owner == faction.player
										)
										or
										(
											$enemy_killed.isclass.[class.ship_l, class.ship_xl, class.station]
											and
											$damageData.$damage_total ge 75
										)
									">
										<set_value name="$damageData.$isPlayerKilled" exact="true" />
									</do_if>
									<set_value name="$damageData.$killer" exact="@$killer.knownname" />
									<do_if value="$damageData.$isPlayerKilled">
										<set_value name="$damageData.$damage_total" operation="add" exact="$damage_thisAttack" />
										<do_if value="$damageData.$cues_playerKill.count">
											<do_for_each name="$cue_inList" in="$damageData.$cues_playerKill">
												<do_if value="$cue_inList.exists">
													<signal_cue_instantly cue="$cue_inList" param="table[$enemy = $enemy_killed]" />
												</do_if>
											</do_for_each>
										</do_if>
									</do_if>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="DamageCalculator_Attacked" namespace="this" instantiate="true">
							<conditions>
								<check_any>
									<!-- Event for the specified object being attacked (object = attacked object, param = attacker, param2 = kill method, param3 = attacked component) -->
									<event_object_attacked group="parent.$EnemyTargets" />
									<!-- Event for the specified object's hull being damaged - includes hulls of children (object = event source, param = damaged component, param2 = new hull value, param3 = damage) -->
									<event_object_hull_damaged group="parent.$EnemyTargets" />
								</check_any>
								<check_value value="event.object.hullpercentage gt 0" />
							</conditions>
							<actions>
								<set_value name="$idCodes" exact="DamageCalculator.$idCodes" />
								<set_value name="$dmgAndKillsData" exact="DamageCalculator.$dmgAndKillsData" />
								<set_value name="$attacker" exact="null" />
								<set_value name="$damage_thisAttack" exact="0" />
								<do_if value="event.name == 'event_object_attacked'">
									<set_value name="$enemy_damaged" exact="event.object" />
									<set_value name="$attacker" exact="event.param" />
								</do_if>
								<do_elseif value="event.name == 'event_object_hull_damaged'">
									<set_value name="$enemy_damaged" exact="event.object" />
									<do_if value="@$enemy_damaged.pilot.$kEM_lastAttack">
										<sort_list list="$enemy_damaged.pilot.$kEM_lastAttack" sortbyvalue="
											(loop.element == player.occupiedship) * 2 +
											loop.element.isplayerowned * 1
										" sortdescending="true" />
										<!-- if player-owned is in list, then the attacker is player-owned.
										reason: there's no way to tell who attacker was with event_object_hull_damaged,
										so just give the damage to the player-owner 'coz they contributed to this bit of the damage. -->
										<set_value name="$attacker" exact="$enemy_damaged.pilot.$kEM_lastAttack.{1}" />
									</do_if>
									<do_elseif value="@$enemy_damaged.defencenpc.isoperational and @$enemy_damaged.defencenpc.$kEM_lastAttack">
										<sort_list list="$enemy_damaged.defencenpc.$kEM_lastAttack" sortbyvalue="
											(loop.element == player.occupiedship) * 2 +
											loop.element.isplayerowned * 1
										" sortdescending="true" />
										<set_value name="$attacker" exact="$enemy_damaged.defencenpc.$kEM_lastAttack.{1}" />
									</do_elseif>
								</do_elseif>
								<debug_text text="'event.name: ' + event.name + ' $attacker: ' + $attacker + ' (' + @$attacker.knownname + ', ' + @$attacker.idcode + ', isplayerowned: ' + @$attacker.isplayerowned + ') $enemy_damaged: ' + $enemy_damaged + ' (' + @$enemy_damaged.knownname + ', ' + @$enemy_damaged.idcode + ', $enemy_damaged.hullpercentage: ' + @$enemy_damaged.hullpercentage + ')'" chance="UserSettings.$debugChance_enemyTargets" />
								<set_value name="$idx" exact="$idCodes.indexof.{$enemy_damaged.idcode}" />
								<set_value name="$damageData" exact="$dmgAndKillsData.{$idx}" />
								<do_if value="$enemy_damaged.hullpercentage">
									<do_if value="event.name == 'event_object_attacked'">
										<do_if value="@$enemy_damaged.pilot.isoperational">
											<do_if value="(not @$enemy_damaged.pilot.$kEM_lastAttack.count) or @$enemy_damaged.pilot.$kEM_lastAttack.indexof.{$attacker}">
												<!-- this attacker was already in the list, so restart the list -->
												<set_value name="$enemy_damaged.pilot.$kEM_lastAttack" exact="[$attacker]" />
											</do_if>
											<do_else>
												<append_to_list name="$enemy_damaged.pilot.$kEM_lastAttack" exact="$attacker" />
											</do_else>
										</do_if>
										<do_elseif value="@$enemy_damaged.defencenpc.isoperational">
											<do_if value="(not @$enemy_damaged.defencenpc.$kEM_lastAttack.count) or @$enemy_damaged.defencenpc.$kEM_lastAttack.indexof.{$attacker}">
												<set_value name="$enemy_damaged.defencenpc.$kEM_lastAttack" exact="[$attacker]" />
											</do_if>
											<do_else>
												<append_to_list name="$enemy_damaged.defencenpc.$kEM_lastAttack" exact="$attacker" />
											</do_else>
										</do_elseif>
									</do_if>
									<do_if value="$attacker and $damageData">
										<do_if value="$enemy_damaged.hullpercentage != $damageData.$hull">
											<set_value name="$damage_thisAttack" exact="$damageData.$hull - $enemy_damaged.hullpercentage" />
											<do_if value="@$attacker.isplayerowned">
												<set_value name="$damageData.$damage_total" operation="add" exact="$damage_thisAttack" />
												<debug_text text="'    player     $damage_thisAttack: ' + $damage_thisAttack + ' $damageData.$damage_total: ' + $damageData.$damage_total" chance="UserSettings.$debugChance_enemyTargets" />
											</do_if>
											<do_else>
												<debug_text text="'    not player $damage_thisAttack: ' + $damage_thisAttack + ' $damageData.$damage_total: ' + $damageData.$damage_total" chance="UserSettings.$debugChance_enemyTargets" />
											</do_else>
											<set_value name="$damageData.$hull" exact="$enemy_damaged.hullpercentage" />
										</do_if>
									</do_if>
									<do_else>
										<debug_text text="'    shouldn\'t be here for $enemy_damaged (alive): ' + $enemy_damaged + ' (' + $enemy_damaged.knownname + ', ' + $enemy_damaged.idcode + ')'" chance="UserSettings.$debugChance_enemyTargets" />
									</do_else>
								</do_if>
								<do_else>
									<do_if value="$attacker and $damageData">
										<do_if value="$attacker.isplayerowned">
											<set_value name="$damage_thisAttack" exact="$damageData.$hull" />
											<set_value name="$damageData.$damage_total" operation="add" exact="$damage_thisAttack" />
										</do_if>
										<set_value name="$damageData.$hull" exact="$enemy_damaged.hullpercentage" />
										<signal_cue_instantly cue="DamageCalculator_Kill" param="table[
											$victim = $enemy_damaged,
											$attacker = $attacker
										]" />
									</do_if>
									<do_else>
										<debug_text text="'    shouldn\'t be here for $enemy_damaged (dead): ' + $enemy_damaged + ' (' + $enemy_damaged.knownname + ', ' + $enemy_damaged.idcode + ')'" chance="UserSettings.$debugChance_enemyTargets" />
									</do_else>
								</do_else>
								<do_if value="md.kuertee_emergent_missions.UserSettings.$debugChance_enemyTargets and @$attacker.owner == faction.player">
									<debug_text text="'    event.name: ' + event.name" />
									<debug_text text="'    $attacker: ' + $attacker + ' (' + $attacker.knownname + ' ' + $attacker.idcode + ' ' + $attacker.owner + ')'" />
									<debug_text text="'    $enemy_damaged: ' + $enemy_damaged + ' (' + $damageData.$name + ' ' + $damageData.$idCode + ')'" />
									<debug_text text="'    $enemy_damaged.hullpercentage: ' + $enemy_damaged.hullpercentage" />
									<debug_text text="'    $damageData.$hull: ' + $damageData.$hull" />
									<debug_text text="'    $damage_thisAttack: ' + $damage_thisAttack" />
									<debug_text text="'    $damage_total: ' + $damageData.$damage_total" />
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="DamageCalculator_DebugChat" namespace="this">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_value value="event.param3.$text == 'debug em enemies'" />
									<check_value value="event.param3.$text == 'debug em clean enemies'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="event.param3" />
								<do_if value="event.param3.$text == 'debug em enemies'">
									<do_for_each name="$nme" in="DamageCalculator.$EnemyTargets">
										<debug_text text="$nme + ': ' + $nme.knownname + ', ' + $nme.idcode" />
									</do_for_each>
									<do_all counter="$idx" exact="DamageCalculator.$idCodes.count">
										<set_value name="$idCode" exact="DamageCalculator.$idCodes.{$idx}" />
										<set_value name="$dmgAndKillsData_one" exact="@DamageCalculator.$dmgAndKillsData.{$idx}" />
										<do_if value="$dmgAndKillsData_one">
											<debug_text text="$idx + ': ' + $idCode" />
											<do_for_each name="$key" in="$dmgAndKillsData_one.keys.list">
												<debug_text text="'    ' + $key + ': ' + $dmgAndKillsData_one.{$key}" />
											</do_for_each>
										</do_if>
										<debug_text text="'$idCodes.count: ' + DamageCalculator.$idCodes.count + ' $dmgAndKillsData.count: ' + DamageCalculator.$dmgAndKillsData.count" />
									</do_all>
								</do_if>
								<do_if value="event.param3.$text == 'debug em clean enemies'">
									<run_actions ref="DamageCalculator_CleanData" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<!--
					                                      ,,
					                                     *MM
					                                      MM
					`7MMpMMMb.  .gP"Ya   ,6"Yb.  `7Mb,od8 MM,dMMb.`7M'   `MF'
					  MM    MM ,M'   Yb 8)   MM    MM' "' MM    `Mb VA   ,V
					  MM    MM 8M""""""  ,pm9MM    MM     MM     M8  VA ,V
					  MM    MM YM.    , 8M   MM    MM     MM.   ,M9   VVV
					.JMML  JMML.`Mbmmd' `Moo9^Yo..JMML.   P^YbmdP'    ,V
					                                                 ,V
					                                              OOb"
				 -->
				<library name="IsPlayerOwnedNearby">
					<params>
						<param name="Cue_Mission" />
						<param name="Cue_AwayTooLong" />
						<param name="Cue_ExitEscort" />
						<param name="Cue_EnterEscort" />
						<param name="Cue_InEscort_Interval" default="null" />
						<param name="Cue_Away_Interval" default="null" />
					</params>
					<actions>
						<set_value name="$Cue_Mission.$time_awayTotal" exact="0" />
						<set_value name="$time_exitedEscort" exact="0" />
						<set_value name="$isPlayerOwnedShipNearby_last" exact="'force change'" />
						<set_value name="$isRunOnce" exact="true" />
					</actions>
					<cues>
						<cue name="IsPlayerOwnedNearby_Interval" instantiate="true" checkinterval="5s">
							<actions>
								<debug_text text="''" chance="@md.$kuertee_interval" />
								<do_if value="$Cue_Mission.hasmission and (not @$Cue_Mission.$time_missionEnd)">
									<debug_text text="$Cue_Mission.$MissionId + ' $time_exitedEscort: ' + $time_exitedEscort" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
									<do_if value="$time_exitedEscort">
										<set_value name="$time_awayThisTime" exact="player.age - $time_exitedEscort" />
										<debug_text text="$Cue_Mission.$MissionId + ' $time_awayThisTime: ' + $time_awayThisTime" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
										<set_value name="$Cue_Mission.$time_awayTotal" operation="add" exact="$time_awayThisTime" />
										<set_value name="$time_exitedEscort" exact="player.age" />
									</do_if>
									<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$time_awayTotal: ' + @$Cue_Mission.$time_awayTotal + ' $Cue_Mission.$time_missionStart: ' + @$Cue_Mission.$time_missionStart + ' $Cue_Mission.$time_missionEnd: ' + @$Cue_Mission.$time_missionEnd" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
									<set_value name="$isPlayerOwnedShipNearby" exact="
										(@player.target.exists and $Cue_Mission.$EnemyTargets.indexof.{player.target})
										or
										(@$Cue_Mission.$GrouOfOne_aiDefendersTarget.isoperational and @$Cue_Mission.$Ships_aiDefenders.count)
									" />
									<debug_text text="$Cue_Mission.$MissionId + ' $isPlayerOwnedShipNearby: ' + $isPlayerOwnedShipNearby" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
									<do_if value="not $isPlayerOwnedShipNearby">
										<do_if value="@$Cue_Mission.$Ship.sector">
											<do_if value="[
												md.kuertee_emergent_missions.kEMissions.$missionType_patrol,
												md.kuertee_emergent_missions.kEMissions.$missionType_raid
											].indexof.{$Cue_Mission.$kEMissionType}">
												<set_value name="$isPlayerOwnedShipNearby" exact="@player.occupiedship.sector == $Cue_Mission.$TargetSector" />
												<do_if value="$isPlayerOwnedShipNearby">
													<set_value name="$playerOwnedShip_nearby" exact="player.occupiedship" />
												</do_if>
												<do_else>
													<find_ship name="$playerOwnedShip_nearby" owner="faction.player" primarypurpose="purpose.fight" space="$Cue_Mission.$TargetSector" class="class.ship" sortbydistanceto="$Cue_Mission.$TargetSector" />
													<set_value name="$isPlayerOwnedShipNearby" exact="@$playerOwnedShip_nearby.isoperational" />
												</do_else>
											</do_if>
											<do_else>
												<set_value name="$isPlayerOwnedShipNearby" exact="@player.occupiedship.distanceto.{$Cue_Mission.$Ship} le 100km" />
												<do_if value="$isPlayerOwnedShipNearby">
													<set_value name="$playerOwnedShip_nearby" exact="player.occupiedship" />
												</do_if>
												<do_else>
													<find_ship name="$playerOwnedShips_nearby" owner="faction.player" primarypurpose="purpose.fight" space="$Cue_Mission.$Ship.sector" class="class.ship" sortbydistanceto="$Cue_Mission.$Ship" multiple="true">
														<match_distance object="$Cue_Mission.$Ship" max="100km" />
													</find_ship>
													<do_if value="$playerOwnedShips_nearby.count">
														<do_for_each name="$ship_inList" in="$playerOwnedShips_nearby">
															<!-- <do_if value="
																($Ship.isclass.ship_xs and $ship_inList.isclass.[class.ship_xs, class.ship_s, class.ship_m, class.ship_l, class.ship_xl]) or
																($Ship.isclass.ship_s and $ship_inList.isclass.[class.ship_s, class.ship_m, class.ship_l, class.ship_xl]) or
																($Ship.isclass.ship_m and $ship_inList.isclass.[class.ship_m, class.ship_l, class.ship_xl]) or
																($Ship.isclass.ship_l and $ship_inList.isclass.[class.ship_l, class.ship_xl]) or
																($Ship.isclass.ship_xl and $ship_inList.isclass.[class.ship_xl])
															"> -->
																<set_value name="$playerOwnedShip_nearby" exact="$ship_inList" />
																<set_value name="$isPlayerOwnedShipNearby" exact="true" />
																<break />
															<!-- </do_if> -->
														</do_for_each>
													</do_if>
													<do_else>
														<set_value name="$playerOwnedShip_nearby" exact="null" />
														<set_value name="$isPlayerOwnedShipNearby" exact="false" />
													</do_else>
												</do_else>
											</do_else>
										</do_if>
										<do_else>
											<set_value name="$isPlayerOwnedShipNearby" exact="$isPlayerOwnedShipNearby_last" />
										</do_else>
									</do_if>
									<do_if value="$isPlayerOwnedShipNearby">
										<do_if value="@$Cue_InEscort_Interval.exists">
											<signal_cue cue="$Cue_InEscort_Interval" />
										</do_if>
									</do_if>
									<do_else>
										<do_if value="@$Cue_Away_Interval.exists">
											<signal_cue cue="$Cue_Away_Interval" />
										</do_if>
										<do_if value="$Cue_Mission.$time_awayTotal ge 5min">
											<do_if value="not @$Cue_Mission.$time_missionEnd">
												<set_value name="$Cue_Mission.$time_missionEnd" exact="player.age" />
												<debug_text text="$Cue_Mission.$MissionId + ' $time_awayTotal: ' + $Cue_Mission.$time_awayTotal + ' $time_missionEnd: ' + $time_missionEnd" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
												<do_if value="@$Cue_AwayTooLong.exists">
													<signal_cue cue="$Cue_AwayTooLong" />
												</do_if>
											</do_if>
										</do_if>
									</do_else>
									<do_if value="$isPlayerOwnedShipNearby != @$Cue_Mission.$isEscortNearby or $isRunOnce">
										<set_value name="$isRunOnce" exact="false" />
										<debug_text text="$Cue_Mission.$MissionId + ' $isPlayerOwnedShipNearby: ' + $isPlayerOwnedShipNearby" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
										<set_value name="$isPlayerOwnedShipNearby_last" exact="$isPlayerOwnedShipNearby" />
										<do_if value="$isPlayerOwnedShipNearby">
											<set_value name="$time_exitedEscort" exact="0" />
											<do_if value="not @$Cue_Mission.$time_missionStart">
												<set_value name="$Cue_Mission.$time_missionStart" exact="player.age" />
											</do_if>
											<do_if value="$Cue_EnterEscort.exists">
												<signal_cue cue="$Cue_EnterEscort" />
											</do_if>
										</do_if>
										<do_else>
											<set_value name="$time_exitedEscort" exact="player.age" />
											<do_if value="$Cue_ExitEscort.exists">
												<signal_cue cue="$Cue_ExitEscort" />
											</do_if>
										</do_else>
									</do_if>
								</do_if>
								<do_else>
									<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$time_awayTotal: ' + $Cue_Mission.$time_awayTotal + ' $Cue_Mission.$time_missionStart: ' + $Cue_Mission.$time_missionStart + ' $Cue_Mission.$time_missionEnd: ' + $Cue_Mission.$time_missionEnd" chance="if $Cue_Mission.hasguidance then md.kuertee_emergent_missions.UserSettings.$debugChance else 0" />
								</do_else>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="IsPlayerOwnedNearby_Debug">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_all>
										<check_any>
											<check_value value="event.param3.$text == 'debug is nearby'" />
										</check_any>
										<check_value value="$Cue_Mission.hasguidance" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<debug_text text="event.param3.$text" />
								<do_if value="event.param3.$text == 'debug is nearby'">
									<debug_text text="'$Cue_Mission.$MissionId: ' + $Cue_Mission.$MissionId" />
									<debug_text text="'IsPlayerOwnedNearby_Interval.state: ' + IsPlayerOwnedNearby_Interval.state + ' IsPlayerOwnedNearby_Interval.time: ' + IsPlayerOwnedNearby_Interval.time + ' (next: ' + (IsPlayerOwnedNearby_Interval.time - player.age) + ')'" />
									<debug_text text="'$Cue_Mission.$time_missionStart: ' + @$Cue_Mission.$time_missionStart + ' $Cue_Mission.$time_missionEnd: ' + @$Cue_Mission.$time_missionEnd" />
									<debug_text text="'$Cue_Mission.$time_exitedEscort: ' + @$Cue_Mission.$time_exitedEscort + ' $Cue_Mission.$time_awayTotal: ' + @$Cue_Mission.$time_awayTotal" />
									<debug_text text="'$Cue_Mission.$isEscortNearby: ' + @$Cue_Mission.$isEscortNearby" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</library>
				<!--
					   db     dP""b8 888888  dP"Yb  88""Yb        db    88b 88 8888b.      88""Yb  dP"Yb   dP"Yb  8b    d8
					  dPYb   dP   `"   88   dP   Yb 88__dP       dPYb   88Yb88  8I  Yb     88__dP dP   Yb dP   Yb 88b  d88
					 dP__Yb  Yb        88   Yb   dP 88"Yb       dP__Yb  88 Y88  8I  dY     88"Yb  Yb   dP Yb   dP 88YbdP88
					dP""""Yb  YboodP   88    YbodP  88  Yb     dP""""Yb 88  Y8 8888Y"      88  Yb  YbodP   YbodP  88 YY 88
				 -->
				<library name="MissionNPC" version="2">
					<params>
						<param name="Cue_Mission" />
						<param name="Ship" />
						<param name="Actor" />
						<param name="Cue_OnCreate" />
						<param name="Cue_OnDestroy" />
						<param name="Cue_OnFail" />
					</params>
					<actions>
						<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<set_value name="$dockSize" exact="tag.dock_s" />
						<do_if value="
							@md.kuertee_emergent_missions.kEMissions.$IsSWIExists
							or 
							md.kuertee_emergent_missions.UserSettings.$missionHandlerNPC_alwaysSpawnAtStation
						">
							<set_value name="$dockSize" exact="tag.dock_l" />
						</do_if>
						<do_elseif value="player.ship.isclass.ship_m">
							<set_value name="$dockSize" exact="tag.dock_m" />
						</do_elseif>
						<do_elseif value="not player.ship.isclass.ship_s">
							<set_value name="$dockSize" exact="tag.dock_l" />
						</do_elseif>
						<do_if value="
							(
								@$Cue_Mission.$attacker_largest.isoperational
								and
								@$Cue_Mission.$attacker_largest.isclass.[class.ship_l, class.ship_xl, class.station]
							)
							or
							(not @$Cue_Mission.$Ship.numdocks.{$dockSize})
						">
							<!-- lead ship is getting attacked OR leadship doesn't have the proper dock -->
							<set_value name="$nearestTo" exact="$Ship" />
							<do_if value="$Cue_Mission.$TargetSector.exists">
								<set_value name="$nearestTo" exact="$Cue_Mission.$TargetSector" />
							</do_if>
							<do_if value="@$Ship.isclass.station and @$Ship.exists">
								<set_value name="$Container" exact="$Ship" />
							</do_if>
							<do_else>
								<find_station name="$Container" space="player.galaxy" owner="$Cue_Mission.$Faction" defencestation="true" sortbydistanceto="$nearestTo">
									<match_content checkoperational="true">
										<match_dock size="$dockSize"/>
									</match_content>
									<match_relation_to faction="faction.player" relation="dock" comparison="ge" />
								</find_station>
							</do_else>
							<do_if value="not $Container">
								<find_station name="$Container" space="player.galaxy" sortbydistanceto="$nearestTo">
									<match_relation_to faction="$Ship.owner" comparison="ge" relation="neutral" />
								</find_station>
							</do_if>
							<do_if value="not $Container">
								<do_if value="$Cue_OnFail">
									<signal_cue_instantly cue="$Cue_OnFail" />
								</do_if>
								<cancel_cue cue="this" /> 
							</do_if>
						</do_if>
						<do_else>
							<set_value name="$Container" exact="$Cue_Mission.$Ship" />
						</do_else>
						<set_value name="$Interior" exact="null" />
					</actions>
					<patch sinceversion="2">
						<debug_text text="$Cue_Mission.$MissionId + ' patch sinceversion 2, state: ' + this.state" />
						<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.hasmission: ' + $Cue_Mission.hasmission" />
						<debug_text text="$Cue_Mission.$MissionId + ' $Actor.exists: ' + $Actor.exists" />
						<debug_text text="$Cue_Mission.$MissionId + ' $Actor.room.isoperational: ' + $Actor.room.isoperational" />
						<do_if value="$Cue_Mission.hasmission and (not $Actor.exists)">
							<signal_cue cue="MissionNPC_OnCleanUp" />
						</do_if>
					</patch>
					<cues>
						<cue name="MissionNPC_OnCreate">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<!-- <signal_cue_instantly cue="$Cue_OnCreate" param="table[$container = $Container, $actor = $Actor, $room = $RoomData.$room, $interior = $RoomData.$interior, $corridor = $RoomData.$corridor]" /> -->
								<set_value name="$Container" exact="event.param.$container" />
								<set_value name="$Actor" exact="event.param.$actor" />
								<set_value name="$Interior" exact="event.param.$interior" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Container: ' + $Container + ' (' + $Container.knownname + ') $Actor: ' + $Actor + ' (' + $Actor.knownname + ')' + ') $Interior: ' + $Interior + ' (' + @$Interior.name + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<signal_cue_instantly cue="$Cue_OnCreate" param="table[$container = $Container, $actor = $Actor, $interior = $Interior]" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="MissionNPC_OnCleanUp">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<!-- <signal_cue_instantly cue="$Cue_OnCleanUp" param="table[$eventName = $event, $container = $container, $actor = $actor, $interior = $interior]" /> -->
								<set_value name="$eventName" exact="event.param.$eventName" />
								<debug_text text="$Cue_Mission.$MissionId + ' $eventName: ' + $eventName" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<!-- create new mission handler actor and room at a defense station at every destruction -->
								<set_value name="$isFail" exact="false" />
								<set_value name="$container_possible" exact="null" />
								<!-- <do_if value="@$Cue_Mission.$Cue_FactionAI.$Ships.count">
									<do_for_each name="$ship" in="$Cue_Mission.$Cue_FactionAI.$Ships">
										<do_if value="$ship.isclass.[class.ship_l, class.ship_xl]">
											<set_value name="$container_possible" exact="$ship" />
											<break />
										</do_if>
									</do_for_each>
								</do_if> -->
								<set_value name="$dockSize" exact="tag.dock_s" />
								<do_if value="
									@md.kuertee_emergent_missions.kEMissions.$IsSWIExists or 
									md.kuertee_emergent_missions.UserSettings.$missionHandlerNPC_alwaysSpawnAtStation
								">
									<set_value name="$dockSize" exact="tag.dock_l" />
								</do_if>
								<do_elseif value="player.ship.isclass.ship_m">
									<set_value name="$dockSize" exact="tag.dock_m" />
								</do_elseif>
								<do_elseif value="not player.ship.isclass.ship_s">
									<set_value name="$dockSize" exact="tag.dock_l" />
								</do_elseif>
								<do_if value="not @$container_possible.isoperational">
									<find_station name="$container_possible" space="player.galaxy" owner="$Cue_Mission.$Faction" defencestation="true" sortbydistanceto="player.entity">
										<match_content checkoperational="true">
											<match_dock size="$dockSize"/>
										</match_content>
										<match_relation_to faction="faction.player" relation="dock" comparison="ge" />
									</find_station>
								</do_if>
								<set_value name="$Container" exact="$container_possible" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Container: ' + $Container" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<do_if value="$Container.isoperational">
									<signal_cue_instantly cue="MissionNPC_ActorAndRoom_New" />
								</do_if>
								<do_else>
									<set_value name="$isFail" exact="true" />
								</do_else>
								<do_if value="$isFail">
									<do_if value="$Cue_OnFail">
										<signal_cue_instantly cue="$Cue_OnFail" />
									</do_if>
								</do_if>
								<do_if value="$eventName == 'event_object_destroyed'">
									<set_value name="$container_destroyed" exact="event.param.$container" />
									<set_value name="$actor_destroyed" exact="event.param.$actor" />
									<set_value name="$interior_destroyed" exact="event.param.$interior" />
									<debug_text text="$Cue_Mission.$MissionId + ' $container_destroyed: ' + $container_destroyed + ' (' + $container_destroyed.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
									<debug_text text="$Cue_Mission.$MissionId + ' $actor_destroyed: ' + $actor_destroyed + ' (' + $actor_destroyed.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
									<debug_text text="$Cue_Mission.$MissionId + ' $interior_destroyed: ' + $interior_destroyed + ' (' + @$interior_destroyed.name + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
									<signal_cue_instantly cue="$Cue_OnDestroy" param="table[$container = $container_destroyed, $actor = $actor_destroyed, $interior = $interior_destroyed]" />
								</do_if>
								<remove_value name="$isFail" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="MissionNPC_ActorAndRoom_New" instantiate="true">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Container: ' + $Container + ' (' + @$Container.knownname + ', ' + @$Container.sector.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
							</actions>
							<cues>
								<cue name="MissionNPC_ActorAndRoom_OnCleanUp">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<!-- <signal_cue_instantly cue="$Cue_OnCleanUp" param="table[$container = $Container, $actor = $Actor, $interior = $Interior]" /> -->
										<signal_cue_instantly cue="MissionNPC_OnCleanUp" param="table[$eventName = event.param.$eventName, $container = event.param.$container, $actor = event.param.$actor, $interior = event.param.$interior]" />
										<cancel_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="MissionNPC_ActorAndRoom" ref="ActorAndRoomManager">
									<param name="Cue_Mission" value="$Cue_Mission" />
									<param name="Container" value="$Container" />
									<param name="Actor" value="$Actor" />
									<param name="Cue_OnCreate" value="MissionNPC_OnCreate" />
									<param name="Cue_OnCleanUp" value="MissionNPC_ActorAndRoom_OnCleanUp" />
								</cue>
							</cues>
						</cue>
						<cue name="MissionNPC_ActorAndRoom_First">
							<actions>
								<signal_cue_instantly cue="MissionNPC_ActorAndRoom_New" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</library>
				<library name="ActorAndRoomManager" version="3">
					<params>
						<param name="Cue_Mission" />
						<param name="Container" />
						<param name="Actor" default="null" />
						<param name="Cue_OnCreate" default="null" />
						<param name="Cue_OnCleanUp" default="null" />
					</params>
					<actions>
						<run_actions ref="CreateRoomAndAddActor" result="$RoomData">
							<param name="Cue" value="$Cue_Mission" />
							<param name="Actor" value="$Actor" />
							<param name="Container" value="$Container" />
						</run_actions>
						<set_value name="$Actor" exact="$RoomData.$actor" />
						<set_value name="$Interior" exact="$RoomData.$interior" />
						<!-- <debug_text text="'$Cue_OnCleanUp: ' + $Cue_OnCleanUp" /> -->
						<!-- <debug_text text="'$Container: ' + $Container + ' ' + @$Container.name" /> -->
						<!-- <debug_text text="'$Actor: ' + $Actor + ' ' + @$Actor.name" /> -->
						<!-- <debug_text text="'$Interior: ' + $Interior" /> -->
						<!-- <debug_text text="'$Actor.room: ' + $Actor.room + ' ' + @$Actor.room.name" /> -->
						<do_if value="$Interior">
							<do_if value="$Actor.exists">
								<do_if value="$Cue_OnCreate">
									<signal_cue_instantly cue="$Cue_OnCreate" param="table[
										$container = $Container,
										$actor = $Actor,
										$interior = $Interior
									]" />
								</do_if>
							</do_if>
						</do_if>
						<do_else>
							<do_if value="$Cue_OnCleanUp">
								<signal_cue_instantly cue="$Cue_OnCleanUp" param="table[
									$eventName = 'invalid_room_on_initial_creation',
									$container = $Container,
									$actor = $Actor,
									$interior = $Interior
								]" />
							</do_if>
						</do_else>
					</actions>
					<patch sinceversion="2">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<set_value name="$dockSize_lastPlayerShip" exact="@player.ship.docksize" />
						<do_if value="@player.ship">
							<do_if value="not $Container.dockingallowed.{player.ship}">
								<signal_cue cue="ActorAndRoomManager_CleanUp" />
							</do_if>
						</do_if>
					</patch>
					<patch sinceversion="3">
						<debug_text text="'patch sinceversion 3, state: ' + this.state" />
						<remove_value name="$dockSize_lastPlayerShip" />
					</patch>
					<cues>
						<cue name="ActorAndRoomManager_StartInterval">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$count_waitForActor" exact="0" />
							</actions>
							<cues>
								<cue name="ActorAndRoomManager_Interval" checkinterval="1s" instantiate="true">
									<actions>
										<debug_text text="''" chance="@md.$kuertee_interval" />
										<set_value name="$count_waitForActor" exact="1" operation="add" />
										<debug_text text="'$count_waitForActor: ' + $count_waitForActor" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
										<do_if value="$Actor.exists">
											<do_if value="$Cue_OnCreate">
												<signal_cue_instantly cue="$Cue_OnCreate" param="table[
													$container = $Container,
													$actor = $Actor,
													$interior = $Interior
												]" />
											</do_if>
											<reset_cue cue="parent" />
											<cancel_cue cue="this" />
										</do_if>
										<do_elseif value="$count_waitForActor gt 3">
											<do_if value="$Cue_OnCleanUp">
												<signal_cue_instantly cue="$Cue_OnCleanUp" param="table[
													$eventName = 'invalid_actor_after_room_creation',
													$container = $Container,
													$actor = $Actor,
													$interior = $Interior
												]" />
											</do_if>
											<reset_cue cue="parent" />
											<cancel_cue cue="this" />
										</do_elseif>
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="ActorAndRoomManager_PlayerUndock">
							<conditions>
								<event_object_undocked dock="$Container" group="global.$PlayerOccupiedShipGroup" />
							</conditions>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' $Actor: ' + $Actor + ' (' + @$Actor.knownname + ', ' + @$Actor.exists + ') $Container: ' + $Container + ' (' + @$Container.knownname + ', ' + @$Container.idcode + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="ActorAndRoomManager_CleanUp">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<event_object_destroyed object="$Container" />
									<check_all>
										<event_object_attacked object="$Container" />
										<check_any>
											<check_value value="@$Container.hullpercentage lt 50" />
											<check_value value="not $Container.dockingallowed.{player.ship}" />
										</check_any>
										<check_any>
											<check_value value="@$Cue_Mission.$Objective_Step == null" />
											<check_any>
												<check_any>
													<check_value value="@$Cue_Mission.$Objective_Step_brief == null" />
													<check_value value="@$Cue_Mission.$Objective_Step == @$Cue_Mission.$Objective_Step_brief" />
												</check_any>
												<check_any>
													<check_value value="@$Cue_Mission.$Objective_Step_debrief == null" />
													<check_value value="@$Cue_Mission.$Objective_Step == @$Cue_Mission.$Objective_Step_debrief" />
												</check_any>
											</check_any>
										</check_any>
									</check_all>
									<check_all>
										<event_player_started_control />
										<check_value value="@md.kuertee_emergent_missions.kEMissions.$dockSize_lastPlayerShip != @player.ship.docksize" />
										<check_value value="
											[
												md.kuertee_emergent_missions.kEMissions.$missionType_patrol,
												md.kuertee_emergent_missions.kEMissions.$missionType_raid,
												md.kuertee_emergent_missions.kEMissions.$missionType_hunt
											].indexof.{$Cue_Mission.$kEMissionType}
										" />
										<check_value value="not $Container.dockingallowed.{player.ship}" />
									</check_all>
									<check_all>
										<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
										<check_any>
											<check_value value="event.param3.$text == 'debug em move actor'" />
											<check_value value="event.param3.$text == 'debug em destroy actor'" />
										</check_any>
										<check_value value="$Cue_Mission.hasguidance" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.param3: ' + @event.param3" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Container.hullpercentage: ' + @$Container.hullpercentage + ' $Container.dockingallowed.{player.ship}: ' + @$Container.dockingallowed.{player.ship}" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$kEMissionType: ' + @$Cue_Mission.$kEMissionType + ' $Cue_Mission.$Objective_Step: ' + @$Cue_Mission.$Objective_Step" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission.$Objective_Step_brief: ' + @$Cue_Mission.$Objective_Step_brief + ' $Cue_Mission.$Objective_Step_debrief: ' + @$Cue_Mission.$Objective_Step_debrief" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
								<do_if value="event.name == 'event_player_started_control'">
									<set_value name="md.kuertee_emergent_missions.kEMissions.$dockSize_lastPlayerShip" exact="player.ship.docksize" />
								</do_if>
								<remove_actor_from_room actor="$Actor" />
								<do_if value="
									event.name == 'event_object_destroyed'
									or
									(
										event.name == 'event_ui_triggered' and
										event.param3.$text == 'emissions destroy actor'
									)
								">
									<do_if value="$Actor.exists">
										<destroy_object object="$Actor" />
									</do_if>
								</do_if>
								<do_if value="$Container.isoperational and @$Interior.isoperational">
									<remove_dynamic_interior object="$Container" interior="$Interior" />
									<destroy_object object="$Interior" />
								</do_if>
								<do_if value="$Cue_OnCleanUp">
									<signal_cue_instantly cue="$Cue_OnCleanUp" param="table[
										$eventName = event.name,
										$container = $Container,
										$actor = $Actor,
										$interior = $Interior
									]" />
								</do_if>
								<!-- <reset_cue cue="parent" /> -->
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="ActorAndRoomManager_RunOnce">
							<actions>
								<signal_cue cue="ActorAndRoomManager_StartInterval" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</library>
				<library name="CreateRoomAndAddActor" purpose="run_actions">
					<params>
						<param name="Cue" />
						<param name="Container" />
						<param name="Actor" default="null" />
						<param name="CreateActor_Faction" default="null" />
						<param name="CreateActor_Select_Race" default="null" />
						<param name="CreateActor_Select_Faction" default="null" />
						<param name="CreateActor_Select_Tags" default="null" />
						<param name="CreateActor_EntityRole" default="entityrole.service" />
						<param name="CreateActor_EntityType" default="entitytype.officer" />
						<param name="CreateActor_IsMissionActor" default="true" />
						<param name="CreateRoom_RoomName" default="null" />
						<param name="CreateRoom_RoomType" default="roomtype.office" />
					</params>
					<actions>
						<do_if value="not $Actor">
							<do_if value="not $CreateActor_Faction">
								<set_value name="$CreateActor_Faction" exact="$Container.owner" />
							</do_if>
							<do_if value="not $CreateActor_Select_Faction">
								<set_value name="$CreateActor_Select_Faction" exact="$Container.owner" />
							</do_if>
							<create_cue_actor cue="kEMissions" name="$Actor">
								<owner exact="$CreateActor_Faction" />
								<select faction="$CreateActor_Select_Faction" race="$CreateActor_Select_Race" tags="$CreateActor_Select_Tags" />
							</create_cue_actor>
							<set_value name="$Actor.$is_kEMissionsCreation" exact="true" />
						</do_if>
						<set_value name="$Actor.$Stay" exact="true" />
						<set_entity_role entity="$Actor" role="$CreateActor_EntityRole" />
						<set_entity_type entity="$Actor" type="$CreateActor_EntityType" />
						<set_entity_traits entity="$Actor" missionactor="$CreateActor_IsMissionActor" />
						<debug_text text="$Cue.$Ship + ' $Container: ' + $Container + ' (' + $Container.knownname + ', ' + $Container.idcode + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<set_value name="$Result_corridor" value="null" />
						<set_value name="$Result_interior" value="null" />
						<do_if value="$Container.isclass.station">
							<do_if value="not $CreateRoom_RoomName">
								<!-- page 20007, id 1041: Security Office -->
								<!-- page 20007, id 1151: Control Room -->
								<!-- page 20007, id 1161: Situation Room -->
								<!-- page 20007, id 1211: Weapons Control -->
								<!-- page 20007, id 1231: Communications Centre -->
								<!-- page 20007, id 1491: Command Centre -->
								<!-- page 20007, id 1501: Operations Room -->
								<!-- page 20007, id 1601: War Room -->
								<set_value name="$CreateRoom_RoomName" exact="readtext.{20007}.{[1041, 1151, 1161, 1211, 1231, 1491, 1501, 1601].random}" />
							</do_if>
							<do_if value="not $CreateRoom_RoomType">
								<!-- factionrep, infrastructure, manager, office, security -->
								<set_value name="$CreateRoom_RoomType" exact="[
									roomtype.infrastructure,
									roomtype.manager,
									roomtype.office,
									roomtype.security
								].random" />
							</do_if>
							<set_value name="$TagsByRoomType" exact="table[
								{roomtype.infrastructure} = [tag.office, tag.infrastructure],
								{roomtype.manager} = [tag.office],
								{roomtype.office} = [tag.office],
								{roomtype.security} = [tag.office, tag.security]
							]" />
							<get_room_definition macro="$room_corridorMacro" race="$Container.owner.primaryrace" tags="tag.corridor" />
							<!-- <get_room_definition macro="$room_roomMacro" race="$Container.owner.primaryrace" tags="$TagsByRoomType.{$CreateRoom_RoomType}.random" /> -->
							<set_value name="$room_roomMacro" exact="null" />
							<set_value name="$tags" exact="[tag.infrastructure, tag.intelligenceoffice, tag.manager, tag.office, tag.security, tag.serverroom, tag.serviceroom, tag.warroom]" />
							<shuffle_list list="$tags" />
							<do_while value="(not $room_roomMacro) and $tags.count">
								<set_value name="$tag" exact="$tags.{1}" />
								<!-- <debug_text text="'$tag: ' + $tag" /> -->
								<remove_from_list name="$tags" exact="$tag" />
								<get_room_definition macro="$room_roomMacro" race="$Container.owner.primaryrace" tags="[$tag]" />
								<!-- <debug_text text="'$room_roomMacro: ' + $room_roomMacro" /> -->
							</do_while>
							<create_dynamic_interior
								object="$Container"
								name="$CreateRoom_RoomName"
								corridor="$room_corridorMacro" room="$room_roomMacro"
								corridorname="$Result_corridor" interiorname="$Result_interior" roomname="$Result_room" roomtype="$CreateRoom_RoomType"
								seed="$Container.seed + lookup.roomtype.list.indexof.{$CreateRoom_RoomType}"
								persistent="true"
							/>
							<do_if value="$Result_interior and $Result_corridor and $Result_room">
								<find_npc_slot name="$roomSlot" object="$Result_room" />
								<do_if value="$roomSlot">
									<add_actor_to_room actor="$Actor" slot="$roomSlot" />
								</do_if>
							</do_if>
						</do_if>
						<do_else>
							<find_object_component name="$Result_room" object="$Container" class="class.cockpit" />
							<find_npc_slot name="$roomSlot" object="$Result_room" tags="tag.stand" />
							<do_if value="$roomSlot">
								<add_actor_to_room actor="$Actor" slot="$roomSlot" />
							</do_if>
						</do_else>
						<debug_text text="$Cue.$Ship + ' $Result_room: ' + $Result_room + ' $roomSlot: ' + $roomSlot + ' $Actor: ' + $Actor + ' (' + @$Actor.name + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<return value="table[
							$actor = $Actor,
							$interior = @$Result_interior,
							$corridor = @$Result_corridor,
							$room = @$Result_room,
							$roomSlot = @$roomSlot
						]" />
					</actions>
				</library>
				<library name="BriefingCutscene">
					<params>
						<param name="Cue_Mission" />
					</params>
					<cues>
						<cue name="BriefingStarted">
							<conditions>
								<check_any>
									<event_briefing_started cue="$Cue_Mission" />
									<event_briefing_submission_selected cue="$Cue_Mission" />
								</check_any>
							</conditions>
							<actions>
								<set_value name="$RenderTarget" exact="event.param.{1}" />
								<set_value name="$CutsceneKey" exact="null" />
								<set_value name="$OpenHolomap" exact="false" />
								<set_value name="$HoloMap" exact="null" />
								<set_value name="$Objects" exact="[]" />
								<!-- <do_if value="@$Cue_Mission.$MissionTarget.isoperational">
									<append_to_list name="$Objects" exact="$Cue_Mission.$MissionTarget" />
								</do_if> -->
								<do_if value="@$Cue_Mission.$Ship.isoperational">
									<append_to_list name="$Objects" exact="$Cue_Mission.$Ship" />
								</do_if>
								<do_if value="@$Cue_Mission.$Actor and $Cue_Mission.$Actor.container != @$Cue_Mission.$Ship">
									<append_to_list name="$Objects" exact="$Cue_Mission.$Actor.container" />
								</do_if>
								<do_if value="@$Cue_Mission.$Client.isoperational and @$Cue_Mission.$Ship.isoperational and @$Cue_Mission.$Client.container != @$Cue_Mission.$Ship">
									<append_to_list name="$Objects" exact="$Cue_Mission.$Client.container" />
								</do_if>
								<do_if value="@$Cue_Mission.$TargetSector">
									<append_to_list name="$Objects" exact="$Cue_Mission.$TargetSector" />
								</do_if>
								<do_if value="@$Cue_Mission.$Cue_FactionAI.$Ships.count">
									<do_for_each name="$ship_inList" in="$Cue_Mission.$Cue_FactionAI.$Ships">
										<do_if value="$ship_inList.isclass.[class.ship_l, class.ship_xl]">
											<append_to_list name="$Objects" exact="$ship_inList" />
										</do_if>
									</do_for_each>
								</do_if>
								<do_if value="$Objects.count gt 1 or @$Objects.{1}.sector != player.sector">
									<append_to_list name="$Objects" exact="player.container" />
									<set_value name="$OpenHolomap" exact="true" />
								</do_if>
							</actions>
							<cues>
								<cue name="DisplayCutscene" onfail="cancel">
									<conditions>
										<check_value value="(not $OpenHolomap) and $Objects.count" />
									</conditions>
									<actions>
										<debug_text text="$Cue_Mission.$Ship" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
										<set_value name="$CutsceneKey" exact="'OrbitParameterized'" />
										<play_cutscene key="$CutsceneKey" rendertarget="$RenderTarget">
											<param name="targetobject" object="$Objects.{1}" />
											<param name="orbitdist" number="$Objects.{1}.size * 1.125" />
											<param name="orbitelevation" number="5" />
										</play_cutscene>
									</actions>
								</cue>
								<cue name="DisplayHolomap" onfail="cancel">
									<conditions>
										<check_value value="$OpenHolomap" />
									</conditions>
									<actions>
										<debug_text text="@$Cue_Mission.$Ship" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
										<do_if value="not $HoloMap">
											<debug_text text="@$Cue_Mission.$Ship + ' add_holomap'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
											<add_holomap name="$HoloMap" rendertarget="$RenderTarget" />
										</do_if>
										<set_value name="$OpenHolomap" exact="false" />
									</actions>
									<cues>
										<cue name="HolomapRef" ref="md.LIB_HolomapTarget.Start">
											<param name="EndSignalCue" value="HolomapEnd" />
											<param name="HoloMap" value="$HoloMap" />
											<param name="Components" value="$Objects" />
											<param name="ShowUnknown" value="true" />
											<param name="IsReplay" value="true" />
										</cue>
										<cue name="HolomapEnd">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<actions>
												<debug_text text="@$Cue_Mission.$Ship" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
											</actions>
											<cues>
												<cue name="ReplayHoloMap" checktime="player.age + 10s">
													<actions>
														<set_value name="$OpenHolomap" exact="true" />
														<reset_cue cue="DisplayHolomap" />
														<reset_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
									</cues>
								</cue>
								<cue name="BriefingStopped">
									<conditions>
										<check_any>
											<event_briefing_cancelled cue="$Cue_Mission" />
											<event_briefing_submission_unselected cue="$Cue_Mission" />
										</check_any>
									</conditions>
									<actions>
										<do_if value="$CutsceneKey">
											 <stop_cutscene key="$CutsceneKey" />
										</do_if>
										<do_if value="$HoloMap">
											<remove_holomap />
											<remove_value name="$HoloMap" />
										</do_if>
										<reset_cue cue="parent" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</library>
				<library name="GetAnyWarSubscriptions" purpose="run_actions">
					<params>
						<param name="HostFactions" default="null" />
						<param name="EnemyFactions" default="null" />
					</params>
					<actions>
						<set_value name="$ActiveSubscriptions" exact="[]" />
						<do_if value="@md.X4Ep1_War_Subscriptions.Start.$MissionGroupCues">
							<do_for_each valuename="$WarCue" in="md.X4Ep1_War_Subscriptions.Start.$MissionGroupCues">
								<!-- <debug_text text="'$WarCue: ' + $WarCue" chance="UserSettings.$debugChance" /> -->
								<do_if value="(not $HostFactions or $HostFactions.indexof.{$WarCue.$Faction}) and (not $EnemyFactions or $EnemyFactions.indexof.{$WarCue.$EnemyFaction})">
									<append_to_list name="$ActiveSubscriptions" exact="$WarCue" />
								</do_if>
							</do_for_each>
							<debug_text text="'$ActiveSubscriptions: ' + $ActiveSubscriptions" chance="UserSettings.$debugChance" />
						</do_if>
						<return value="$ActiveSubscriptions" />
					</actions>
				</library>
				<library name="GetTimeText" purpose="run_actions">
					<params>
						<param name="Time" />
						<param name="IsSince" default="null" />
					</params>
					<actions>
						<do_if value="$IsSince">
							<set_value name="$Time" exact="player.age - $Time" />
						</do_if>
						<!-- <t id="100">(unit seconds)s</t>
						<t id="102">(unit hours)h</t>
						<t id="103">(unit minutes)min</t>
						<t id="104">(unit days)d</t> -->
						<!-- <t id="534">within a minute</t> -->
						<!-- <set_value name="$time_mins" exact="$Time / 60.0" />
						<do_if value="$time_mins ge 60.0">
							<set_value name="$time_hs" exact="$time_mins / 60.0" />
							<set_value name="$timeText" exact="(($time_hs * 100)i / 100) + {1001, 102}" />
						</do_if>
						<do_else>
							<set_value name="$timeText" exact="(($time_mins * 100)i / 100) + {1001, 103}" />
						</do_else> -->
						<!-- <debug_text text="'$Time: ' + $Time" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" /> -->
						<set_value name="$time_mins" exact="$Time / 60.0" />
						<!-- <debug_text text="'$time_mins: ' + $time_mins" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" /> -->
						<do_if value="$time_mins ge 60.0">
							<set_value name="$format" exact="'%H' + {1001, 102} + ' %M' + {1001, 103}" />
							<set_value name="$timeText" exact="$Time.formatted.{$format}" />
						</do_if>
						<do_elseif value="$time_mins ge 1">
							<!-- <set_value name="$format" exact="'%M' + {1001, 103}" /> -->
							<!-- <set_value name="$timeText" exact="((($time_mins + 0.5) * 100)i / 100.0) + {1001, 103}" /> -->
							<!-- <set_value name="$timeText" exact="($time_mins + 0.5)i + {1001, 103}" /> -->
							<set_value name="$format" exact="'%M' + {1001, 103} + ' %S' + {1001, 100}" />
							<set_value name="$timeText" exact="$Time.formatted.{$format}" />
						</do_elseif>
						<do_else>
							<!-- <set_value name="$timeText" exact="{11513, 534}" /> -->
							<set_value name="$format" exact="'%S' + {1001, 100}" />
							<set_value name="$timeText" exact="$Time.formatted.{$format}" />
						</do_else>
						<return value="$timeText" />
					</actions>
				</library>
				<!--
					           ,,                             ,,
					           db                           `7MM
					                                          MM
					 ,6"Yb.  `7MM       ,pW"Wq.`7Mb,od8  ,M""bMM  .gP"Ya `7Mb,od8 ,pP"Ybd
					8)   MM    MM      6W'   `Wb MM' "',AP    MM ,M'   Yb  MM' "' 8I   `"
					 ,pm9MM    MM      8M     M8 MM    8MI    MM 8M""""""  MM     `YMMMa.
					8M   MM    MM      YA.   ,A9 MM    `Mb    MM YM.    ,  MM     L.   I8
					`Moo9^Yo..JMML.     `Ybmd9'.JMML.   `Wbmd"MML.`Mbmmd'.JMML.   M9mmmP'
				 -->
				<cue name="AIPilotOrders" namespace="this">
					<cues>
						<cue name="AIPilotOrders_AssignShips" namespace="this">
							<conditions>
								<event_ui_triggered screen="'kEM'" />
								<check_value value="event.param2 == 'kEM_assign_ships'" />
							</conditions>
							<actions>
								<set_value name="$Cue_Mission" exact="event.param3" />
								<debug_text text="@$Cue_Mission.$Ship + ' $ship: ' + @$Cue_Mission.$Ship + ' (' + @$Cue_Mission.$Ship.knownname + ', ' + @$Cue_Mission.$Ship.idcode + ')'" chance="UserSettings.$debugChance" />
							</actions>
							<cues>
								<cue name="AIPilotOrders_AssignShips2">
									<conditions>
										<event_ui_triggered screen="'kEM_ships_assigned'" />
										<check_value value="event.param2 == 'select_component'" />
									</conditions>
									<actions>
										<set_value name="$ship" exact="event.param3" />
										<debug_text text="@$Cue_Mission.$Ship + ' $ship: ' + $ship + ' (' + @$ship.knownname + ', ' + @$ship.idcode + ')'" chance="UserSettings.$debugChance" />
										<do_if value="not @$Cue_Mission.$Ship.pilot.$kEMissions_mission.exists">
											<set_value name="$Cue_Mission.$Ship.pilot.$kEMissions_mission" exact="$Cue_Mission" />
										</do_if>
										<do_if value="$ship.isclass.ship">
											<signal_cue_instantly cue="AIPilotOrders_ProtectShip" param="table[
												$ship_target = $Cue_Mission.$Ship,
												$ship_defenders = [$ship]
											]" />
											<raise_lua_event name="'kEM_refresh_map_menu'" />
										</do_if>
										<reset_cue cue="this" />
										<reset_cue cue="parent" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="AIPilotOrders_RemoveShips" namespace="this">
							<conditions>
								<event_ui_triggered screen="'kEM'" />
								<check_value value="event.param2 == 'kEM_remove_ships'" />
							</conditions>
							<actions>
								<set_value name="$Cue_Mission" exact="event.param3" />
								<debug_text text="@$Cue_Mission.$Ship + ' $ship: ' + @$Cue_Mission.$Ship + ' (' + @$Cue_Mission.$Ship.knownname + ', ' + @$Cue_Mission.$Ship.idcode + ')'" chance="UserSettings.$debugChance" />
								<signal_objects object="player.galaxy" param="'kEMission_remove_ships'" param2="$Cue_Mission" />
								<raise_lua_event name="'kEM_refresh_mapMenu_infoframe'" />
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="AIPilotOrders_InteractMenu">
							<conditions>
								<event_cue_signalled cue="md.Interact_Menu_API.Get_Actions" />
								<!-- <check_value value="player.occupiedship" /> -->
							</conditions>
							<actions>
								<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance" />
								<debug_text text="'event.param: ' + @event.param" chance="UserSettings.$debugChance" />
								<debug_text text="'event.param2: ' + @event.param2" chance="UserSettings.$debugChance" />
								<debug_text text="'event.param3: ' + @event.param3" chance="UserSettings.$debugChance" />
								<set_value name="$interact_ships" exact="@event.param.$selectedplayerships" />
								<debug_text text="'$interact_ships: ' + $interact_ships" chance="UserSettings.$debugChance" />
								<set_value name="$interact_target" exact="@event.param.$object" />
								<do_if value="@$interact_ships.count and $interact_target.isclass.[class.ship]">
									<debug_text text="'$interact_target: ' + $interact_target + ' (' + $interact_target.knownname + ', ' + $interact_target.idcode + ')'" chance="UserSettings.$debugChance" />
									<debug_text text="'$hasrelation.enemy: ' + $interact_target.owner.hasrelation.enemy.{faction.player}" chance="UserSettings.$debugChance" />
									<do_if value="not $interact_target.owner.hasrelation.enemy.{faction.player}">
										<do_if value="@$interact_target.pilot.$kEMissions_mission.exists">
											<!-- <set_value name="$section" exact="'main_orders'" /> -->
											<set_value name="$section" exact="'selected_orders'" />
											<!-- <t id="371">Protect Ship</t> -->
											<!-- <set_value name="$text" exact="{1041, 371}" /> -->
											<set_value name="$text" exact="$interact_target.pilot.$kEMissions_mission.$mission_name_short" />
											<set_value name="$icon" exact="'order_protectship'" />
											<do_if value="UserSettings.$debugChance">
												<debug_text text="'$section: ' + $section" />
												<debug_text text="'$text: ' + $text" />
												<debug_text text="'$icon: ' + $icon" />
											</do_if>
											<signal_cue_instantly cue="md.Interact_Menu_API.Add_Action" param = "table[
												$id = 'protect_ship',
												$section = $section,
												$text = $text,
												$icon = $icon,
												$callback = AIPilotOrders_OnInteractMenuProtectShip
											]" />
										</do_if>
									</do_if>
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="AIPilotOrders_OnInteractMenuProtectShip">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<debug_text text="event.param" chance="UserSettings.$debugChance" />
								<set_value name="$interact_ships" exact="@event.param.$selectedplayerships" />
								<debug_text text="'$interact_ships: ' + $interact_ships" chance="UserSettings.$debugChance" />
								<set_value name="$interact_target" exact="@event.param.$object" />
								<debug_text text="'$interact_target: ' + $interact_target + ' (' + $interact_target.knownname + ', ' + $interact_target.idcode + ')'" chance="UserSettings.$debugChance" />
								<do_if value="$interact_ships.count">
									<signal_cue_instantly cue="AIPilotOrders_ProtectShip" param="table[
										$ship_target = $interact_target,
										$ship_defenders = $interact_ships
									]" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="AIPilotOrders_ProtectShip" namespace="this" instantiate="true" version="5">
							<conditions>
								<event_cue_signalled />
							</conditions>
							<actions>
								<set_value name="$Ship_kEMission" exact="event.param.$ship_target" />
								<set_value name="$ship_defenders" exact="event.param.$ship_defenders" />
								<set_value name="$Cue_Mission" exact="$Ship_kEMission.pilot.$kEMissions_mission" />
								<do_if value="not @$Cue_Mission.$Ship.pilot.$kEMissions_mission.exists">
									<set_value name="$Cue_Mission.$Ship.pilot.$kEMissions_mission.exists" exact="$Cue_Mission" />
								</do_if>
								<debug_text text="$Cue_Mission.$MissionId + ' $Ship_kEMission: ' + $Ship_kEMission + ' (' + $Ship_kEMission.knownname + ', ' + $Ship_kEMission.idcode + ')'" chance="UserSettings.$debugChance" />
								<set_value name="$Ships_aiDefenders" exact="$Cue_Mission.$Ships_aiDefenders" />
								<set_value name="$ships_attacking" exact="[]" />
								<do_for_each name="$ship_inList" in="event.param.$ship_defenders">
									<append_to_list name="$ships_attacking" exact="$ship_inList" />
									<do_for_each name="$ship_inList2" in="$ship_inList.subordinates">
										<append_to_list name="$ships_attacking" exact="$ship_inList2" />
									</do_for_each>
								</do_for_each>
								<do_for_each name="$ship_inList" in="event.param.$ship_defenders">
									<set_value name="$kEMission_protectCue" exact="@$ship_inList.assignedaipilot.$kEMission_protectCue" />
									<set_value name="$kEMission_protectCue_cleanUp" exact="@$ship_inList.assignedaipilot.$kEMission_protectCue_cleanUp" />
									<do_if value="@$ship_inList.assignedaipilot.$kEMission_protectCue_cleanUp.exists">
										<include_actions ref="AIPilotOrders_ProtectShip_CleanUp_OneShip" />
										<remove_from_group group="$kEMission_protectCue.$Ships_aiDefenders" object="$ship_inList" />
										<do_if value="not $kEMission_protectCue.$Ships_aiDefenders.count">
											<do_if value="$kEMission_protectCue_cleanUp.state == cuestate.waiting">
												<do_if value="not @$kEMission_protectCue_cleanUp.$isSignalled">
													<set_value name="$kEMission_protectCue_cleanUp.$isSignalled" exact="true" />
													<signal_cue_instantly cue="$kEMission_protectCue_cleanUp" />
												</do_if>
											</do_if>
										</do_if>
									</do_if>
								</do_for_each>
								<remove_value name="$ships_attacking" />
								<set_value name="$isOrdersRefreshing" exact="false" />
								<set_value name="$time_orderCancelled" exact="0" />
							</actions>
							<patch sinceversion="2">
								<debug_text text="'patch sinceversion 2, state: ' + this.state" />
								<do_if value="not @$Cue_Mission.exists">
									<debug_text text="$Cue_Mission.$MissionId + ' $Cue_Mission: ' + @$Cue_Mission + ' cancelled!'" />
									<cancel_cue cue="this" />
								</do_if>
							</patch>
							<patch sinceversion="3">
								<debug_text text="'patch sinceversion 3, state: ' + this.state" />
								<signal_cue cue="AIPilotOrders_ProtectShip_CleanUp" />
							</patch>
							<patch sinceversion="4">
								<debug_text text="'patch sinceversion 4, state: ' + this.state" />
								<do_if value="not @$Cue_Mission.exists">
									<debug_text text="'$Cue_Mission.exists: ' + @$Cue_Mission.exists" />
									<cancel_cue cue="parent" />
								</do_if>
							</patch>
							<patch sinceversion="5">
								<debug_text text="'patch sinceversion 5, state: ' + this.state" />
								<set_value name="$isOrdersRefreshing" exact="false" />
							</patch>
							<cues>
								<cue name="AIPilotOrders_ProtectShip_Init" checktime="player.age + 1s">
									<actions>
										<do_for_each name="$ship_inList" in="$ship_defenders">
											<do_if value="(not $ship_inList.orders.count) or $ship_inList == player.occupiedship">
												<add_to_group groupname="$Ships_aiDefenders" object="$ship_inList" />
												<create_order name="$order_follow" object="$ship_inList" id="'Follow'">
													<param name="target" value="$Ship_kEMission" />
												</create_order>
												<set_value name="$ship_inList.assignedaipilot.$kEMission_protectCue" exact="namespace" />
												<set_value name="$ship_inList.assignedaipilot.$kEMission_protectCue_cleanUp" exact="AIPilotOrders_ProtectShip_CleanUp" />
												<set_value name="$ship_inList.assignedaipilot.$kEMission_followOrder" exact="$order_follow" />
												<set_value name="$ship_inList.assignedaipilot.$kEMission_attackOrder" exact="null" />
												<set_value name="$ship_inList.assignedaipilot.$kEMission_attackTarget" exact="null" />
												<set_value name="$ship_inList.assignedaipilot.$kEMission_patrolOrder" exact="null" />
												<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ', ' + $ship_inList.assignedaipilot.$kEMission_protectCue_cleanUp + ') $order_follow: ' + $order_follow" chance="UserSettings.$debugChance" />
											</do_if>
										</do_for_each>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="AIPilotOrders_ProtectShip_OrderCancelled" instantiate="true">
									<conditions>
										<event_object_order_cancelled group="$Ships_aiDefenders" />
									</conditions>
									<actions>
										<set_value name="$ship_inList" exact="event.object" />
										<set_value name="$order_cancelled" exact="event.param" />
										<!-- <do_if value="$order_cancelled == @$ship_inList.assignedaipilot.$kEMission_followOrder"> -->
										<do_if value="not @$ship_inList.assignedaipilot.$kEMission_followOrder.exists">
											<debug_text text="'$ship_inList: ' + $ship_inList.knownname + ' ' + $ship_inList.idcode" chance="UserSettings.$debugChance" />
											<set_value name="$time_orderCancelled" exact="player.age" />
											<debug_text text="'$isOrdersRefreshing: ' + $isOrdersRefreshing + ' $time_orderCancelled: ' + $time_orderCancelled" chance="UserSettings.$debugChance" />
											<do_if value="not $isOrdersRefreshing">
												<include_actions ref="AIPilotOrders_ProtectShip_CleanUp_OneShip" />
												<remove_from_group group="$Ships_aiDefenders" object="$ship_inList" />
												<do_if value="not $Ships_aiDefenders.count">
													<signal_cue cue="AIPilotOrders_ProtectShip_CleanUp" />
												</do_if>
												<cancel_cue cue="this" />
											</do_if>
										</do_if>
										<do_else>
											<cancel_cue cue="this" />
										</do_else>
									</actions>
									<cues>
										<cue name="AIPilotOrders_ProtectShip_OrderCancelled2" checktime="player.age + 2s">
											<actions>
												<do_if value="player.age gt $time_orderCancelled + 1s">
													<set_value name="$isOrdersRefreshing" exact="false" />
													<debug_text text="'$isOrdersRefreshing: ' + $isOrdersRefreshing + ' $time_orderCancelled: ' + $time_orderCancelled" chance="UserSettings.$debugChance" />
													<cancel_cue cue="parent" />
												</do_if>
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="AIPilotOrders_ProtectShip_CleanUp" version="4">
									<patch sinceversion="4" state="waiting">
										<debug_text text="'patch sinceversion 4, state: ' + this.state" />
										<do_if value="not @$Cue_Mission.exists">
											<debug_text text="'$Cue_Mission.exists: ' + @$Cue_Mission.exists" />
											<cancel_cue cue="parent" />
										</do_if>
									</patch>
									<conditions>
										<check_any>
											<event_cue_signalled />
											<check_all>
												<check_any>
													<event_object_signalled object="player.galaxy" param="'kEMission_complete'" />
													<event_object_signalled object="player.galaxy" param="'kEMission_remove_ships'" />
												</check_any>
												<check_any>
													<check_value value="event.param2 == $Cue_Mission" />
													<check_value value="not $Cue_Mission.exists" />
												</check_any>
											</check_all>
											<event_cue_cancelled cue="$Cue_Mission" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$ships_attacking" exact="[]" />
										<do_for_each name="$ship_inList" in="$Ships_aiDefenders">
											<append_to_list name="$ships_attacking" exact="$ship_inList" />
											<do_for_each name="$ship_inList2" in="$ship_inList.subordinates">
												<do_if value="$ship_inList2.primarypurpose == purpose.fight">
													<append_to_list name="$ships_attacking" exact="$ship_inList2" />
												</do_if>
											</do_for_each>
										</do_for_each>
										<do_for_each name="$ship_inList" in="$ships_attacking">
											<do_if value="$ship_inList.isoperational">
												<include_actions ref="AIPilotOrders_ProtectShip_CleanUp_OneShip" />
											</do_if>
										</do_for_each>
										<remove_value name="$ships_attacking" />
										<clear_group group="$Cue_Mission.$Ships_aiDefenders" />
										<reset_cue cue="this" />
										<cancel_cue cue="parent" />
									</actions>
								</cue>
								<library name="AIPilotOrders_ProtectShip_CleanUp_OneShip">
									<actions>
										<do_if value="@$ship_inList.assignedaipilot.$kEMission_followOrder.exists">
											<cancel_order order="$ship_inList.assignedaipilot.$kEMission_followOrder" />
										</do_if>
										<do_if value="@$ship_inList.assignedaipilot.$kEMission_attackOrder.exists">
											<cancel_order order="$ship_inList.assignedaipilot.$kEMission_attackOrder" />
										</do_if>
										<do_if value="@$ship_inList.assignedaipilot.$kEMission_patrolOrder.exists">
											<cancel_order order="$ship_inList.assignedaipilot.$kEMission_patrolOrder" />
										</do_if>
										<remove_value name="$ship_inList.assignedaipilot.$kEMission_followOrder" />
										<remove_value name="$ship_inList.assignedaipilot.$kEMission_attackOrder" />
										<remove_value name="$ship_inList.assignedaipilot.$kEMission_attackTarget" />
										<remove_value name="$ship_inList.assignedaipilot.$kEMission_patrolOrder" />
										<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ')'" chance="UserSettings.$debugChance" />
									</actions>
								</library>
								<cue name="AIPilotOrders_ProtectShip_AttackTarget">
									<conditions>
										<!-- <event_object_signalled object="player.galaxy" param="'kEMission_protect_ship_attack_target'" param2="$Cue_Mission" /> -->
										<event_object_signalled object="player.galaxy" param="'kEMission_protect_ship_attack_target'" />
									</conditions>
									<actions>
										<debug_text text="'$Cue_Mission: ' + $Cue_Mission + ' == ' + event.param2 + '? ' + ($Cue_Mission == event.param2)" chance="UserSettings.$debugChance" />
										<do_if value="$Cue_Mission == event.param2">
											<set_value name="$isOrdersRefreshing" exact="true" />
											<set_value name="$enemies_all" exact="event.param3.$enemies_all" />
											<set_value name="$ships_attacking" exact="[]" />
											<do_for_each name="$ship_inList" in="$Ships_aiDefenders">
												<debug_text text="'$ship_inList: ' + $ship_inList + ' $ship_inList.assignedaipilot.$kEMission_attackOrder: ' + @$ship_inList.assignedaipilot.$kEMission_attackOrder" chance="UserSettings.$debugChance" />
												<do_if value="
													$ship_inList.primarypurpose == purpose.fight
													and
													(not @$ship_inList.assignedaipilot.$kEMission_attackOrder.exists)
												">
													<append_to_list name="$ships_attacking" exact="$ship_inList" />
													<do_for_each name="$ship_inList2" in="$ship_inList.subordinates">
														<do_if value="$ship_inList2.primarypurpose == purpose.fight">
															<do_if value="not @$ship_inList2.assignedaipilot.$kEMission_attackOrder.exists">
																<append_to_list name="$ships_attacking" exact="$ship_inList2" />
															</do_if>
														</do_if>
													</do_for_each>
												</do_if>
											</do_for_each>
											<debug_text text="'$ships_attacking: ' + $ships_attacking" chance="UserSettings.$debugChance" />
											<create_group groupname="$enemies_big" />
											<do_for_each name="$ship_inList" in="$ships_attacking">
												<debug_text text="'$ship_inList: ' + $ship_inList + ' $ship_inList.assignedaipilot.$kEMission_attackOrder: ' + @$ship_inList.assignedaipilot.$kEMission_attackOrder" chance="UserSettings.$debugChance" />
												<set_value name="$enemy_target" exact="$enemies_all.{1}" />
												<do_if value="
													(not @$enemy_target.container.exists)
													and
													@$ship_inList.isoperational
													and
													(not @$ship_inList.assignedaipilot.$kEMission_attackOrder.exists)
												">
													<set_value name="$isOk" exact="
														$ship_inList.isclass.[class.ship_l, class.ship_xl]
														or
														$enemy_target.size le $ship_inList.size * 1.25
														or
														(
															(@$enemy_target.defencenpc.$kAAITweaks_attackers.count + @$enemy_target.pilot.$kAAITweaks_attackers.count)
															ge
															(@$enemy_target.turrets.operational.count + @$enemy_target.weapons.operational.count) * 0.75
														)
													" />
													<do_if value="not $isOk">
														<do_for_each name="$enemy_inList" in="$enemies_all">
															<do_if value="
																(not @$enemy_inList.container.exists)
																and
																(
																	$enemy_inList.size le $ship_inList.size * 1.25
																	or
																	(
																		(@$enemy_inList.defencenpc.$kAAITweaks_attackers.count + @$enemy_inList.pilot.$kAAITweaks_attackers.count)
																		ge
																		(@$enemy_inList.turrets.operational.count + @$enemy_inList.weapons.operational.count) * 0.75
																	)
																)
															">
																<do_if value="not $enemies_big.count">
																	<set_value name="$isOk" exact="true" />
																</do_if>
																<do_else>
																	<do_for_each name="$enemy_big" in="$enemies_big">
																		<do_if value="$enemy_target.distanceto.{$enemy_big} gt 5km">
																			<set_value name="$isOk" exact="true" />
																			<break />
																		</do_if>
																	</do_for_each>
																</do_else>
																<do_if value="$isOk">
																	<set_value name="$enemy_target" exact="$enemy_inList" />
																	<break />
																</do_if>
															</do_if>
															<do_else>
																<add_to_group groupname="$enemies_big" object="$enemy_inList" />
															</do_else>
														</do_for_each>
													</do_if>
													<debug_text text="'$isOk: ' + $isOk" chance="UserSettings.$debugChance" />
													<do_if value="$isOk">
														<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ') $enemy_target: ' + $enemy_target + ' (' + $enemy_target.knownname + ', ' + $enemy_target.idcode + ')'" chance="UserSettings.$debugChance" />
														<do_if value="@$ship_inList.assignedaipilot.$kEMission_attackOrder.exists">
															<cancel_order order="$ship_inList.assignedaipilot.$kEMission_attackOrder" />
														</do_if>
														<create_order name="$order_attack" object="$ship_inList" id="'Attack'" immediate="true">
															<param name="primarytarget" value="$enemy_target" />
															<param name="pursuedistance" value="$ship_inList.sector.size" />
															<param name="pursuetargets" value="true" />
															<param name="allowothertargets" value="true"/>
														</create_order>
														<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ') $enemy_target: ' + $enemy_target + ' (' + $enemy_target.knownname + ', ' + $enemy_target.idcode + ', ' + $enemy_target.container + ') $order_attack: ' + $order_attack" chance="UserSettings.$debugChance" />
														<set_value name="$ship_inList.assignedaipilot.$kEMission_attackOrder" exact="$order_attack" />
														<set_value name="$ship_inList.assignedaipilot.$kEMission_attackTarget" exact="$enemy_target" />
														<clear_group group="$Cue_Mission.$GrouOfOne_aiDefendersTarget" />
														<add_to_group groupname="$Cue_Mission.$GrouOfOne_aiDefendersTarget" object="$enemy_target" />
													</do_if>
												</do_if>
											</do_for_each>
											<clear_group group="$enemies_big" />
											<remove_value name="$enemies_big" />
											<remove_value name="$ships_attacking" />
											<set_value name="$isOrdersRefreshing" exact="false" />
										</do_if>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="AIPilotOrders_ProtectShip_AttackTarget_TargetCleanUp" version="3">
									<patch sinceversion="3" state="waiting">
										<debug_text text="'patch sinceversion 3, state: ' + this.state" />
										<do_if value="(typeof $Cue_Mission.$GrouOfOne_aiDefendersTarget) != datatype.group">
											<debug_text text="'typeof $Cue_Mission.$GrouOfOne_aiDefendersTarget (pre): ' + (typeof $Cue_Mission.$GrouOfOne_aiDefendersTarget)" />
											<create_group groupname="$Cue_Mission.$GrouOfOne_aiDefendersTarget" />
											<debug_text text="'typeof $Cue_Mission.$GrouOfOne_aiDefendersTarget (post): ' + (typeof $Cue_Mission.$GrouOfOne_aiDefendersTarget)" />
										</do_if>
									</patch>
									<conditions>
										<check_any>
											<event_object_destroyed group="$Cue_Mission.$GrouOfOne_aiDefendersTarget" />
											<event_object_changed_sector group="$Cue_Mission.$GrouOfOne_aiDefendersTarget" />
											<event_object_changed_sector group="$Cue_Mission.$Ships_aiDefenders" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$isOrdersRefreshing" exact="true" />
										<debug_text text="$Cue_Mission.$MissionId + ' event.name: ' + event.name + ' event.object: ' + event.object + ' (' + event.object.knownname + ', ' + event.object.idcode + ')'" chance="UserSettings.$debugChance" />
										<clear_group group="$Cue_Mission.$GrouOfOne_aiDefendersTarget" />
										<set_value name="$ships_attacking" exact="[]" />
										<do_for_each name="$ship_inList" in="$Ships_aiDefenders">
											<append_to_list name="$ships_attacking" exact="$ship_inList" />
											<do_for_each name="$ship_inList2" in="$ship_inList.subordinates">
												<do_if value="$ship_inList2.primarypurpose == purpose.fight">
													<append_to_list name="$ships_attacking" exact="$ship_inList2" />
												</do_if>
											</do_for_each>
										</do_for_each>
										<do_for_each name="$ship_inList" in="$ships_attacking">
											<do_if value="@$ship_inList.isoperational">
												<do_if value="@$ship_inList.assignedaipilot.$kEMission_attackOrder.exists">
													<cancel_order order="$ship_inList.assignedaipilot.$kEMission_attackOrder" />
												</do_if>
												<remove_value name="$ship_inList.assignedaipilot.$kEMission_attackOrder" />
												<remove_value name="$ship_inList.assignedaipilot.$kEMission_attackTarget" />
											</do_if>
										</do_for_each>
										<remove_value name="$ships_attacking" />
										<set_value name="$isOrdersRefreshing" exact="false" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="AIPilotOrders_ProtectShip_Patrol">
									<conditions>
										<event_object_signalled object="player.galaxy" param="'kEMission_protect_ship_patrol'" param2="$Ship_kEMission" />
									</conditions>
									<actions>
										<set_value name="$isOrdersRefreshing" exact="true" />
										<set_value name="$patrolLocation" exact="event.param3" />
										<debug_text text="$Cue_Mission.$MissionId + ' $patrolLocation: ' + $patrolLocation + ' (' + @$patrolLocation.knownname + ', ' + @$patrolLocation.idcode + ')'" chance="UserSettings.$debugChance" />
										<do_for_each name="$ship_inList" in="$Ships_aiDefenders">
											<do_if value="@$ship_inList.isoperational">
												<do_if value="@$ship_inList.assignedaipilot.$kEMission_patrolOrder.exists">
													<cancel_order order="$ship_inList.assignedaipilot.$kEMission_patrolOrder" />
												</do_if>
												<create_position name="$pos_offset" object="$patrolLocation" space="$patrolLocation.sector" max="10km"/>
												<create_order name="$order_patrol" object="$ship_inList" id="'MoveWait'">
													<param name="destination" value="[$patrolLocation.sector, $pos_offset]"/>
													<param name="timeout" value="2min"/>
												</create_order>
												<set_value name="$ship_inList.assignedaipilot.$kEMission_patrolOrder" exact="$order_patrol" />
												<do_if value="@$ship_inList.assignedaipilot.$kEMission_followOrder.exists">
													<cancel_order order="$ship_inList.assignedaipilot.$kEMission_followOrder" />
												</do_if>
												<create_order name="$order_follow" object="$ship_inList" id="'Follow'">
													<param name="target" value="$Ship_kEMission" />
												</create_order>
												<set_value name="$ship_inList.assignedaipilot.$kEMission_followOrder" exact="$order_follow" />
												<debug_text text="$Cue_Mission.$MissionId + ' $ship_inList: ' + $ship_inList + ' (' + $ship_inList.knownname + ', ' + $ship_inList.idcode + ') $order_patrol: ' + $order_patrol" chance="UserSettings.$debugChance" />
											</do_if>
										</do_for_each>
										<set_value name="$isOrdersRefreshing" exact="false" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<!-- <cue name="Debug_PlayerAttacks">
					<conditions>
						<event_player_owned_attacked_object />
					</conditions>
					<actions>
					</actions>
				</cue> -->
				<!--
					
					 ,,                                               ,,
					*MM                                        mm     db
					 MM                                        MM
					 MM,dMMb.   ,pW"Wq.`7MM  `7MM  `7MMpMMMb.mmMMmm `7MM  .gP"Ya  ,pP"Ybd
					 MM    `Mb 6W'   `Wb MM    MM    MM    MM  MM     MM ,M'   Yb 8I   `"
					 MM     M8 8M     M8 MM    MM    MM    MM  MM     MM 8M"""""" `YMMMa.
					 MM.   ,M9 YA.   ,A9 MM    MM    MM    MM  MM     MM YM.    , L.   I8
					 P^YbmdP'   `Ybmd9'  `Mbod"YML..JMML  JMML.`Mbmo.JMML.`Mbmmd' M9mmmP'
					
					
				 -->
				<cue name="Bounties" namespace="this" version="9">
					<actions>
						<create_group groupname="$pilots" />
						<create_group groupname="$pilots_inRange" />
						<set_value name="$isMissionsFromConvo" exact="false" />
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="0" />
						<debug_text text="'$debugChance_bounties: ' + (md.kuertee_emergent_missions.UserSettings.$debugChance_bounties == 100)" />
						<set_value name="global.$Bounties" exact="this" />
					</actions>
					<patch sinceversion="2" state="complete">
						<debug_text text="'patch sinceversion 2, state: ' + this.state" />
						<clear_group group="$pilots" />
						<create_group groupname="$pilots_inRange" />
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="100" />
						<debug_text text="'$debugChance_bounties: ' + (md.kuertee_emergent_missions.UserSettings.$debugChance_bounties == 100)" />
					</patch>
					<patch sinceversion="3" state="complete">
						<debug_text text="'patch sinceversion 3, state: ' + this.state" />
						<do_for_each name="$pilot_inList" in="$pilots">
							<remove_value name="$pilot_inList.$kEM_lastKnownLocation" />
							<remove_value name="$pilot_inList.$kEM_kills" />
							<remove_value name="$pilot_inList.$kEM_timeLastUpdate" />
						</do_for_each>
						<clear_group group="$pilots" />
						<clear_group group="$pilots_inRange" />
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="100" />
						<reset_cue cue="Bounties_OnceOnly" />
					</patch>
					<patch sinceversion="5" state="complete">
						<debug_text text="'patch sinceversion 5, state: ' + this.state" />
						<do_for_each name="$pilot_inList" in="$pilots">
							<remove_value name="$pilot_inList.$kEM_lastKnownLocation" />
							<remove_value name="$pilot_inList.$kEM_kills" />
							<remove_value name="$pilot_inList.$kEM_timeLastUpdate" />
						</do_for_each>
						<clear_group group="$pilots" />
						<clear_group group="$pilots_inRange" />
						<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="100" />
						<reset_cue cue="Bounties_OnceOnly" />
					</patch>
					<patch sinceversion="8" state="complete">
						<debug_text text="'patch sinceversion 8, state: ' + this.state" />
						<set_value name="$isMissionsFromConvo" exact="false" />
					</patch>
					<patch sinceversion="9" state="complete">
						<debug_text text="'patch sinceversion 9, state: ' + this.state" />
						<set_value name="global.$Bounties" exact="this" />
					</patch>
					<cues>
						<cue name="Bounties_OnceOnly" checktime="player.age + 1min">
							<actions>
								<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="0" />
								<debug_text text="'$debugChance_bounties: ' + (md.kuertee_emergent_missions.UserSettings.$debugChance_bounties == 100)" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="Bounties_DebugChat">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_any>
									<check_value value="event.param3.$text == 'debug em bounties pilots'" />
									<check_value value="event.param3.$text == 'debug em bounties dist'" />
									<check_value value="event.param3.$text == 'debug em bounties sector'" />
									<check_value value="event.param3.$text == 'debug em bounties satellites'" />
									<check_value value="event.param3.$text == 'debug em bounties bountiesByFaction'" />
									<check_value value="event.param3.$text == 'debug em bounties cues'" />
									<check_value value="event.param3.$text == 'debug em bounties global'" />
								</check_any>
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<do_if value="event.param3.$text == 'debug em bounties pilots'">
									<set_value name="$isBreak" exact="false" />
									<debug_text text="'$pilots.count: ' + $pilots.count" />
									<do_for_each name="$pilot" in="$pilots">
										<debug_text text="'$pilot: ' + $pilot + ' (' + @$pilot.knownname + ', ' + @$pilot.ship.idcode + ', ' + @$pilot.owner + ', ' + @$pilot.sector.knownname + ') $kEM_kills: ' + @$pilot.$kEM_kills + ' $kEM_lastKnownLocation.keys.count: ' + $pilot.$kEM_lastKnownLocation.keys.count" />
										<do_for_each name="$faction_inList" in="$pilot.$kEM_lastKnownLocation.keys.list">
											<debug_text text="'    $faction_inList: ' + $faction_inList + ' count: ' + $pilot.$kEM_lastKnownLocation.{$faction_inList}.count" />
											<do_for_each name="$lastKnown_inList" in="$pilot.$kEM_lastKnownLocation.{$faction_inList}">
												<debug_text text="'        $position: ' + $lastKnown_inList.$position" />
												<debug_text text="'        $sector: ' + $lastKnown_inList.$sector + ' (' + $lastKnown_inList.$sector.knownname + ')'" />
												<do_for_each name="$key_inList" in="$lastKnown_inList.keys.list">
													<do_if value="$key_inList != '$position' and $key_inList != '$sector' and $key_inList != '$otherPosInArea'">
														<set_value name="$value" exact="$lastKnown_inList.{$key_inList}" />
														<debug_text text="'            ' + $key_inList + ': ' + $value" />
													</do_if>
												</do_for_each>
												<do_if value="$lastKnown_inList.$otherPosInArea.count">
													<debug_text text="'        $otherPosInArea: ' + $lastKnown_inList.$otherPosInArea" />
													<do_for_each name="$otherPos_inList" in="$lastKnown_inList.$otherPosInArea">
														<debug_text text="'            $position: ' + $otherPos_inList.$position" />
														<do_for_each name="$key_inList2" in="$otherPos_inList.keys.list">
															<do_if value="$key_inList2 != '$position' and $key_inList2 != '$sector'">
																<set_value name="$value" exact="$otherPos_inList.{$key_inList2}" />
																<debug_text text="'                ' + $key_inList2 + ': ' + $value" />
															</do_if>
														</do_for_each>
													</do_for_each>
												</do_if>
											</do_for_each>
											<do_if value="$pilot.$kEM_lastKnownLocation.{$faction_inList}.count ge 3">
												<!-- <set_value name="$isBreak" exact="true" /> -->
											</do_if>
										</do_for_each>
										<do_if value="$isBreak">
											<break />
										</do_if>
									</do_for_each>
								</do_if>
								<do_elseif value="event.param3.$text == 'debug em bounties dist'">
									<set_value name="$dist" exact="player.ship.sector.distanceto.{player.ship}" />
									<debug_text text="'$dist (sector to player.ship): ' + $dist" />
									<create_position name="$pos" space="player.ship.zone" object="player.ship" />
									<set_value name="$dist" exact="player.ship.distanceto.{$pos}" />
									<debug_text text="'$dist (space = zone, ship to pos): ' + $dist" />
									<set_value name="$dist" exact="player.ship.sector.distanceto.{$pos}" />
									<debug_text text="'$dist (space = zone, sector to pos): ' + $dist" />
									<create_position name="$pos" space="player.ship.sector" object="player.ship" />
									<set_value name="$dist" exact="player.ship.distanceto.{$pos}" />
									<debug_text text="'$dist (space = sector, ship to pos): ' + $dist" />
									<set_value name="$dist" exact="player.ship.sector.distanceto.{$pos}" />
									<debug_text text="'$dist (space = sector, sector to pos): ' + $dist" />
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em bounties sector'">
									<debug_text text="Bounties_ChangeSector.state" />
									<debug_text text="'player.sector: '+ player.sector" />
									<debug_text text="'player.zone: '+ player.zone" />
									<debug_text text="'player.zone.sector: ' + player.zone.sector" />
									<!-- class.highwayentrygate -->
									<!-- highwayexitgate -->
									<!-- class.gate -->
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em bounties satellites'">
									<find_sector_in_range name="$sector" object="player.ship" maxdistance="0" sortbydistanceto="player.ship" />
									<debug_text text="'$sector: ' + $sector.knownname" />
									<find_object name="$satellite" class="class.satellite" space="$sector" sortbydistanceto="player.ship" />
									<debug_text text="'$satellite (any): ' + $satellite" />
									<find_object name="$satellite" class="class.satellite" space="$sector" owner="faction.ministry" sortbydistanceto="player.ship" />
									<debug_text text="'$satellite (ministry): ' + $satellite" />
									<find_object name="$satellite" class="class.satellite" space="$sector" owner="faction.teladi" sortbydistanceto="player.ship" />
									<debug_text text="'$satellite (teladi): ' + $satellite" />
									<find_object name="$satellite" class="class.satellite" space="$sector" owner="faction.paranid" sortbydistanceto="player.ship" />
									<debug_text text="'$satellite (paranid): ' + $satellite" />
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em bounties bountiesByFaction'">
									<do_for_each name="$faction_inList" in="$bountiesByFaction.keys.list">
										<debug_text text="'$bountiesByFaction.{' + $faction_inList + '}'" />
									</do_for_each>
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em bounties cues'">
									<debug_text text="'Bounties_ArriveStation.state: ' + Bounties_ArriveStation.state" />
									<debug_text text="'Bounties_ArriveStation2.state: ' + Bounties_ArriveStation2.state" />
									<debug_text text="'Bounties_Convo.state: ' + Bounties_Convo.state" />
									<debug_text text="'$isMissionsFromConvo: ' + $isMissionsFromConvo" />
								</do_elseif>
								<do_elseif value="event.param3.$text == 'debug em bounties global'">
									<set_value name="$pilots" exact="global.$Bounties.$pilots" />
									<debug_text text="'from em $pilots: ' + $pilots" />
									<debug_text text="'from em $pilots.count: ' + $pilots.count" />
									<debug_text text="'from em $pilots.random: ' + $pilots.random.name" />
								</do_elseif>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<library name="Bounties_RegisterPilot" purpose="run_actions">
							<params>
								<param name="Pilot" />
							</params>
							<actions>
								<set_value name="$isNew" exact="false" />
								<set_value name="$isUpdated" exact="false" />
								<do_if value="not md.kuertee_emergent_missions.Bounties.$pilots.indexof.{$Pilot}">
									<add_to_group groupname="md.kuertee_emergent_missions.Bounties.$pilots" object="$Pilot" />
									<set_value name="$isNew" exact="true" />
								</do_if>
								<do_if value="not @$Pilot.$kEM_lastKnownLocation">
									<set_value name="$Pilot.$kEM_lastKnownLocation" exact="table[]" />
									<!-- 
										table[
											{faction} = [
												table[
													$sector = $Pilot.ship.sector,
													$position = $pos_current,
													$station = $station,
													$time = player.age,
													$distFromOld = $distFromOld,
													$time_elapsed = $time_elapsed,
													$otherPosInArea = []
												]
											], ...
										]
									-->
									<set_value name="$isUpdated" exact="true" />
								</do_if>
								<do_if value="not @$Pilot.$kEM_kills">
									<set_value name="$Pilot.$kEM_kills" exact="table[]" />
									<!--
										table[
											{faction} = table[
												{class.ship_xs} = 0,
												{class.ship_s} = 0,
												{class.ship_m} = 0,
												{class.ship_l} = 0,
												{class.ship_xl} = 0,
												{class.station} = 0
											],
											{faction} = table[], ...
										]
									-->
									<set_value name="$isUpdated" exact="true" />
								</do_if>
								<do_if value="$isNew or $isUpdated">
									<set_value name="$Pilot.$kEM_timeLastUpdate" exact="player.age" />
								</do_if>
								<do_if value="$isNew">
									<signal_objects object="$Pilot" param="'kEM_Bounties_RegisterPilot'" />
								</do_if>
								<debug_text text="$Pilot + ' (' + $Pilot.knownname + ', ' + @$Pilot.ship.idcode + ', ' + @$Pilot.ship.owner + ') $isNew: ' + $isNew + ' $isUpdated: ' + $isUpdated + ' $kEM_lastKnownLocation: ' + $Pilot.$kEM_lastKnownLocation + ', $kEM_kills: ' + $Pilot.$kEM_kills" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
							</actions>
						</library>
						<library name="Bounties_DeregisterPilot" purpose="run_actions">
							<params>
								<param name="Pilot" />
							</params>
							<actions>
								<remove_from_group group="md.kuertee_emergent_missions.Bounties.$pilots" object="$Pilot" />
								<remove_value name="$Pilot.$kEM_lastKnownLocation" />
								<remove_value name="$Pilot.$kEM_kills" />
								<remove_value name="$Pilot.$kEM_timeLastUpdate" />
								<signal_objects object="$Pilot" param="'kEM_Bounties_DeregisterPilot'" />
								<debug_text text="$Pilot + ' (' + $Pilot.knownname + ', ' + @$Pilot.ship.idcode + ', ' + @$Pilot.ship.owner + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
							</actions>
						</library>
						<library name="Bounties_UpdateLastKnown" purpose="run_actions">
							<params>
								<param name="Pilot" />
								<param name="Faction" />
								<param name="IsFromSatellite" default="false" />
							</params>
							<actions>
								<do_if value="@$Pilot.isoperational and @$Pilot.ship.isoperational and @$Pilot.ship.sector.exists and $Faction">
									<set_value name="$isNewRecord" exact="not @$Pilot.$kEM_lastKnownLocation.{$Faction}.count" />
									<set_value name="$time_elapsed" exact="0" />
									<set_value name="$isNewPosition" exact="false" />
									<set_value name="$distFromOld" exact="0" />
									<find_station name="$station" owner="$Faction" sortbydistanceto="$Pilot.ship" space="player.galaxy" />
									<do_if value="not $station">
										<find_station name="$station" sortbydistanceto="$Pilot.ship" space="player.galaxy">
											<match_relation_to faction="$Pilot.ship.owner" comparison="ge" relation="neutral" />
										</find_station>
									</do_if>
									<create_position name="$pos_current" space="$Pilot.ship.sector" object="$Pilot.ship" />
									<do_if value="not $isNewRecord">
										<set_value name="$time_elapsed" exact="player.age - @$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time" />
										<create_position name="$pos_old" space="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$sector" value="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$position" />
										<set_value name="$distFromOld" exact="$pos_current.distanceto.{$pos_old}" />
										<!-- <do_if value="$Pilot.ship.sector == @$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$sector"> -->
											<set_value name="$isNewPosition" exact="$distFromOld gt 50km" />
										<!-- </do_if>
										<do_else>
											<set_value name="$isNewPosition" exact="true" />
										</do_else> -->
									</do_if>
									<do_if value="$isNewRecord or $isNewPosition">
										<do_if value="not @$Pilot.$kEM_lastKnownLocation.{$Faction}">
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}" exact="[]" />
										</do_if>
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}" operation="insert" exact="table[
											$sector = $Pilot.ship.sector,
											$position = $pos_current,
											$station = $station,
											$time = player.age,
											$distFromOld = $distFromOld,
											$time_elapsed = $time_elapsed,
											$isFromSatellite = $IsFromSatellite,
											$otherPosInArea = []
										]" />
										<do_if value="$Pilot.$kEM_lastKnownLocation.{$Faction}.count gt 10">
											<resize_list list="$Pilot.$kEM_lastKnownLocation.{$Faction}" count="10"/>
										</do_if>
										<signal_objects object="$Pilot" param="'kEM_Bounties_UpdateLastKnown'" param2="table[$faction = $Faction]" />
										<debug_text text="$Pilot + ' (' + $Pilot.knownname + ', ' + @$Pilot.ship.idcode + ', ' + @$Pilot.ship.owner + ') $kEM_lastKnownLocation.{' + $Faction + '}.{1}: ' + $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
										<set_value name="$Pilot.$kEM_timeLastUpdate" exact="player.age" />
									</do_if>
									<do_elseif value="$distFromOld gt 10km">
										<!-- move current pos to otherPosInArea list -->
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}" operation="insert" exact="table[
											$sector = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$sector,
											$position = $pos_old,
											$station = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$station,
											$time = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time,
											$distFromOld = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$distFromOld,
											$time_elapsed = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time_elapsed,
											$isFromSatellite = $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$isFromSatellite
										]" />
										<do_if value="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.count gt 3">
											<resize_list list="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea" count="3"/>
										</do_if>
										<!-- update current pos with new pos -->
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$sector" exact="$Pilot.ship.sector" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$position" exact="$pos_current" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$station" exact="$station" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time" exact="player.age" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$distFromOld" exact="$distFromOld" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time_elapsed" exact="$time_elapsed" />
										<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$isFromSatellite" exact="$IsFromSatellite" />
										<debug_text text="$Pilot + ' (' + $Pilot.knownname + ', ' + @$Pilot.ship.idcode + ', ' + @$Pilot.ship.owner + ') $kEM_lastKnownLocation.{' + $Faction + '}.{1}: ' + $Pilot.$kEM_lastKnownLocation.{$Faction}.{1}" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
										<set_value name="$Pilot.$kEM_timeLastUpdate" exact="player.age" />
									</do_elseif>
									<!-- <do_elseif value="$distFromOld gt 5km">
										<do_if value="@$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}">
											<create_position name="$pos_old" space="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$sector" value="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$position" />
											<set_value name="$distFromOld" exact="$pos_current.distanceto.{$pos_old}" />
											<set_value name="$time_elapsed" exact="player.age - @$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$time" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$sector" exact="$Pilot.ship.sector" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$position" exact="$pos_current" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$station" exact="$station" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$time" exact="player.age" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$distFromOld" exact="$distFromOld" />
											<set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$otherPosInArea.{1}.$time_elapsed" exact="$time_elapsed" />
											<set_value name="$Pilot.$kEM_timeLastUpdate" exact="player.age" />
										</do_if>
									</do_elseif> -->
								</do_if>
							</actions>
						</library>
						<library name="Bounties_RegisterKill" purpose="run_actions">
							<params>
								<param name="Pilot" />
								<param name="VictimClass" />
								<param name="VictimFaction" />
								<param name="IsSubordinateKill" default="false" />
							</params>
							<actions>
								<do_if value="not @$Pilot.$kEM_kills">
									<set_value name="$Pilot.$kEM_kills" exact="table[]" />
								</do_if>
								<do_if value="not @$Pilot.$kEM_kills.{$VictimFaction}">
									<set_value name="$Pilot.$kEM_kills.{$VictimFaction}" exact="table[
										{class.ship_xs} = 0,
										{class.ship_s} = 0,
										{class.ship_m} = 0,
										{class.ship_l} = 0,
										{class.ship_xl} = 0,
										{class.station} = 0
									]" />
								</do_if>
								<do_if value="$IsSubordinateKill">
									<set_value name="$Pilot.$kEM_kills.{$VictimFaction}.{$VictimClass}" exact="0.25" operation="add" />
								</do_if>
								<do_else>
									<set_value name="$Pilot.$kEM_kills.{$VictimFaction}.{$VictimClass}" exact="1" operation="add" />
								</do_else>
								<set_value name="$Pilot.$kEM_timeLastUpdate" exact="player.age" />
								<signal_objects object="$Pilot" param="'kEM_Bounties_RegisterKill'" param2="table[$faction = $VictimFaction]" />
								<debug_text text="$Pilot + ' (' + $Pilot.knownname + ', ' + @$Pilot.ship.idcode + ', ' + @$PilotFaction + ') $kEM_kills.{' + $VictimFaction + '}.{' + $VictimClass + '}: ' + $Pilot.$kEM_kills.{$VictimFaction}.{$VictimClass}" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
							</actions>
						</library>
						<cue name="Bounties_NewAttack" instantiate="true">
							<conditions>
								<check_any>
									<event_object_signalled object="player.galaxy" param="'K_ObjectAttacks_AttackerInit'" />
									<event_object_signalled object="player.galaxy" param="'K_ObjectAttacks_AttackerNewVictim'" />
								</check_any>
								<check_value value="@event.param2.$attacker.isclass.ship" />
								<check_value value="@event.param2.$attacker.pilot.isclass.entity" />
								<check_value value="not @event.param2.$attacker.islasertower" />
								<check_value value="not @event.param2.$attacker.isunit" />
								<check_value value="not md.kuertee_emergent_missions.ModFeatures.$factions_noBountyMissions.indexof.{event.param2.$victim.trueowner}" />
							</conditions>
							<actions>
								<set_value name="$attacker" exact="@event.param2.$attacker" />
								<set_value name="$victim" exact="@event.param2.$victim" />
								<debug_text text="'$attacker.pilot: ' + $attacker.pilot + ' (' + @$attacker.pilot.knownname + ', ' + @$attacker.idcode + ', ' + @$attacker.owner + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<debug_text text="'$victim.pilot: ' + $victim.pilot + ' (' + @$victim.pilot.knownname + ', ' + @$victim.idcode + ', ' + @$victim.owner + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<do_if value="$attacker.isclass.[class.ship_xs, class.ship_s, class.ship_m] and @$attacker.commander.isoperational and @$attacker.commander.isclass.ship">
									<set_value name="$attacker" exact="$attacker.commander" />
									<set_value name="$isSubordinateKill" exact="true" />
								</do_if>
								<do_if value="@$pilots.indexof.{@$attacker.pilot}">
									<run_actions ref="Bounties_UpdateLastKnown">
										<param name="Pilot" value="$attacker.pilot" />
										<param name="Faction" value="$victim.owner" />
									</run_actions>
								</do_if>
								<do_if value="@$pilots.indexof.{@$victim.pilot}">
									<run_actions ref="Bounties_UpdateLastKnown">
										<param name="Pilot" value="$victim.pilot" />
										<param name="Faction" value="$attacker.owner" />
									</run_actions>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="Bounties_TargetDestroyed" instantiate="true">
							<conditions>
								<event_object_signalled object="player.galaxy" param="'K_ObjectAttacks_AttackerKilledObject'" />
								<check_value value="@event.param2.$attacker.isclass.ship" />
								<check_value value="@event.param2.$attacker.pilot.isclass.entity" />
								<check_value value="not @event.param2.$attacker.islasertower" />
								<check_value value="not @event.param2.$attacker.isunit" />
								<check_value value="not md.kuertee_emergent_missions.ModFeatures.$factions_noBountyMissions.indexof.{event.param2.$victimFaction}" />
							</conditions>
							<actions>
								<set_value name="$attacker" exact="event.param2.$attacker" />
								<set_value name="$victimClass" exact="event.param2.$victimClass" />
								<set_value name="$victimFaction" exact="event.param2.$victimFaction" />
								<debug_text text="'$attacker.pilot: ' + $attacker.pilot + ' (' + @$attacker.pilot.knownname + ', ' + @$attacker.idcode + ', ' + @$attacker.owner + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<debug_text text="'$victimClass: ' + $victimClass + ', $victimFaction: ' + $victimFaction" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<set_value name="$isSubordinateKill" exact="false" />
								<do_if value="$attacker.isclass.[class.ship_xs, class.ship_s, class.ship_m] and @$attacker.commander.isoperational">
									<do_if value="$attacker.toplevelcommander.isclass.ship">
										<set_value name="$attacker" exact="$attacker.toplevelcommander" />
										<set_value name="$isSubordinateKill" exact="true" />
									</do_if>
									<do_else>
										<do_while value="@$attacker.commander.isoperational and $attacker.commander.isclass.ship and $attacker.commander != $attacker">
											<set_value name="$attacker" exact="$attacker.commander" />
											<set_value name="$isSubordinateKill" exact="true" />
										</do_while>
									</do_else>
								</do_if>
								<run_actions ref="Bounties_RegisterPilot">
									<param name="Pilot" value="$attacker.pilot" />
								</run_actions>
								<run_actions ref="Bounties_RegisterKill">
									<param name="Pilot" value="$attacker.pilot" />
									<param name="VictimClass" value="$victimClass" />
									<param name="VictimFaction" value="$victimFaction" />
									<param name="IsSubordinateKill" value="$isSubordinateKill" />
								</run_actions>
								<run_actions ref="Bounties_UpdateLastKnown">
									<param name="Pilot" value="$attacker.pilot" />
									<param name="Faction" value="$victimFaction" />
								</run_actions>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="Bounties_ChangeSector" instantiate="true">
							<conditions>
								<event_object_signalled object="player.galaxy" param="'kEM_ObjectChangeSector'" />
								<check_value value="@event.param2.$attacker.isclass.ship" />
								<check_value value="@event.param2.$attacker.pilot.isclass.entity" />
								<check_value value="not @event.param2.$attacker.islasertower" />
								<check_value value="not @event.param2.$attacker.isunit" />
								<check_value value="@$pilots.indexof.{event.param2.$attacker.pilot}" />
							</conditions>
							<actions>
								<set_value name="$attacker" exact="event.param2.$attacker" />
								<set_value name="$sector_new" exact="event.param2.$sector_new" />
								<set_value name="$sector_old" exact="event.param2.$sector_old" />
								<debug_text text="$attacker.pilot + ' (' + $attacker.pilot.knownname + ', ' + @$attacker.idcode + ', ' + @$attacker.owner + ') ' + @$sector_new.knownname + ', ' + @$sector_old.knownname" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<do_if value="$sector_new or $sector_old">
									<run_actions ref="Bounties_ChangeSector_FindFactionWitnesses" result="$faction_witnesses">
										<param name="Ship" value="$attacker" />
										<param name="FromFactions" value="$attacker.pilot.$kEM_kills.keys.list.clone" />
										<param name="NewSector" value="$sector_new" />
										<param name="OldSector" value="$sector_old" />
									</run_actions>
									<do_for_each name="$faction_inList" in="$faction_witnesses">
										<run_actions ref="Bounties_UpdateLastKnown">
											<param name="Pilot" value="$attacker.pilot" />
											<param name="Faction" value="$faction_inList" />
											<param name="IsFromSatellite" value="true" />
										</run_actions>
									</do_for_each>
								</do_if>
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<library name="Bounties_ChangeSector_FindFactionWitnesses" purpose="run_actions">
							<params>
								<param name="Ship" />
								<param name="FromFactions" />
								<param name="NewSector" />
								<param name="OldSector" />
							</params>
							<actions>
								<set_value name="$faction_witnesses" exact="[]" />
								<set_value name="$class_listeners" exact="[class.satellite, class.station]" />
								<!-- find satellites and stations that detect the sector change -->
								<do_if value="$NewSector">
									<do_for_each name="$class_inList" in="$class_listeners">
										<run_actions ref="Bounties_ChangeSector_FindFactionWitnesses2" result="$faction_witnesses2">
											<param name="FromObject" value="$Ship" />
											<param name="FromFactions" value="$FromFactions" />
											<param name="Class" value="$class_inList" />
											<param name="Sector" value="$NewSector" />
										</run_actions>
										<do_for_each name="$factions_inList" in="$faction_witnesses2">
											<do_if value="not $faction_witnesses.indexof.{$factions_inList}">
												<append_to_list name="$faction_witnesses" exact="$factions_inList" />
											</do_if>
											<remove_from_list name="$FromFactions" exact="$factions_inList" />
											<!-- if all factions in list detected the change, break out of loop -->
											<do_if value="not $FromFactions.count">
												<break />
											</do_if>
										</do_for_each>
										<do_if value="not $FromFactions.count">
											<break />
										</do_if>
									</do_for_each>
									<debug_text text="$Ship.pilot + ' (' + $Ship.pilot.knownname + ', ' + @$Ship.idcode + ', ' + @$Ship.owner + ') $faction_witnesses2: ' + @$faction_witnesses2" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								</do_if>
								<!-- if there are factions in list that have not detected the sector change, find listeners in old sector -->
								<do_if value="$FromFactions.count and $OldSector">
									<!-- find gate used to exit from previous sector -->
									<find_object name="$gate_exit" class="[class.gate, class.highwayentrygate]" space="$OldSector" sortbydistanceto="$Ship" />
									<do_if value="$gate_exit">
										<!-- <get_safe_pos result="this.$DefendAreaDefinition.$Position" sector="$Target" radius="500m" object="this.$EntryPoint.exit" z="10km" allowyaxis="false"/> -->
										<do_for_each name="$class_inList" in="$class_listeners">
											<run_actions ref="Bounties_ChangeSector_FindFactionWitnesses2" result="$faction_witnesses2">
												<param name="FromObject" value="$gate_exit" />
												<param name="FromFactions" value="$FromFactions" />
												<param name="Class" value="$class_inList" />
												<param name="Sector" value="$OldSector" />
											</run_actions>
											<do_for_each name="$factions_inList" in="$faction_witnesses2">
												<do_if value="not $faction_witnesses.indexof.{$factions_inList}">
													<append_to_list name="$faction_witnesses" exact="$factions_inList" />
												</do_if>
												<remove_from_list name="$FromFactions" exact="$factions_inList" />
												<do_if value="not $FromFactions.count">
													<break />
												</do_if>
											</do_for_each>
											<do_if value="not $FromFactions.count">
												<break />
											</do_if>
										</do_for_each>
										<debug_text text="$Ship.pilot + ' (' + $Ship.pilot.knownname + ', ' + @$Ship.idcode + ', ' + @$Ship.owner + ') $faction_witnesses2 (from old sector): ' + @$faction_witnesses2" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
									</do_if>
								</do_if>
								<return value="$faction_witnesses" />
							</actions>
						</library>
						<library name="Bounties_ChangeSector_FindFactionWitnesses2" purpose="run_actions">
							<params>
								<param name="FromObject" />
								<param name="FromFactions" />
								<param name="Class" />
								<param name="Sector" />
							</params>
							<actions>
								<set_value name="$faction_witnesses" exact="[]" />
								<set_value name="$listeners" exact="[]" />
								<find_object name="$listeners" class="$Class" space="$Sector" owner="$FromFactions" multiple="true" sortbydistanceto="$FromObject">
									<match_distance object="$FromObject" max="100km"/>
								</find_object>
								<do_if value="$FromObject.isclass.[class.gate, class.highwayentrygate]">
									<get_safe_pos result="$pos_atGate" sector="$Sector" radius="40km" object="$FromObject" />
								</do_if>
								<do_for_each name="$listener" in="$listeners">
									<do_if value="$FromObject.isclass.[class.gate, class.highwayentrygate]">
										<set_value name="$dist" exact="$listener.distanceto.{$pos_atGate}" />
									</do_if>
									<do_else>
										<set_value name="$dist" exact="$listener.distanceto.{$FromObject}" />
									</do_else>
									<do_if value="$dist le $listener.maxradarrange">
										<append_to_list name="$faction_witnesses" exact="$listener.owner" />
										<remove_from_list name="$FromFactions" exact="$listener.owner" />
										<debug_text text="$FromObject + ' (' + $FromObject.knownname + ', ' + @$FromObject.idcode + ', ' + @$FromObject.owner + ') $listener: ' + @$listener + ' (' + $listener.owner + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
									</do_if>
									<do_if value="not $FromFactions.count">
										<break />
									</do_if>
								</do_for_each>
								<return value="$faction_witnesses" />
							</actions>
						</library>
						<cue name="Bounties_CleanInterval" checktime="player.age + 4h" checkinterval="30min" instantiate="true">
							<!-- <set_value name="$Pilot.$kEM_lastKnownLocation.{$Faction}.{1}.$time" exact="player.age" /> -->
							<actions>
								<debug_text text="''" chance="@md.$kuertee_interval" />
								<signal_cue cue="Bounties_CleanIntervalNow" />
								<cancel_cue cue="this" />
							</actions>
						</cue>
						<cue name="Bounties_CleanIntervalNow">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
										<check_value value="event.param3.$text == 'debug hunt clean old beacons'" />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<do_if value="event.name == 'event_ui_triggered'">
									<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="100" />
								</do_if>
								<debug_text text="this" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<set_value name="$removes" exact="[]" />
								<do_for_each name="$pilot_inList" in="$pilots">
									<do_if value="$pilot_inList.isplayerowned">
										<set_value name="$time_limit" exact="1h" />
									</do_if>
									<do_else>
										<set_value name="$time_limit" exact="4h" />
									</do_else>
									<do_if value="@$pilot_inList.$kEMissions_mission.$kEMissionType != md.kuertee_emergent_missions.kEMissions.$missionType_hunt">
										<set_value name="$timeLastUpdate" exact="player.age - $pilot_inList.$kEM_timeLastUpdate" />
										<!-- <debug_text text="$pilot_inList + ' $timeLastUpdate: ' + $timeLastUpdate" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" /> -->
										<do_if value="$timeLastUpdate gt $time_limit">
											<append_to_list name="$removes" exact="$pilot_inList" />
										</do_if>
										<do_elseif value="$pilot_inList.$kEM_lastKnownLocation.keys.count">
											<do_for_each name="$faction_inList" in="$pilot_inList.$kEM_lastKnownLocation.keys.list" reverse="true">
												<set_value name="$timeLastUpdate" exact="player.age - $pilot_inList.$kEM_lastKnownLocation.{$faction_inList}.{1}.$time" />
												<!-- <debug_text text="'    ' + $pilot_inList + ' $timeLastUpdate: ' + $timeLastUpdate" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" /> -->
												<do_if value="player.age - $pilot_inList.$kEM_lastKnownLocation.{$faction_inList}.{1}.$time gt $time_limit">
													<remove_value name="$pilot_inList.$kEM_lastKnownLocation.{$faction_inList}" />
												</do_if>
											</do_for_each>
											<do_if value="not $pilot_inList.$kEM_lastKnownLocation.keys.count">
												<append_to_list name="$removes" exact="$pilot_inList" />
											</do_if>
										</do_elseif>
									</do_if>
								</do_for_each>
								<do_for_each name="$pilot_inList" in="$removes">
									<!-- <debug_text text="$pilot_inList + ' deregistering'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" /> -->
									<run_actions ref="Bounties_DeregisterPilot">
										<param name="Pilot" value="$pilot_inList" />
									</run_actions>
								</do_for_each>
								<remove_value name="$removes" />
								<do_if value="event.name == 'event_ui_triggered'">
									<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="0" />
								</do_if>
								<reset_cue cue="this" />
							</actions>
						</cue>
						<cue name="Bounties_CleanIntervalNow_FirstRun">
							<actions>
								<debug_text text="this" />
								<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="100" />
								<signal_cue_instantly cue="Bounties_CleanIntervalNow" />
								<set_value name="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" exact="0" />
							</actions>
						</cue>
						<cue name="Bounties_ArriveStation" version="2">
							<conditions>
								<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
								<check_any>
									<check_value value="@event.param2.$arriveAt.exists" />
									<check_value value="@event.param2.$teleportTo.exists" />
								</check_any>
							</conditions>
							<actions>
								<set_value name="$station" exact="@event.param2.$arriveAt" />
								<do_if value="not $station.exists">
									<set_value name="$station" exact="event.param2.$teleportTo" />
								</do_if>
								<debug_text text="'$station: ' + $station + ' (' + $station.knownname + ', ' + $station.owner + ', isdefencestation: ' + $station.isdefencestation + ', ispiratebase: ' + $station.ispiratebase + ') event.name: ' + event.name" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
								<set_value name="$isMissionsFromConvo" exact="@md.kuertee_emergent_missions.kEMissions.$IsSWIExists" />
							</actions>
							<cues>
								<cue name="Bounties_OpenMissionOffersUI_kProfs">
									<conditions>
										<event_cue_signalled />
										<!-- <event_ui_triggered screen="'MapMenu'" control="'missionoffer'" />
										<check_value value="@md.kuertee_professions.kProfs.exists" /> -->
										<check_value value="not $isMissionsFromConvo" />
									</conditions>
									<!-- <delay exact="1ms" comment="allows kprof to run first" /> -->
									<actions>
										<set_value name="$isMissionNearby" exact="false" />
										<set_value name="$isDebug" exact="[@md.kuertee_emergent_missions.UserSettings.$debugChance_bounties, @md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt, @md.kuertee_emergent_missions.UserSettings.$debugChance].max" />
										<do_for_each name="$pilot" in="$pilots">
											<set_value name="$hasBountyAtStation" exact="false" />
											<set_value name="$hasKills" exact="@$pilot.$kEM_kills.{$station.owner}" />
											<set_value name="$isKnownByFaction" exact="@$pilot.$kEM_lastKnownLocation.{$station.owner}"/>
											<do_if value="$isKnownByFaction">
												<do_for_each name="$lastKnownData_inList" in="@$pilot.$kEM_lastKnownLocation.{$station.owner}">
													<set_value name="$time_sinceLastReport" exact="player.age - $lastKnownData_inList.$time" />
													<do_if value="$time_sinceLastReport lt 3h">
														<do_if value="
															$lastKnownData_inList.$station == $station or
															(
																(
																	$station.isdefencestation or
																	$station.ispiratebase
																) and
																@$lastKnownData_inList.$station.sector == $station.sector
															) or
															$station.isheadquarters or
															$station.isfactionheadquarters or
															$isDebug
														">
															<set_value name="$hasBountyAtStation" exact="true" />
															<break />
														</do_if>
													</do_if>
												</do_for_each>
											</do_if>
											<do_if value="$hasKills and $hasBountyAtStation">
												<set_value name="$isMissionNearby" exact="true" />
												<break />
											</do_if>
										</do_for_each>
										<debug_text text="'$isMissionNearby: ' + $isMissionNearby" chance="UserSettings.$debugChance_bounties" />
										<do_if value="$isMissionNearby">
											<signal_cue_instantly cue="md.kuertee_professions_guilds.GuildNetwork_SetAvailability_EM" param="table[$isAvailable = $isMissionNearby]" />
										</do_if>
										<remove_value name="$isMissionNearby" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_OpenMissionOffersUI">
									<conditions>
										<check_any>
											<check_all>
												<check_any>
													<event_cue_signalled />
													<event_ui_triggered screen="'MapMenu'" control="'missionoffer'" />
												</check_any>
												<check_any>
													<check_value value="not @md.kuertee_professions.kProfs.exists" />
													<check_value value="UserSettings.$debugChance_bounties" />
												</check_any>
											</check_all>
											<check_all>
												<event_ui_triggered screen="'kProfs_ui_trigger'" control="'login_to_the_guild_network'" />
												<check_value value="@md.kuertee_professions.kProfs.exists" />
											</check_all>
										</check_any>
										<check_value value="not $isMissionsFromConvo" />
									</conditions>
									<actions>
										<clear_group group="$pilots_inRange" />
										<set_value name="$isDebug" exact="[@md.kuertee_emergent_missions.UserSettings.$debugChance_bounties, @md.kuertee_emergent_missions.UserSettings.$debugChance_missionHunt, @md.kuertee_emergent_missions.UserSettings.$debugChance].max" />
										<do_for_each name="$pilot" in="$pilots">
											<set_value name="$hasKills" exact="false" />
											<set_value name="$hasBountyAtStation" exact="false" />
											<set_value name="$hasKills" exact="@$pilot.$kEM_kills.{$station.owner}" />
											<set_value name="$hasBountyAtStation" exact="false" />
											<set_value name="$isKnownByFaction" exact="@$pilot.$kEM_lastKnownLocation.{$station.owner}" />
											<do_if value="$isKnownByFaction">
												<do_for_each name="$lastKnownData_inList" in="@$pilot.$kEM_lastKnownLocation.{$station.owner}">
													<set_value name="$time_sinceLastReport" exact="player.age - $lastKnownData_inList.$time" />
													<do_if value="$time_sinceLastReport lt 3h">
														<do_if value="
															$lastKnownData_inList.$station == $station or
															(
																(
																	$station.isdefencestation or
																	$station.ispiratebase
																) and
																@$lastKnownData_inList.$station.sector == $station.sector
															) or
															$station.isheadquarters or
															$station.isfactionheadquarters or
															$isDebug
														">
															<set_value name="$hasBountyAtStation" exact="true" />
															<break />
														</do_if>
													</do_if>
												</do_for_each>
											</do_if>
											<do_if value="$hasKills and $hasBountyAtStation">
												<add_to_group groupname="$pilots_inRange" object="$pilot" />
											</do_if>
										</do_for_each>
										<debug_text text="'$pilots_inRange.count: ' + $pilots_inRange.count" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
										<set_value name="$i_adj" exact="0" />
										<do_if value="@md.kuertee_professions_guilds.GuildNetwork_Load.state == cuestate.waiting">
											<signal_cue cue="md.kuertee_professions_guilds.GuildNetwork_Load" />
										</do_if>
									</actions>
									<cues>
										<cue name="Bounties_OpenMissionOffersUI_5OffersAtATime">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<delay exact="1ms" />
											<actions>
												<do_if value="$pilots_inRange.count">
													<do_all counter="$i" exact="$pilots_inRange.count">
														<set_value name="$pilot_inRange" exact="$pilots_inRange.{$i + $i_adj}" />
														<set_value name="$station_sighted" exact="$pilot_inRange.$kEM_lastKnownLocation.{$station.owner}.{1}.$station" />
														<signal_cue_instantly cue="Missions_Hunts_CreateOffer" param="table[$station = $station_sighted, $target = $pilot_inRange.ship]" />
														<do_if value="$i ge 5 or $i + $i_adj ge $pilots_inRange.count">
															<set_value name="$i_adj" exact="$i + $i_adj" />
															<break />
														</do_if>
													</do_all>
												</do_if>
												<debug_text text="'$i_adj: ' + $i_adj + ' $pilots_inRange.count: ' + $pilots_inRange.count" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
												<do_if value="$i_adj lt $pilots_inRange.count">
													<debug_text text="'$Bounties_OpenMissionOffersUI_5OffersAtATime_Again.state: ' + Bounties_OpenMissionOffersUI_5OffersAtATime_Again.state" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
													<do_if value="Bounties_OpenMissionOffersUI_5OffersAtATime_Again.state == cuestate.waiting">
														<signal_cue cue="Bounties_OpenMissionOffersUI_5OffersAtATime_Again" />
													</do_if>
													<do_if value="@md.kuertee_professions_guilds.GuildNetwork_Load.state == cuestate.waiting">
														<signal_cue cue="md.kuertee_professions_guilds.GuildNetwork_Load" />
													</do_if>
												</do_if>
												<do_else>
													<reset_cue cue="parent" />
													<do_if value="@md.kuertee_professions_guilds.GuildNetwork_OnLoad.state == cuestate.waiting">
														<signal_cue cue="md.kuertee_professions_guilds.GuildNetwork_OnLoad" />
													</do_if>
												</do_else>
												<reset_cue cue="this" />
											</actions>
										</cue>
										<cue name="Bounties_OpenMissionOffersUI_5OffersAtATime_Again">
											<conditions>
												<event_cue_signalled />
											</conditions>
											<cues>
												<cue name="Bounties_OpenMissionOffersUI_5OffersAtATime_Again2">
													<actions>
														<signal_cue cue="Bounties_OpenMissionOffersUI_5OffersAtATime" />
														<reset_cue cue="parent" />
														<cancel_cue cue="this" />
													</actions>
												</cue>
											</cues>
										</cue>
										<cue name="Bounties_OpenMissionOffersUI_RunOnce">
											<actions>
												<signal_cue cue="Bounties_OpenMissionOffersUI_5OffersAtATime" />
												<cancel_cue cue="this" />
											</actions>
										</cue>
									</cues>
								</cue>
								<cue name="Bounties_ArriveStation2">
									<conditions>
										<event_object_signalled object="player.entity" param="'K_ArriveAndLeaveStations'" />
										<check_value value="@event.param2.$leaveFrom.exists" />
									</conditions>
									<actions>
										<debug_text text="'$station: ' + $station + ' (' + $station.knownname + ', ' + $station.owner + ') event.name: ' + event.name" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_bounties" />
										<signal_cue cue="Bounties_CleanMissionsForConvo" />
										<reset_cue cue="parent" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_ArriveStation_RunOnce">
									<actions>
										<debug_text text="'$isMissionsFromConvo: ' + $isMissionsFromConvo" chance="UserSettings.$debugChance_bounties" />
										<do_if value="
											(not $isMissionsFromConvo) and
											@md.ExternalApp.EA_Main.exists and 
											(not @md.kuertee_professions.kProfs.exists)
										">
											<!-- with RAP, em sad mission offers are generated from the guild network -->
											<signal_cue cue="Bounties_OpenMissionOffersUI" />
										</do_if>
										<do_elseif value="$isMissionsFromConvo">
											<signal_cue cue="Bounties_PrepareMissionsForConvo" />
										</do_elseif>
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_PrepareMissionsForConvo">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<set_value name="$bountiesByFaction" exact="table[]" />
										<!-- <do_if value="@$station.isoperational">
											<do_if value="kEMissions.$validFactions.indexof.{$station.owner} and $station.owner.relationto.{faction.player} ge $station.owner.relation.neutral.min">
												<set_value name="$target" exact="event.param.$target" />
												<set_value name="$faction" exact="$station.owner" />
												<debug_text text="'$kEMissions_missions: ' + @$target.pilot.$kEMissions_missions.{$faction} + ' isplayerowned: ' + $target.isplayerowned" chance="UserSettings.$debugChance_bounties" />
												<do_if value="@$target.pilot.isoperational and (not @$target.pilot.$kEMissions_missions.{$faction}) and (not $target.isplayerowned)"> -->
										<do_for_each name="$pilot" in="$pilots">
											<do_if value="
												@$pilot.isoperational and
												(not $pilot.isplayerowned)
											">
												<do_for_each name="$faction_inList" in="@$pilot.$kEM_lastKnownLocation.keys.list">
													<do_if value="
														kEMissions.$validFactions.indexof.{$faction_inList} and
														(not md.kuertee_emergent_missions.ModFeatures.$factions_noBountyMissions.indexof.{$faction_inList}) and
														$faction_inList.relationto.{faction.player} ge $faction_inList.relation.neutral.min and
														(not @$pilot.$kEMissions_missions.{$faction_inList}) and
														$pilot.$kEM_lastKnownLocation.{$faction_inList}.{1}.$station.isoperational
													">
														<do_if value="@$pilot.$kEM_kills.{$faction_inList}.keys.count">
															<do_if value="not @$bountiesByFaction.{$faction_inList}">
																<set_value name="$bountiesByFaction.{$faction_inList}" exact="table[]" />
															</do_if>
															<set_value name="$class" exact="null" />
															<do_if value="$pilot.assignedcontrolled.isclass.[class.ship_s, class.ship_m]">
																<set_value name="$class" exact="class.ship_s" />
															</do_if>
															<do_elseif value="$pilot.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
																<set_value name="$class" exact="class.ship_l" />
															</do_elseif>
															<do_if value="not @$bountiesByFaction.{$faction_inList}.{$class}">
																<set_value name="$bountiesByFaction.{$faction_inList}.{$class}" exact="[]" />
															</do_if>
															<append_to_list name="$bountiesByFaction.{$faction_inList}.{$class}" exact="$pilot" />
														</do_if>
													</do_if>
												</do_for_each>
											</do_if>
										</do_for_each>
										<debug_text text="'$bountiesByFaction: ' + $bountiesByFaction" chance="UserSettings.$debugChance_bounties" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_CleanMissionsForConvo">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<remove_value name="$bountiesByFaction" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<!-- <t id="601">Missions?</t>
								<t id="602">%1(faction): %2(number) missions.</t>
								<t id="603">Small and medium-sized targets: %2(number) missions.</t>
								<t id="604">Large and extra-large-sized targets: %2(number) missions.</t> -->
								<cue name="Bounties_Convo">
									<conditions>
										<event_conversation_started conversation="default" />
										<check_any>
											<check_value value="event.object.owner == @faction.bountyhunters.representative" />
											<check_value value="event.object == @$station.tradenpc" />
										</check_any>
										<check_any>
											<check_value value="@player.station.owner == @faction.bountyhunters" />
											<check_value value="UserSettings.$debugChance_bounties" />
										</check_any>
										<check_value value="$isMissionsFromConvo" />
									</conditions>
									<actions>
										<debug_text text="'event.name: ' + event.name" chance="UserSettings.$debugChance_bounties" />
										<set_value name="$npc_convo" exact="event.object" />
										<debug_text text="'$npc_convo: ' + $npc_convo.knownname" chance="UserSettings.$debugChance_bounties" />
										<do_for_each name="$faction_inList" in="$bountiesByFaction.keys.list">
											<debug_text text="'$faction_inList: ' + $faction_inList" chance="UserSettings.$debugChance_bounties" />
											<set_value name="$count_missions" exact="0" />
											<set_value name="$missionsByClass" exact="$bountiesByFaction.{$faction_inList}" />
											<do_if value="$missionsByClass.keys.count">
												<do_for_each name="$class_inList" in="$missionsByClass.keys.list">
													<do_if value="$missionsByClass.{$class_inList}.count">
														<set_value name="$count_missions" operation="add" exact="$missionsByClass.{$class_inList}.count" />
													</do_if>
												</do_for_each>
											</do_if>
											<do_if value="$count_missions">
												<do_if value="@md.ExtendedConversationMenu.Main.exists">
													<set_value name="md.ExtendedConversationMenu.Main.$convOptions.{'$kEM_bounties_convo_' + $faction_inList.shortname}" exact="table[
														$signalCue = Bounties_Convo_AddFactionTopic,
														$params = table[
															$npc_convo = $npc_convo,
															$faction = $faction_inList,
															$count_missions = $count_missions,
															$missionsByClass = $missionsByClass
														]
													]" />
												</do_if>
												<do_else>
													<add_player_choice text="{11513, 602}.[$faction_inList.name, $count_missions]" section="kEM_bounties_byFaction" choiceparam="table[$faction = $faction_inList, $missionsByClass = $missionsByClass]" />
												</do_else>
											</do_if>
										</do_for_each>
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_Convo_AddFactionTopic" instantiate="true">
									<conditions>
										<event_cue_signalled />
									</conditions>
									<actions>
										<add_player_choice text="{11513, 602}.[event.param.$faction, event.param.$count_missions]" section="kEM_bounties_byFaction" choiceparam="table[$faction = event.param.$faction, $missionsByClass = event.param.$missionsByClass]" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="Bounties_Convo_Next">
									<conditions>
										<event_conversation_next_section sectionprefix="kEM_bounties_" /> 
									</conditions>
									<actions>
										<do_if value="event.param == 'kEM_bounties_byFaction'">
											<set_value name="$faction" exact="event.param2.$faction" />
											<set_value name="$missionsByClass" exact="event.param2.$missionsByClass" />
											<do_if value="@$missionsByClass.{class.ship_s}">
												<add_player_choice text="{11513, 603}.[$missionsByClass.{class.ship_s}.count]" section="kEM_bounties_byClass" choiceparam="table[$faction = $faction, $missions = $missionsByClass.{class.ship_s}]" />
											</do_if>
											<do_if value="@$missionsByClass.{class.ship_l}">
												<add_player_choice text="{11513, 604}.[$missionsByClass.{class.ship_l}.count]" section="kEM_bounties_byClass" choiceparam="table[$faction = $faction, $missions = $missionsByClass.{class.ship_l}]" />
											</do_if>
										</do_if>
										<do_elseif value="event.param == 'kEM_bounties_byClass'">
											<signal_objects object="player.entity" param="'Bounties_Convo_Next_remove_mission_offers'" />
											<set_value name="$faction" exact="event.param2.$faction" />
											<set_value name="$missions" exact="event.param2.$missions" />
											<do_for_each name="$pilot_target" in="$missions">
												<do_if value="@$pilot_target.exists">
													<set_value name="$station_sighted" exact="$pilot_target.$kEM_lastKnownLocation.{$faction}.{1}.$station" />
													<do_if value="@$station_sighted.exists">
														<signal_cue_instantly cue="Missions_Hunts_CreateOffer" param="table[$station = $station_sighted, $target = $pilot_target.ship]" />
													</do_if>
												</do_if>
											</do_for_each>
											<!-- param == { 0, 0, showzone, focuscomponent [, history] [, mode, modeparam] [, showmultiverse] } -->
											<!-- modes: - "infomode",				param: { mode, ... } -->
											<!-- open_menu menu="MapMenu" param="[0, 0, false, null, null, 'infomode', [ 'info', event.param2 ]]" /> -->
											<open_menu menu="MapMenu" param="[0, 0, false, null, null, 'infomode', ['missionoffer']]" />
										</do_elseif>
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<!--
					                             ,,                          ,,
					                             db                        `7MM
					                                                         MM
					 ,6"Yb.  `7Mb,od8 `7Mb,od8 `7MM `7M'   `MF'.gP"Ya        MM  .gP"Ya   ,6"Yb.`7M'   `MF'.gP"Ya
					8)   MM    MM' "'   MM' "'   MM   VA   ,V ,M'   Yb       MM ,M'   Yb 8)   MM  VA   ,V ,M'   Yb
					 ,pm9MM    MM       MM       MM    VA ,V  8M"""""" mmmmm MM 8M""""""  ,pm9MM   VA ,V  8M""""""
					8M   MM    MM       MM       MM     VVV   YM.    ,       MM YM.    , 8M   MM    VVV   YM.    ,
					`Moo9^Yo..JMML.   .JMML.   .JMML.    W     `Mbmmd'     .JMML.`Mbmmd' `Moo9^Yo.   W     `Mbmmd'
					
					
				-->
				<cue name="K_ArriveAndLeaveStations" namespace="this">
					<actions>
						<set_value name="$attentionNearbyAndNearer" exact="[attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="$attentionInZoneAndNearer" exact="[attention.inzone, attention.nearby, attention.adjacentroom, attention.inroom]" />
						<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_old" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_station_current" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="null" />
						<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
					</actions>
					<cues>
						<cue name="K_ArriveStation" instantiate="true">
							<conditions>
								<check_any>
									<event_cue_signalled />
									<check_all>
										<!-- Event for the specified object changing attention level (object = attention changing object, param = new attention level, param2 = previous attention level) -->
										<event_object_changed_attention group="md.NPC_Instantiation.Instantiation.$TrackedObjects" />
										<check_value value="event.object.isclass.station" />
										<check_value value="@event.object.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.object.macro != @macro.torus_maze_macro" />
									</check_all>
									<check_all>
										<!-- Event for when the player successfully teleports. (param = new room, param2 = old room, param3 = is shortcut instead of real teleport) -->
										<event_player_teleport_successful />
									</check_all>
								</check_any>
							</conditions>
							<actions>
								<set_value name="$isOk" exact="false" />
								<set_value name="$isAlreadyActive" exact="false" />
								<set_value name="$isTeleport" exact="false" />
								<do_if value="event.name == 'event_cue_signalled'">
									<set_value name="$station_this" exact="event.param.$station" />
									<set_value name="$isAlreadyActive" exact="event.param.$isAlreadyActive" />
									<set_value name="$isOk" exact="true" />
								</do_if>
								<do_elseif value="event.name == 'event_object_changed_attention'">
									<do_if value="event.object.isclass.station">
										<set_value name="$station_this" exact="event.object" />
										<set_value name="$isOk" exact="
											$attentionNearbyAndNearer.indexof.{event.param}
											and
											(not $attentionNearbyAndNearer.indexof.{event.param2})
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_elseif value="event.name == 'event_player_teleport_successful'">
									<set_value name="$isTeleport" exact="true" />
									<do_if value="player.station">
										<set_value name="$station_this" exact="player.station" />
										<set_value name="$isOk" exact="
											(
												(not @md.Notifications.Init.$kuertee_station_current)
												or
												(not @param.hascontext.{@md.Notifications.Init.$kuertee_station_current})
											)
											and
											$station_this != md.Notifications.Init.$kuertee_station_current
										" />
									</do_if>
								</do_elseif>
								<do_if value="$isOk">
									<do_if value="not $isAlreadyActive">
										<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.exists">
											<do_if value="md.Notifications.Init.$kuertee_Cue_departOldStation.state == cuestate.waiting">
												<signal_cue_instantly cue="md.Notifications.Init.$kuertee_Cue_departOldStation" />
											</do_if>
										</do_if>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
									</do_if>
									<do_else>
										<set_value name="md.Notifications.Init.$kuertee_station_new" exact="$station_this" />
										<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
										<debug_text text="'K_ArriveStation $isAlreadyActive at: ' + @md.Notifications.Init.$kuertee_station_current.knownname" />
									</do_else>
								</do_if>
								<do_else>
									<cancel_cue cue="this" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_DepartStation">
									<conditions>
										<check_any>
											<event_cue_signalled />
											<event_object_changed_attention object="md.Notifications.Init.$kuertee_station_current" />
										</check_any>
									</conditions>
									<actions>
										<set_value name="$isOk" exact="false" />
										<set_value name="$isOk" exact="
											event.name == 'event_cue_signalled'
											or
											(
												(not @$attentionNearbyAndNearer.indexof.{@event.param})
												and
												@$attentionNearbyAndNearer.indexof.{@event.param2}
											)
										" />
										<do_if value="$isOk">
											<set_value name="md.Notifications.Init.$kuertee_station_new" exact="null" />
											<set_value name="md.Notifications.Init.$kuertee_station_old" exact="md.Notifications.Init.$kuertee_station_current" />
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
											<set_value name="md.Notifications.Init.$kuertee_station_current" exact="md.Notifications.Init.$kuertee_station_new" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<debug_text text="'kuertee K_DepartStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
											<cancel_cue cue="parent" />
											<reset_cue cue="this" />
										</do_if>
										<do_else>
											<reset_cue cue="this" />
										</do_else>
									</actions>
								</cue>
								<cue name="K_ArriveStation2">
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_Cue_departOldStation" exact="K_DepartStation" />
										<do_if value="$isTeleport">
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$teleportTo = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_if>
										<do_else>
											<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$arriveAt = md.Notifications.Init.$kuertee_station_new, $leaveFrom = md.Notifications.Init.$kuertee_station_old]" />
										</do_else>
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation new ' + @md.Notifications.Init.$kuertee_station_new.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation old ' + @md.Notifications.Init.$kuertee_station_old.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_ArriveStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<cancel_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_DockedAtStation">
									<conditions>
										<!-- Event for the specified object docking (object = docking object, param = dock object, param2 = zone) -->
										<event_object_docked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<!-- <raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation player.station ' + @$player.station.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" /> -->
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$dockAt = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_DockedAtStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_DockedAtStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
								<cue name="K_UndockedFromStation">
									<conditions>
										<!-- Event for the specified object undocking (object = undocking object, param = dock, param2 = zone) -->
										<event_object_undocked group="global.$PlayerContainerGroup" />
										<check_value value="event.param.isclass.station" />
										<check_value value="@event.param.macro != @macro.landmarks_par_monument_01_macro" />
										<check_value value="@event.param.macro != @macro.torus_maze_macro" />
									</conditions>
									<actions>
										<set_value name="md.Notifications.Init.$kuertee_station_current" exact="event.param" />
										<signal_objects object="player.entity" param="'K_ArriveAndLeaveStations'" param2="table[$undockFrom = md.Notifications.Init.$kuertee_station_current]" />
										<raise_lua_event name="'Chat_Window_API.Print'" param="'K_UndockedFromStation station_current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<debug_text text="'kuertee K_UndockedFromStation current ' + @md.Notifications.Init.$kuertee_station_current.knownname" chance="@md.Notifications.Init.$kuertee_debugChance" />
										<reset_cue cue="this" />
									</actions>
								</cue>
							</cues>
						</cue>
						<cue name="K_ArriveAndLeaveStations_Debug" namespace="this">
							<conditions>
								<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
								<check_value value="event.param3.$text == 'kuertee debug K_ArriveAndLeaveStations'" />
							</conditions>
							<actions>
								<debug_text text="@event.param3" />
								<raise_lua_event name="'Chat_Window_API.Print'" param="@event.param3.$text" />
								<do_if value="@md.Notifications.Init.$kuertee_debugChance">
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="0" />
								</do_if>
								<do_else>
									<set_value name="md.Notifications.Init.$kuertee_debugChance" exact="100" />
								</do_else>
								<reset_cue cue="this" />
							</actions>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_Init2" namespace="this">
					<conditions>
						<check_any>
							<event_cue_signalled />
							<event_game_loaded />
						</check_any>
					</conditions>
					<actions>
						<!-- save station current -->
						<set_value name="$station_current" exact="@md.Notifications.Init.$kuertee_station_current" />
						<do_if value="not @$station_current.exists">
							<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$kuertee_station_current" />
							<do_if value="not @$station_current.exists">
								<set_value name="$station_current" exact="@K_ArriveAndLeaveStations.$station_current" />
							</do_if>
						</do_if>
						<debug_text text="'$station_current: ' + $station_current + ' (' + @$station_current.knownname + ')'" />
						<do_if value="@md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
							<!-- deregister at every load -->
							<remove_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
						</do_if>
						<set_value name="$initDelay" min="0.0s" max="1.0s" />
						<debug_text text="'$initDelay: ' + $initDelay" />
						<!-- reset cue at every load -->
						<reset_cue cue="K_ArriveAndLeaveStations" />
					</actions>
					<cues>
						<cue name="K_ArriveAndLeaveStations_Init3" checktime="player.age + $initDelay">
							<actions>
								<do_if value="not @md.Notifications.Init.$kuertee_ArriveAndLeaveStations.exists">
									<!-- no K_ArriveAndLeaveStations registered -->
									<!-- register this K_ArriveAndLeaveStations -->
									<set_value name="md.Notifications.Init.$kuertee_ArriveAndLeaveStations" exact="K_ArriveAndLeaveStations" />
									<debug_text text="'$kuertee_ArriveAndLeaveStations: ' + @md.Notifications.Init.$kuertee_ArriveAndLeaveStations" />
								</do_if>
								<do_else>
									<!-- cancel this K_ArriveAndLeaveStations, so only one exists -->
									<debug_text text="'cancel_cue ' + K_ArriveAndLeaveStations" />
									<cancel_cue cue="K_ArriveAndLeaveStations" />
									<reset_cue cue="parent" />
								</do_else>
							</actions>
							<cues>
								<cue name="K_ArriveAndLeaveStations_Init4">
									<actions>
										<do_if value="not @$station_current.exists">
											<find_station name="$station" sortbydistanceto="player.entity" />
											<do_if value="[attention.nearby, attention.adjacentroom, attention.inroom].indexof.{$station.attention}">
												<set_value name="$station_current" exact="$station" />
												<debug_text text="'$station_current (found nearby): ' + $station_current + ' (' + $station_current.knownname + ')'" />
											</do_if>
											<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
										</do_if>
										<do_if value="@$station_current.exists">
											<!-- if there was a $station_current, prepare K_ArriveAndLeaveStations with it -->
											<!-- this is required so that K_DepartStation can continue with $station_current -->
											<!-- <debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" /> -->
											<!-- <signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" /> -->
											<!-- <reset_cue cue="K_ArriveAndLeaveStations_Init2" /> -->
										</do_if>
									</actions>
									<cues>
										<cue name="K_ArriveAndLeaveStations_Init5">
											<actions>
												<debug_text text="'$kuertee_ArriveAndLeaveStations setting for $station_current: ' + $station_current + ' (' + $station_current.knownname + ')'" />
												<signal_cue_instantly cue="K_ArriveStation" param="table[$station = $station_current, $isAlreadyActive = true]" />
												<reset_cue cue="K_ArriveAndLeaveStations_Init2" />
											</actions>
										</cue>
									</cues>
								</cue>
							</cues>
						</cue>
					</cues>
				</cue>
				<cue name="K_ArriveAndLeaveStations_FirstRun2">
					<actions>
						<signal_cue cue="K_ArriveAndLeaveStations_Init2" />
					</actions>
				</cue>
				<cue name="OnModInstallComplete">
					<actions>
						<signal_cue_instantly cue="Init" />
						<set_value name="UserSettings.$debugChance" exact="0" />
						<debug_text text="'UserSettings.$debugChance: ' + UserSettings.$debugChance" />
						<cancel_cue cue="this" />
					</actions>
				</cue>
			</cues>
		</cue>
		<cue name="DebugChat">
			<conditions>
				<event_ui_triggered screen="'Chat_Window_API'" control="'text_entered'" />
				<check_any>
					<check_all>
						<check_any>
							<check_value value="event.param3.$text == 'debug kuertee interval'" />
							<check_value value="event.param3.$text == 'debug em'" />
							<check_value value="event.param3.$text == 'debug em mayday'" />
							<check_value value="event.param3.$text == 'debug em escort'" />
							<check_value value="event.param3.$text == 'debug em raid'" />
							<check_value value="event.param3.$text == 'debug em hunt'" />
							<check_value value="event.param3.$text == 'debug em targets'" />
							<check_value value="event.param3.$text == 'debug em bounties'" />
						</check_any>
					</check_all>
				</check_any>
			</conditions>
			<actions>
				<debug_text text="event.param3" />
				<do_if value="event.param3.$text == 'debug kuertee interval'">
					<do_if value="player.age - @md.$kuertee_interval_time gt 1s">
						<set_value name="md.$kuertee_interval_time" exact="player.age" />
						<do_if value="@md.$kuertee_interval">
							<remove_value name="md.$kuertee_interval" />
						</do_if>
						<do_else>
							<set_value name="md.$kuertee_interval" exact="100" />
						</do_else>
					</do_if>
					<debug_text text="'md.$kuertee_interval: ' + @md.$kuertee_interval" />
				</do_if>
				<do_elseif value="event.param3.$text == 'debug em'">
					<do_if value="UserSettings.$debugChance">
						<set_value name="UserSettings.$debugChance" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance: ' + UserSettings.$debugChance" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em mayday'">
					<do_if value="UserSettings.$debugChance_missionMayday">
						<set_value name="UserSettings.$debugChance_missionMayday" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_missionMayday" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_missionMayday: ' + UserSettings.$debugChance_missionMayday" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em escort'">
					<do_if value="UserSettings.$debugChance_missionEscort">
						<set_value name="UserSettings.$debugChance_missionEscort" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_missionEscort" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_missionEscort: ' + UserSettings.$debugChance_missionEscort" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em raid'">
					<do_if value="UserSettings.$debugChance_missionRaid">
						<set_value name="UserSettings.$debugChance_missionRaid" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_missionRaid" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_missionRaid: ' + UserSettings.$debugChance_missionRaid" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em hunt'">
					<do_if value="UserSettings.$debugChance_missionHunt">
						<set_value name="UserSettings.$debugChance_missionHunt" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_missionHunt" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_missionHunt: ' + UserSettings.$debugChance_missionHunt" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em targets'">
					<do_if value="UserSettings.$debugChance_enemyTargets">
						<set_value name="UserSettings.$debugChance_enemyTargets" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_enemyTargets" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_enemyTargets: ' + UserSettings.$debugChance_enemyTargets" />
				</do_elseif>
				<do_elseif value="event.param3.$text == 'debug em bounties'">
					<do_if value="UserSettings.$debugChance_bounties">
						<set_value name="UserSettings.$debugChance_bounties" exact="0" />
					</do_if>
					<do_else>
						<set_value name="UserSettings.$debugChance_bounties" exact="100" />
					</do_else>
					<raise_lua_event name="'Chat_Window_API.Print'" param="'em $debugChance_bounties: ' + UserSettings.$debugChance_bounties" />
				</do_elseif>
				<reset_cue cue="this" />
			</actions>
		</cue>
	</cues>
</mdscript>
