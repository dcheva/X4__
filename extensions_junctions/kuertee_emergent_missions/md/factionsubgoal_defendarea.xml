<?xml version="1.0" encoding="utf-8" ?>
<diff>
	<!-- prepend
		<library name="Ship_Order_Lib">
			<actions>
	-->
	<add pos="prepend" sel="//library[@name=&quot;Ship_Order_Lib&quot;]/actions">
		<set_value name="$kEMissions_ship" exact="this.$OrderShip" />
		<set_value name="$kEMissions_isShipOk" exact="(not $kEMissions_ship.isplayerowned) and $kEMissions_ship.isclass.[class.ship_l, class.ship_xl]" />
		<set_value name="$kEMissions_isUpdateAllowed" exact="
			$kEMissions_isShipOk and
			@namespace.$kEMissions_mission_isSet and
			@namespace.$kEMissions_mission.exists and
			namespace.$kEMissions_mission.hasmission and
			(
				(not namespace.$kEMissions_mission.$Ship.isoperational) or
				namespace.$kEMissions_mission.$Ship.sector != @namespace.$kEMissions_mission.$SectorTarget
			)
		" />
	</add>
	<!-- add after
		<library name="Ship_Order_Lib">
			<actions>
				<create_order name="this.$PerformingOrder" id="'ProtectPosition'" object="this.$OrderShip" default="true">
					(<param name="destination" value="[$DefendArea.$Sector, $DefendArea.$Position]"/>)
	-->
	<add pos="after" sel="//create_order[@name=&quot;this.$PerformingOrder&quot;][@id=&quot;'ProtectPosition'&quot;]">
		<set_value name="$kEMissions_target_possible" exact="$DefendArea.$Sector" />
		<include_actions ref="kEMissions_CreateOfferOrUpdateMission" />
	</add>
	<!-- add after
		<library name="Ship_Order_Lib">
			<actions>
				<create_order name="this.$PerformingOrder" id="'Attack'" object="this.$OrderShip" immediate="true">
					(<param name="primarytarget" value="$TargetStation"/>)
	-->
	<add pos="after" sel="//create_order[@name=&quot;this.$PerformingOrder&quot;][@id=&quot;'Attack'&quot;]">
		<set_value name="$kEMissions_target_possible" exact="$TargetStation" />
		<include_actions ref="kEMissions_CreateOfferOrUpdateMission" />
	</add>
	<!-- add after
		<library name="Ship_Order_Lib">
			<actions>
				<create_order name="this.$PreparingOrder" id="'ProtectPosition'" object="this.$OrderShip" default="true">
					(<param name="destination" value="[$StagingArea.$Sector, $StagingArea.$Position]"/>)
	-->
	<add pos="after" sel="//create_order[@name=&quot;this.$PreparingOrder&quot;][@id=&quot;'ProtectPosition'&quot;]">
		<set_value name="$kEMissions_target_possible" exact="$StagingArea.$Sector" />
		<include_actions ref="kEMissions_CreateOfferOrUpdateMission" />
	</add>
	<!-- add after
		<library name="Ship_Order_Lib">
	-->
	<add pos="after" sel="//library[@name=&quot;Ship_Order_Lib&quot;]">
		<library name="kEMissions_CreateOfferOrUpdateMission">
			<actions>
				<do_if value="@md.kuertee_emergent_missions.UserSettings.$debugChance_factionAI">
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions $kEMissions_ship: ' + @$kEMissions_ship.knownname + ' (' + @$kEMissions_ship.idcode + ')'" />
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions $kEMissions_isShipOk: ' + @$kEMissions_isShipOk" />
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_mission_isSet: ' + @namespace.$kEMissions_mission_isSet" />
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions $kEMissions_isUpdateAllowed: ' + @$kEMissions_isUpdateAllowed" />
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions $kEMissions_target_possible: ' + @$kEMissions_target_possible + ' (' + @$kEMissions_target_possible.knownname + ', ' + @$kEMissions_target_possible.idcode + ')'" />
				</do_if>
				<do_if value="@$kEMissions_target_possible.isoperational">
					<set_value name="$kEMissions_isNewTarget" exact="$kEMissions_target_possible != @$kEMissions_target_possible_old" />
					<set_value name="$kEMissions_target_possible_old" exact="$kEMissions_target_possible" />
					<do_if value="not $kEMissions_target?">
						<set_value name="$kEMissions_target" exact="null" />
						<set_value name="$kEMissions_targetSector" exact="null" />
					</do_if>
					<do_if value="$kEMissions_target_possible.isclass.sector">
						<set_value name="$kEMissions_target" exact="null" />
						<set_value name="$kEMissions_targetSector" exact="$kEMissions_target_possible" />
					</do_if>
					<do_elseif value="@$kEMissions_target_possible.isclass.[class.ship, class.station]">
						<set_value name="$kEMissions_target" exact="$kEMissions_target_possible" />
						<set_value name="$kEMissions_targetSector" exact="$kEMissions_target_possible.sector" />
					</do_elseif>
					<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions $kEMissions_target: ' + @$kEMissions_target + ' (' + @$kEMissions_target.knownname + ', ' + @$kEMissions_target.idcode + ') $kEMissions_targetSector: ' + $kEMissions_targetSector + ' (' + $kEMissions_targetSector.knownname + ')'" chance="md.kuertee_emergent_missions.UserSettings.$debugChance_factionAI" />
					<do_if value="not @namespace.$kEMissions_mission_isSet">
						<do_if value="$kEMissions_isShipOk">
							<set_value name="namespace.$kEMissions_mission_isSet" exact="true" />
							<signal_cue_instantly cue="md.kuertee_emergent_missions.Missions_SectorRaids_CreateOffer" param="table[
								$ship = $kEMissions_ship,
								$target = $kEMissions_target,
								$targetSector = $kEMissions_targetSector,
								$cue_factionAI = namespace
							]" />
							<do_if value="@namespace.$kEMissions_mission_isSet and md.kuertee_emergent_missions.UserSettings.$debugChance_factionAI">
								<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_mission_isSet: ' + @namespace.$kEMissions_mission_isSet" />
								<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_mission: ' + @namespace.$kEMissions_mission" />
								<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_cue_missionUpdate: ' + @namespace.$kEMissions_cue_missionUpdate + ' state: ' + @namespace.$kEMissions_cue_missionUpdate.state" />
								<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_cue_missionEnd: ' + @namespace.$kEMissions_cue_missionEnd + ' state: ' + @namespace.$kEMissions_cue_missionEnd.state" />
							</do_if>
						</do_if>
					</do_if>
					<do_elseif value="$kEMissions_isUpdateAllowed or $kEMissions_isNewTarget">
						<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_cue_missionUpdate: ' + @namespace.$kEMissions_cue_missionUpdate + ' state: ' + @namespace.$kEMissions_cue_missionUpdate.state" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
						<do_if value="@namespace.$kEMissions_cue_missionUpdate.exists">
							<do_if value="@namespace.$kEMissions_mission.$Ship.isoperational and @namespace.$kEMissions_mission.$Ship.sector == @$kEMissions_targetSector">
								<!-- keep same ship -->
								<set_value name="$kEMissions_ship" exact="namespace.$kEMissions_mission.$Ship" />
							</do_if>
							<signal_cue_instantly cue="namespace.$kEMissions_cue_missionUpdate" param="table[
								$ship = $kEMissions_ship,
								$target = $kEMissions_target,
								$targetSector = $kEMissions_targetSector
							]" />
						</do_if>
					</do_elseif>
				</do_if>
			</actions>
		</library>
	</add>
	<!-- add before
		<cue name="Cleanup">
			<actions>
				<cancel_cue cue="Start"/>
	-->
	<add pos="before" sel="//cancel_cue[@cue=&quot;Start&quot;]">
		<do_if value="@namespace.$kEMissions_mission">
			<debug_text text="'kuertee_emergent_missions isCreateOfferChecked: ' + @namespace.$kEMissions_mission_isCreateOfferChecked + ' kuertee_emergent_missions isAlreadyCleanedUp: ' + @namespace.$kEMissions_mission_isAlreadyCleanedUp" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
			<debug_text text="@namespace.$kEMissions_mission.$MissionId + ' kuertee_emergent_missions namespace.$kEMissions_cue_missionEnd: ' + @namespace.$kEMissions_cue_missionEnd + ' state: ' + @namespace.$kEMissions_cue_missionEnd.state" chance="md.kuertee_emergent_missions.UserSettings.$debugChance" />
			<do_if value="@namespace.$kEMissions_cue_missionEnd.exists and @namespace.$kEMissions_cue_missionEnd.state == cuestate.waiting">
				<signal_cue_instantly cue="namespace.$kEMissions_cue_missionEnd" />
			</do_if>
		</do_if>
	</add>
</diff>
